{"version":3,"sources":["/home/sarunint/dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","__symbolic","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","importAs","reexportSymbol","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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CA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZtxD,yBAA0C,SAAUx8B,QAEpD,QAASw8B,4BACL,GAAIzD,OAAQ/4B,OAAOgjC,KAAKztC,OAASA,IAqCjC,OApCAwjC,OAAMg1D,WACNR,OAAOnxF,QAAQ,SAAU4xF,aACrB,GAAqBryF,SACjBgT,GAAKq/E,YAAYjvF,MAAM,KAAMkvF,QAAUt/E,GAAG,GAAIu/E,cAAgBv/E,GAAG,GAChDw/E,WAAaD,cAAcnvF,MAAM,KAClD+P,GAAKm/E,QAAQlvF,MAAM,KAAMqvF,UAAYt/E,GAAG,GAAIu/E,UAAYv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","file":"/home/sarunint/dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.0-beta.1-69c53c3e03\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.0-beta.1-69c53c3e03\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.0-beta.1-69c53c3e03');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && metadata.expression instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        metadata.expression.expression instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}