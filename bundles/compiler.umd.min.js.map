{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/compiler/esm5/src/ml_parser/tags.js","../../../packages/compiler/esm5/src/ml_parser/html_tags.js","../../../packages/compiler/esm5/src/core.js","../../../packages/compiler/esm5/src/selector.js","../../../packages/compiler/esm5/src/output/output_ast.js","../../../packages/compiler/esm5/src/render3/view/i18n.js","../../../packages/compiler/esm5/src/util.js","../../../packages/compiler/esm5/src/constant_pool.js","../../../packages/compiler/esm5/src/identifiers.js","../../../packages/compiler/esm5/src/aot/static_symbol.js","../../../packages/compiler/esm5/src/compile_metadata.js","../../../packages/compiler/esm5/src/render3/r3_identifiers.js","../../../packages/compiler/esm5/src/render3/view/util.js","../../../packages/compiler/esm5/src/render3/r3_factory.js","../../../packages/compiler/esm5/src/render3/util.js","../../../packages/compiler/esm5/src/injectable_compiler_2.js","../../../packages/compiler/esm5/src/output/source_map.js","../../../packages/compiler/esm5/src/output/abstract_emitter.js","../../../packages/compiler/esm5/src/output/output_jit.js","../../../packages/compiler/esm5/src/output/abstract_js_emitter.js","../../../packages/compiler/esm5/src/render3/r3_jit.js","../../../packages/compiler/esm5/src/render3/r3_module_compiler.js","../../../packages/compiler/esm5/src/output/map_util.js","../../../packages/compiler/esm5/src/render3/r3_pipe_compiler.js","../../../packages/compiler/esm5/src/expression_parser/ast.js","../../../packages/compiler/esm5/src/compiler_util/expression_converter.js","../../../packages/compiler/esm5/src/lifecycle_reflector.js","../../../packages/compiler/esm5/src/chars.js","../../../packages/compiler/esm5/src/parse_util.js","../../../packages/compiler/esm5/src/shadow_css.js","../../../packages/compiler/esm5/src/expression_parser/lexer.js","../../../packages/compiler/esm5/src/style_compiler.js","../../../packages/compiler/esm5/src/assertions.js","../../../packages/compiler/esm5/src/ml_parser/interpolation_config.js","../../../packages/compiler/esm5/src/expression_parser/parser.js","../../../packages/compiler/esm5/src/ast_path.js","../../../packages/compiler/esm5/src/ml_parser/ast.js","../../../packages/compiler/esm5/src/ml_parser/lexer.js","../../../packages/compiler/esm5/src/ml_parser/parser.js","../../../packages/compiler/esm5/src/ml_parser/html_parser.js","../../../packages/compiler/esm5/src/ml_parser/html_whitespaces.js","../../../packages/compiler/esm5/src/schema/dom_security_schema.js","../../../packages/compiler/esm5/src/schema/dom_element_schema_registry.js","../../../packages/compiler/esm5/src/template_parser/binding_parser.js","../../../packages/compiler/esm5/src/render3/r3_ast.js","../../../packages/compiler/esm5/src/style_url_resolver.js","../../../packages/compiler/esm5/src/template_parser/template_preparser.js","../../../packages/compiler/esm5/src/render3/r3_template_transform.js","../../../packages/compiler/esm5/src/render3/view/styling.js","../../../packages/compiler/esm5/src/render3/view/template.js","../../../packages/compiler/esm5/src/render3/view/compiler.js","../../../packages/compiler/esm5/src/jit_compiler_facade.js","../../../packages/compiler/esm5/src/template_parser/template_ast.js","../../../packages/compiler/esm5/src/config.js","../../../packages/compiler/esm5/src/directive_normalizer.js","../../../packages/compiler/esm5/src/directive_resolver.js","../../../packages/compiler/esm5/src/i18n/digest.js","../../../packages/compiler/esm5/src/i18n/i18n_ast.js","../../../packages/compiler/esm5/src/i18n/serializers/placeholder.js","../../../packages/compiler/esm5/src/i18n/i18n_parser.js","../../../packages/compiler/esm5/src/i18n/parse_util.js","../../../packages/compiler/esm5/src/i18n/extractor_merger.js","../../../packages/compiler/esm5/src/ml_parser/xml_tags.js","../../../packages/compiler/esm5/src/ml_parser/xml_parser.js","../../../packages/compiler/esm5/src/i18n/serializers/serializer.js","../../../packages/compiler/esm5/src/i18n/serializers/xml_helper.js","../../../packages/compiler/esm5/src/i18n/serializers/xliff.js","../../../packages/compiler/esm5/src/i18n/serializers/xliff2.js","../../../packages/compiler/esm5/src/i18n/serializers/xmb.js","../../../packages/compiler/esm5/src/i18n/serializers/xtb.js","../../../packages/compiler/esm5/src/i18n/translation_bundle.js","../../../packages/compiler/esm5/src/i18n/i18n_html_parser.js","../../../packages/compiler/esm5/src/output/value_util.js","../../../packages/compiler/esm5/src/injectable_compiler.js","../../../packages/compiler/esm5/src/aot/util.js","../../../packages/compiler/esm5/src/metadata_resolver.js","../../../packages/compiler/esm5/src/provider_analyzer.js","../../../packages/compiler/esm5/src/view_compiler/provider_compiler.js","../../../packages/compiler/esm5/src/ng_module_compiler.js","../../../packages/compiler/esm5/src/ng_module_resolver.js","../../../packages/compiler/esm5/src/output/ts_emitter.js","../../../packages/compiler/esm5/src/pipe_resolver.js","../../../packages/compiler/esm5/src/ml_parser/icu_ast_expander.js","../../../packages/compiler/esm5/src/template_parser/template_parser.js","../../../packages/compiler/esm5/src/view_compiler/type_check_compiler.js","../../../packages/compiler/esm5/src/view_compiler/view_compiler.js","../../../packages/compiler/esm5/src/i18n/message_bundle.js","../../../packages/compiler/esm5/src/aot/generated_file.js","../../../packages/compiler/esm5/src/aot/lazy_routes.js","../../../packages/compiler/esm5/src/aot/static_symbol_resolver.js","../../../packages/compiler/esm5/src/aot/summary_serializer.js","../../../packages/compiler/esm5/src/aot/compiler.js","../../../packages/compiler/esm5/src/aot/formatted_error.js","../../../packages/compiler/esm5/src/aot/static_reflector.js","../../../packages/compiler/esm5/src/aot/summary_resolver.js","../../../packages/compiler/esm5/src/aot/compiler_factory.js","../../../packages/compiler/esm5/src/summary_resolver.js","../../../packages/compiler/esm5/src/output/output_interpreter.js","../../../packages/compiler/esm5/src/jit/compiler.js","../../../packages/compiler/esm5/src/url_resolver.js","../../../packages/compiler/esm5/src/resource_loader.js","../../../packages/compiler/esm5/src/i18n/extractor.js","../../../packages/compiler/esm5/src/render3/view/t2_binder.js"],"names":["exports","module","factory","extendStatics","d","b","__proto__","Array","p","hasOwnProperty","__","this","constructor","Object","create","prototype","TagContentType","assign","t","s","i","n","arguments","length","call","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","not","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","prop","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","zwj","zwnj","_DEFAULT_TAG_DEFINITION","HtmlTagDefinition","_a","_b","closedByChildren","requiredParents","implicitNamespacePrefix","_c","contentType","PARSABLE_DATA","_d","closedByParent","_e","isVoid","_f","ignoreFirstLf","_this","canSelfClose","forEach","parentToAdd","requireExtraParent","currentParent","lcParent","toLowerCase","isClosedByChild","name","base","meta","area","embed","link","img","input","param","hr","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","RAW_TEXT","script","title","ESCAPABLE_RAW_TEXT","ViewEncapsulation","ChangeDetectionStrategy","attrs","notSelectors","parse","selector","match","_addResult","res","cssSel","element","classNames","push","cssSelector","CssSelector","lastIndex","_SELECTOR_REGEXP","exec","inNot","current","setElement","addClassName","addAttribute","results","isElementSelector","hasElementSelector","getMatchingElementTemplate","classAttr","join","getHtmlTagDefinition","getAttrs","result","concat","value","toString","klass","name_1","SelectorMatcher","_elementMap","Map","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","SelectorContext","isTerminal","_addTerminal","selectable","_addPartial","className","name_2","terminalMap","terminalValuesMap","get","set","partialMap","partialValuesMap","map","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","selectors","cbContext","callback","createInject","tslib_1.__assign","token","createInjectionToken","makeMetadataFactory","desc","_desc","ngInjectableDef","undefined","createAttribute","attributeName","createContentChildren","data","__assign","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","createDirective","dir","SecurityContext","MissingTranslationStrategy","createComponent","c","changeDetection","Default","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","args","createNgModule","ngModule","createInjectable","injectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","Type","Function","props","_i","values","apply","ngMetadataName","isTypeOf","obj","parserSelectorToR3Selector","positive","classes","parserSelectorToSimpleSelector","negative","notSelector","TypeModifier","BuiltinTypeName","modifiers","hasModifier","modifier","tslib_1.__extends","BinaryOperator","_super","BuiltinType","visitType","visitor","context","visitBuiltinType","ExpressionType","typeParams","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","Type$1","DYNAMIC_TYPE","Dynamic","INFERRED_TYPE","Inferred","BOOL_TYPE","Bool","NUMBER_TYPE","Int","Number","NONE_TYPE","String","None","nullSafeIsEquivalent","other","isEquivalent","areAllEquivalent","len","BuiltinVar","Expression","type","sourceSpan","ReadPropExpr","key","index","ReadKeyExpr","callMethod","params","InvokeMethodExpr","callFn","InvokeFunctionExpr","instantiate","InstantiateExpr","conditional","falseCase","ConditionalExpr","trueCase","equals","rhs","BinaryOperatorExpr","Equals","notEquals","NotEquals","identical","Identical","notIdentical","NotIdentical","Minus","plus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","bitwiseAnd","parens","BitwiseAnd","Or","lower","Lower","lowerEquals","LowerEquals","bigger","Bigger","BiggerEquals","isBlank","TYPED_NULL_EXPR","cast","CastExpr","toStmt","ExpressionStatement","BuiltinMethod","ReadVarExpr","builtin","e","isConstant","visitExpression","visitReadVarExpr","WriteVarExpr","TypeofExpr","expr","visitTypeofExpr","WrappedNodeExpr","node","visitWrappedNodeExpr","visitWriteVarExpr","toDeclStmt","DeclareVarStmt","toConstDecl","StmtModifier","Final","WriteKeyExpr","receiver","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","method","visitInvokeMethodExpr","fn","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","LiteralExpr","visitLiteralExpr","ExternalExpr","moduleName","runtime","visitExternalExpr","condition","visitConditionalExpr","NotExpr","visitNotExpr","AssertNotNull","visitAssertNotNullExpr","visitCastExpr","FnParam","FunctionExpr","statements","visitFunctionExpr","DeclareFunctionStmt","operator","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","LiteralArrayExpr","entries","every","visitLiteralArrayExpr","LiteralMapEntry","quoted","LiteralMapExpr","visitLiteralMapExpr","CommaExpr","parts","visitCommaExpr","NULL_EXPR","This","Super","CatchError","CatchStack","Statement","stmt","visitStatement","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","ReturnStatement","visitReturnStmt","AbstractClassPart","ClassField","initializer","f","ClassMethod","body","m","ClassGetter","ClassStmt","parent","fields","getters","constructorMethod","methods","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","comment","multiline","visitCommentStmt","JSDocCommentStmt","tags","visitJSDocCommentStmt","out","tags_1","tag","tagToString","replace","serializeTags","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","error","visitThrowStmt","AstTransformer","transformExpr","transformStmt","ast","visitAllExpressions","visitAllStatements","entry","mapType","exprs","getter","ctorMethod","stmts","RecursiveAstVisitor","findReadVarNames","_ReadVarVisitor","varNames","Set","add","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","transformer","_ApplySourceSpanTransformer","applySourceSpanToExpressionIfNeeded","_clone","clone","variable","importExpr","id","importType","typeModifiers","expressionType","literalArr","literalMap","ifStmt","thenClause","elseClause","literal","text","I18N_ID_SEPARATOR","I18N_PLACEHOLDER_SYMBOL","parseI18nMeta","meaning","description","idIndex","descIndex","I18N_MEANING_SEPARATOR","meaningAndDesc","wrapI18nPlaceholder","content","contextId","assembleI18nBoundString","strings","bindingStartIndex","acc","lastIdx","I18nContext","templateIndex","ref","level","uniqueIdGen","bindings","getSeqNumberGenerator","wrap","symbol","elementIndex","closed","append","genTemplatePattern","templateId","getId","getRef","getIndex","getContent","getTemplateIndex","getBindings","appendBinding","binding","isRoot","isResolved","RegExp","test","appendText","trim","appendTemplate","appendElement","forkChildContext","reconcileChildContext","pattern","splitAtColon","defaultValues","_splitAt","character","characterIndex","visitValue","isArray","visitArray","getPrototypeOf","STRING_MAP_PROTO","visitStringMap","visitPrimitive","visitOther","isDefined","val","noUndefined","ValueTransformer","arr","keys","isPromise","cb","then","syncAsyncValues","some","Promise","all","msg","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","escapeRegExp","encoded","str","codePoint","charCodeAt","low","fromCharCode","stringify","overriddenName","newLineIndex","substring","resolveForwardRef","full","splits","split","major","minor","patch","__self","self","WorkerGlobalScope","FixupExpression","resolved","KEY_CONTEXT","original","o.Expression","fixup","expression","ConstantPool","translations","deferredTranslations","literals","literalFactories","injectorDefinitions","directiveDefinitions","o.LiteralExpr","getConstLiteral","literal$$1","forceShared","keyOf","newValue","shared","freshName","getDeferredTranslationConst","suffix","variable$$1","freshTranslationName","o.variable","o.literal","message","o.INFERRED_TYPE","getTranslationDeclStmt","fnCall","appendTranslationMeta","o.JSDocCommentStmt","getTranslation","parsedMeta","exp","getDefinition","kind","ctx","definitions","definitionsOf","property","propertyNameOf","getLiteralFactory","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","literalFactory","literalFactoryArguments","filter","o.StmtModifier","pureFunctionDeclaration","resultExpressions","isVariable","uniqueName","prefix","nextNameIndex","componentDefinitions","pipeDefinitions","toUpperCase","KeyVisitor","invalid","quote","mapKey","arg","Identifiers","ANALYZE_FOR_ENTRY_COMPONENTS","CORE","ElementRef","NgModuleRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","Renderer2","CodegenComponentFactoryResolver","ComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","inject","INJECTOR","Injector","defineInjectable","InjectableDef","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","providerDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","nodeValue","ngContentDef","unwrapValue","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","setClassMetadata","createTokenForReference","reference","StaticSymbol","filePath","members","assertNoMembers","StaticSymbolCache","cache","declarationFile","HOST_REG_EXP","sanitizeIdentifier","CompileSummaryKind","_anonymousTypeIndex","identifierName","compileIdentifier","identifier","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","moduleUrl","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","isInline","preserveWhitespaces","_normalizeArray","flatten","toSummary","CompileDirectiveMetadata","isHost","isComponent","exportAs","inputs","outputs","hostListeners","hostProperties","hostAttributes","providers","viewProviders","queries","guards","viewQueries","entryComponents","componentViewType","rendererType","componentFactory","host","matches","bindConfig","inputsMap","outputsMap","summaryKind","Directive","CompilePipeMetadata","Pipe","CompileNgModuleMetadata","declaredDirectives","exportedDirectives","declaredPipes","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","transitiveModule","NgModule","modules","TransitiveCompileNgModuleMetadata","directivesSet","directives","exportedDirectivesSet","pipesSet","pipes","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","provider","addDirective","has","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","useClass","useValue","useExisting","useFactory","deps","multi","dependencies","list","reduce","flat","item","jitSourceUrl","url","compMeta","ngModuleType","templateMeta","sharedStylesheetJitUrl","pathParts","ngModuleJitUrl","moduleMeta","CORE$1","Identifiers$1","NEW_METHOD","TRANSFORM_METHOD","PATCH_DEPS","namespaceHTML","namespaceMathML","namespaceSVG","elementStart","elementEnd","elementProperty","elementAttribute","elementClassProp","elementContainerStart","elementContainerEnd","elementStyling","elementStylingMap","elementStyleProp","elementStylingApply","containerCreate","nextContext","templateCreate","textBinding","bind","enableBindings","disableBindings","getCurrentView","restoreView","interpolation1","interpolation2","interpolation3","interpolation4","interpolation5","interpolation6","interpolation7","interpolation8","interpolationV","pureFunction0","pureFunction1","pureFunction2","pureFunction3","pureFunction4","pureFunction5","pureFunction6","pureFunction7","pureFunction8","pureFunctionV","pipeBind1","pipeBind2","pipeBind3","pipeBind4","pipeBindV","i18nAttribute","i18nExp","i18nStart","i18nEnd","i18nApply","load","loadQueryList","pipe","projection","projectionDef","injectAttribute","directiveInject","templateRefExtractor","defineBase","BaseDef","defineComponent","ComponentDefWithMeta","defineDirective","DirectiveDefWithMeta","InjectorDef","defineInjector","NgModuleDefWithMeta","defineNgModule","PipeDefWithMeta","definePipe","query","queryRefresh","registerContentQuery","NgOnChangesFeature","InheritDefinitionFeature","ProvidersFeature","listener","getFactoryOf","getInheritedFactory","sanitizeHtml","sanitizeStyle","defaultStyleSanitizer","temp","TEMPORARY_NAME","unsupported","feature","o.constructor.name","invalid$1","o.literalArr","asLiteral","conditionallyCreateMapObjectLiteral","getOwnPropertyNames","mapToExpression","trimTrailingNulls","parameters","pop","R3FactoryDelegateType","DefinitionMap","getAttrsForDirectiveMatching","elOrTpl","attributesMap","attributes","a","I18N_ATTR","startsWith","I18N_ATTR_PREFIX","typeForCtor","isDelegatedMetadata","ctorExpr","injectDependencies","injectFn","baseFactory","baseFactoryStmt","Exported","ctorExprFinal","o.NULL_EXPR","retExpr","makeConditionalFactory","nonCtorExpr","r","o.importExpr","R3","delegateType","Factory","delegateFactory","delegate","delegateFactoryStmt","delegateArgs","delegateDeps","Class","extraStatementFn","o.FnParam","extraStmts","R3ResolvedDependencyType","dep","injectArgs","optional","Attribute","reflector","resolveExternalReference","dependency","isAttribute","Token","tokenRef","outputCtx","isOptional","isSelf","skipSelf","isSkipSelf","convertMetaToOutput","compileInjectable","factoryMeta","useClassOnSelf","userDeps","ctorDeps","compileFactoryFunction","providedIn","mapToMapExpression","SourceMapGenerator","file","lines","lastCol0","hasMappings","addSource","sourcesContent","addLine","addMapping","col0","sourceUrl","sourceLine0","sourceCol0","currentLine","defineProperty","enumerable","toJSON","sourcesIndex","sources","from","mappings","lastSourceIndex","segments","toBase64VLQ","segment","segAsStr","lastSourceLine0","lastSourceCol0","version","sourceRoot","toJsComment","b64","utf8Encode","i1","i2","i3","toBase64Digit","isNaN","toBase64String","JSON","digit","B64_DIGITS","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","indent","partsLength","srcSpans","EmitterVisitorContext","_indent","_classes","_preambleLineCount","_lines","_EmittedLine","createRoot","configurable","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","_INDENT_WITH","part","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","toSource","sourceLines","l","_createIndent","toSourceMapGenerator","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","line","lineIdx","spans","spanIdx","source","span","start","sourceLine","sourceCol","setPreambleLineCount","count","spanOf","column","emittedLine","partIndex","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","o.BuiltinVar","varName","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","escapeIdentifier","opStr","o.BinaryOperator","visitAllObjects","expressions","separator","handler","incrementedIndent","escapeDollar","alwaysQuote","jitStatements","createSourceMaps","converter","JitEmitterVisitor","createReturnStmt","vars","createSourceMap","fnBody","fnArgNames","fnArgValues","emptyFn","headerLines","evalExpression","getArgs","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","_emitReferenceToExternal","AbstractJsEmitterVisitor","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","o.ReadVarExpr","fnExpr","currentClass","o.BuiltinMethod","ConcatArray","SubscribeObservable","Bind","R3JitReflector","typeOrFunc","annotations","shallowAnnotations","tryAnnotations","propMetadata","jitExpression","o.DeclareVarStmt","preStatements","bootstrap","declarations","imports","moduleType","o.ExpressionType","tupleTypeOf","additionalStatements","compileInjector","compileNgModuleFromRender2","injectableCompiler","rawImports","rawExports","injectorDefArg","factoryFor","rawProviders","Static","injectorDef","o.expressionType","compilePipeFromMetadata","metadata","definitionMapValues","pipeName","templateFactory","errLocation","ctxLocation","ParseSpan","end","AST","visit","Quote","uninterpretedExpression","location","visitQuote","EmptyExpr","ImplicitReceiver","Chain","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","NonNullAssert","visitNonNullAssert","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","target","visitFunctionCall","ASTWithSource","errors","keyIsVar","NullAstVisitor","visitImplicitReceiver","visitAll","asts","AstMemoryEfficientTransformer","modified","ParsedPropertyType","isLiteral","LITERAL_ATTR","isAnimation","ANIMATION","targetOrPhase","securityContext","unit","EventHandlerVars","ConvertActionBindingResult","render3Stmts","statement","allowDefault","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","o.literalMap","k","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","output","_Mode","temporaryCount","unshift","temporaryDeclaration","returnExpr","convertStmtIntoExpression","preventDefaultVar","createPreventDefaultVar","converterFactory","_BuiltinAstConverter","convertBuiltins","ConvertPropertyBindingResult","currValExpr","convertPropertyBinding","expressionWithoutBuiltins","form","createCurrValueExpr","outputExpr","BindingForm","TrySimple","temporaryName","temporaryNumber","ensureExpressionMode","mode","convertToStatementIfNeeded","_converterFactory","BuiltinFunctionCall","createLiteralArrayConverter","cdAst.AstTransformer","createLiteralMapConverter","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","op","_visit","ensureStatementMode","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","o.DYNAMIC_TYPE","varExpr","o.ReadPropExpr","localExpr","guardedExpression","needsTemporary","temporary","allocateTemporary","cdAst.SafeMethodCall","access","visitSome","tempNumber","Math","max","releaseTemporary","event","LifecycleHooks","cdAst.FunctionCall","LIFECYCLE_HOOKS_VALUES","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","hasLifecycleHook","hook","getHookName","$EOF","$TAB","$LF","$VTAB","$FF","$CR","$SPACE","$DQ","$$","$SQ","$PLUS","$MINUS","$SLASH","$SEMICOLON","$EQ","$GT","$0","$9","$A","$E","$F","$Z","$_","$a","$e","$f","$n","$r","$t","$v","$NBSP","$BT","isWhitespace","code","isDigit","isAsciiLetter","ParseErrorLevel","ParseLocation","offset","moveBy","chars.$LF","ch","priorLine","substr","lastIndexOf","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","ParseSourceFile","ParseSourceSpan","details","ParseError","ERROR","contextualMessage","typeSourceSpan","identifierModuleUrl","shimCssText","cssText","hostSelector","commentsWithHash","_commentWithHashRe","_commentRe","stripComments","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_cssContentNextSelectorRe","_insertPolyfillRulesInCssText","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_colonHostPartReplacer","_shadowDOMSelectorsRe","_scopeSelectors","ruleCallback","rule","_scopeSelector","strictStyling","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","CLOSE_CURLY","currentBlockParts","BLOCK_PLACEHOLDER","OPEN_CURLY","bracketCount","escapeBlocks","inputWithEscapedBlocks","escapedString","_ruleRe","contentPrefix","blocks","nextBlockIndex","strict","_shadowDeepSelectors","deepParts","otherParts","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","applyScope","_makeScopeMatcher","_selectorReSuffix","ShadowCss","_applySimpleSelectorScope","_polyfillHostNoCombinatorRe","hnc","_","colon","replaceBy_1","_scopeSelectorPart","scopedP","_polyfillHostRe","attrName","safeContent","SafeSelector","shouldScope","sep","part_1","startIndex","scopedSelector","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","placeholders","keep","replaceBy","_content","pseudo","ph","_parenSuffix","_cssColonHostRe","StringWithEscapedBlocks","TokenType","setValue","stylesVar","isShimmed","StyleCompiler","_urlResolver","_shadowCss","compileComponent","comp","_compileStyles","CompileStylesheetMetadata","needsStyleShim","compileStyles","stylesheet","shim","Emulated","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","styleUrl","StylesCompileDependency","getStylesVarName","exprIndex","Const","CompiledStylesheet","CONTENT_ATTR","HOST_ATTR","component","Lexer","tokenize","scanner","_Scanner","tokens","scanToken","numValue","strValue","isCharacter","Character","isNumber","isString","isOperator","Operator","isIdentifier","Identifier","isKeyword","Keyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","newCharacterToken","newOperatorToken","peek","advance","chars.$EOF","chars.isDigit","isIdentifierStart","chars.$PERIOD","scanIdentifier","chars.$LBRACE","chars.$RBRACE","scanNumber","chars.$LBRACKET","chars.$COLON","chars.$HASH","scanCharacter","chars.$MINUS","chars.$STAR","scanString","chars.$CARET","scanOperator","scanComplexOperator","chars.$AMPERSAND","one","twoCode","two","threeCode","three","isIdentifierPart","KEYWORDS","newIdentifierToken","isExponentSign","simple","parseInt","parseIntAutoRadix","parseFloat","buffer","marker","unescapedCode","hex","unescape","last","position","newErrorToken","$z","chars.isAsciiLetter","isQuote","assertArrayOfStrings","INTERPOLATION_BLACKLIST_REGEXPS","assertInterpolationSymbols","regexp","start_1","end_1","InterpolationConfig","fromArray","markers","DEFAULT_INTERPOLATION_CONFIG","offsets","templateBindings","warnings","_createInterpolateRegExp","config","Parser","_lexer","parseAction","interpolationConfig","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","ParserError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","tplKey","tplValue","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","SplitInterpolation","wrapLiteralPrimitive","_commentStart","chars.$SLASH","char","nextChar","outerQuote","partInErrIdx","j","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","EOF","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","expectOperator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","isKeywordThis","elements","parseExpressionList","$LBRACE","parseLiteralMap","toNumber","literalValue","chars.$COMMA","terminator","isSafe","chars.$RPAREN","positionals","expectTemplateBindingKey","operatorFound","firstBinding","rawKey","isVar","TemplateBinding","letStart","letName","TemplateBindingParseResult","locationText","skip","isError","AstPath","path","parentOf","childOf","ctor","Text","visitText","Expansion","switchValue","cases","switchValueSourceSpan","visitExpansion","ExpansionCase","valueSourceSpan","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","Element","children","startSourceSpan","endSourceSpan","visitElement","Comment","visitComment","nodes","astResult","TokenType$1","RecursiveVisitor","visitChildren","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","_ControlFlowError","_Tokenizer","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","srcTokens","lastDstToken","TEXT","isExpansionFormStart","_input","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_beginToken","_currentTokenStart","_currentTokenType","_endToken","Token$1","_createError","_advance","_length","_attemptCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","_requireCharCode","_attemptStr","chars","_savePosition","_restorePosition","initialPosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isNamedEntityEnd","isHex","numberStart","isDigitEntityEnd","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","chars.$SEMICOLON","nameStart","nameOrPrefixStart","isNameEnd","lowercaseTagName","_consumeTagOpenStart","isNotWhitespace","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","savedPos","contentTokenType","_consumeRawTextWithTagClose","chars.$LT","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","valueStart","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","chars.isWhitespace","chars.$a","isAsciiHexDigit","isInterpolationStart","TreeError","ParseTreeResult","rootNodes","getTagDefinition","lex.tokenize","parseExpansionForms","tokensAndErrors","tokenizeExpansionForms","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","lex.TokenType","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","html.Expansion","_parseExpansionCase","lex.Token","parsedExp","html.ExpansionCase","_collectExpansionExpTokens","expansionFormStack","lastOnStack","parent_1","_getParentElement","el","startTagToken","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","_consumeAttr","mergeNsAndName","valueToken","localName","parentElement","HtmlParser","PRESERVE_WS_ATTR_NAME","SKIP_WS_TRIM_TAGS","WS_CHARS","attribute","html.Text","NO_WS_REGEXP","replaceNgsp","WS_REPLACE_REGEXP","WhitespaceVisitor","html.visitAll","expansion","expansionCase","registerContext","HTML","STYLE","URL","RESOURCE_URL","_SECURITY_SCHEMA","specs","SCHEMA","_ATTR_TO_PROP","class","for","formaction","readonly","DomElementSchemaRegistry","_schema","encodedType","strType","properties","typeNames","superName","superType","BOOLEAN","NUMBER","OBJECT","STRING","hasProperty","propName","schemaMetas","schema","hasElement","getMappedPropName","SECURITY_SCHEMA","NONE","getDefaultComponentElementName","validateProperty","validateAttribute","allKnownElementNames","normalizeAnimationStyleProperty","DASH_CASE_REGEXP","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","valAndSuffixMatch","strVal","BindingParser","_exprParser","_schemaRegistry","pipesByName","_usedPipes","pipesByName_1","getUsedPipes","createBoundHostProperties","dirMeta","parsePropertyBinding","boundProps_1","createDirectiveHostPropertyAsts","elementSelector","boundProps","createBoundElementProperty","createDirectiveHostEventAsts","parseEvent","targetEvents_1","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","ParsedVariable","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","WARNING","_parseAnimation","ParsedProperty","isAnimationProp","isAnimationLabel","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","BoundElementProperty","bindingType","boundPropertyName","_validatePropertyOrAttributeName","calcPossibleSecurityContexts","nsSeparatorIdx","securityContexts","targetEvents","_parseAnimationEvent","_parseRegularEvent","phase","_parseAction","ParsedEvent","error$$1","errors_1","PipeCollector","collector","pipeMeta","isAttr","report","registry","ctxs","elementNames","notElementNames","Text$1","BoundText","visitBoundText","TextAttribute","visitTextAttribute","BoundAttribute","fromBoundElementProperty","visitBoundAttribute","BoundEvent","fromParsedEvent","visitBoundEvent","references","Template","variables","visitTemplate","Content","selectorIndex","visitContent","Variable","visitVariable","Reference","visitReference","nodes_1","newNode","nodes_2","StyleWithImports","isStyleUrlResolvable","PreparsedElementType","NG_CONTENT_SELECT_ATTR","LINK_ELEMENT","LINK_STYLE_REL_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_VALUE","STYLE_ELEMENT","SCRIPT_ELEMENT","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","preparseElement","selectAttr","hrefAttr","relAttr","attr","lcAttrName","projectAs","normalizeNgContentSelect","OTHER","nodeName","NG_CONTENT","SCRIPT","STYLESHEET","PreparsedElement","nonBindable","htmlAstToRender3Ast","htmlNodes","bindingParser","HtmlAstToIvyAst","ivyNodes","allErrors","hasNgContent","preparsedElement","isTemplateElement","parsedProperties","boundEvents","templateParsedProperties","templateVariables","normalizedName","normalizeAttributeName","elementHasInlineTemplate","reportError","isTemplateBinding","templateValue","templateKey","parsedVariables","v","hasBinding","parseAttribute","NON_BINDABLE_VISITOR","isEmptyTextNode","t.Content","parsedElement","t.Template","attributes_1","extractAttributes","bound","t.TextAttribute","t.BoundText","t.Text","valueNoNgsp","bep","matchableAttributes","srcSpan","BIND_NAME_REGEXP","bindParts","parseVariable","parseReference","events","addEvents","parseAssignmentEvent","NonBindableVisitor","qS","tempValue","renderFlagCheckIfStmt","flags","RENDER_FLAGS","TemplateDefinitionBuilder","constantPool","parentBindingScope","contextName","i18nContext","templateName","directiveMatcher","pipeTypeByName","_namespace","relativeContextFilePath","_nestedTemplateFns","_pureFunctionSlots","_bindingSlots","_dataIndex","_bindingScope","nestedScope","fileBasedI18nSuffix","_valueConverter","ValueConverter","allocateDataSlot","numSlots","allocatePureFunctionSlots","slot","pipeType","creationInstruction","registerContextVariables","scopedName","freshReferenceName","retrievalLevel","scope","relativeLevel","bindingLevel","CONTEXT_NAME","sharedCtxVar","generateNextContextExpr","buildTemplateFunction","r3Selectors","parseSelectorToR3Selector","parsed","unParsed","updatePipeSlotOffsets","buildTemplateFn","creationStatements","_creationCodeFns","fn$$1","updateStatements","_updateCodeFns","creationVariables","viewSnapshotStatements","updateVariables","variableDeclarations","_tempVariables","creationBlock","updateBlock","o.NUMBER_TYPE","_prefixCode","i18nTranslate","label","i18nAppendTranslationMeta","i18nAllocateRef","i18nUpdateRef","setDeferredTranslationConst","i18n","size","updateInstruction","ngContent","attributeAsList","getNamespaceInstruction","namespaceKey","addNamespaceInstruction","nsInstruction","isNonBindableMode","checkIsNgContainer","attrI18nMetas","i18nMeta","isNgContainer$$1","isI18nRootElement","matchDirectives","initialStyleDeclarations","initialClassDeclarations","styleInputs","isClassBinding","i18nAttrs","allOtherInputs","classInputs","currStyleIndex","currClassIndex","staticStylesMap","staticClassesMap","outputAttrs","parenDepth","propStart","valueHasQuotes","currentProp","hyphenate","styleVal","stripUnnecessaryQuotes","parseStyle","stylesIndexMap","classesIndexMap","hasMapBasedStyling","useDefaultStyleSanitizer","isStyleSanitizable","prepareSyntheticAndSelectOnlyAttrs","prepareRefsParameter","wasInNamespace","currentNamespace","implicit","hasStylingInstructions","find","child","createSelfClosingInstruction","hasBindings_1","converted","convertExpressionBinding","i18nAttrArgs_1","paramsList","outputAst","prepareListenerParameter","indexLiteral_1","firstStyle","stylingInput","mapBasedStyleInput_1","mapBasedClassInput","mapBasedClassValue_1","mapBasedStyleValue_1","_loop_1","this_1","styleIndex","sanitizationRef","resolveSanitizationFn","classIndex","this_2","valueLiteral","_loop_2","lastInputCommand","o.ifStmt","mapBindingToInstruction","value_1","prepareSyntheticAttributeName","params_1","allocateBindingSlots","value_2","instruction","_unsupported","elName","Element$1","o.TYPED_NULL_EXPR","attrsExprs","toAttrsParam","templateVisitor","templateFunctionExpr","getVarCount","value_3","implicit_1","nodeIndex","bindingContext","_bindingContext","instructionFn","fns","paramsOrFn","originalSlots","valExpr","skipBindFn","convertedPropertyBinding","interpolationFn","staticType","attrExprs","EMPTY_STRING_EXPR_1","nonSyntheticInputs","o","refsParam","variableName","nextContextStmt","refExpr","evNameSanitized","tagNameSanitized","functionName","o.fn","listenerScope","bindingExpr","restoreViewStatement","allocateSlot","slotPseudoLocal","pureFunctionSlot","pipeBindingIdentifiers","pipeBindingCallInfo","isVarLength","pipeBindExpr","bindingSlots","_pipeBindExprs","array","pureFunctionIdentifiers","relativeLevelDiff","allocateSlots","startSlot","pureFunctionCallInfo","referenceNameIndex","BindingScope","_ROOT_SCOPE","declareLocalCallback","priority","maybeGenerateSharedContextVar","maybeRestoreView","declare","newScope","generateSharedContextVar","getSharedContextName","sharedCtxObj","getComponentProperty","componentValue","SHARED_CONTEXT_KEY","isListenerScope","restoreViewVariable","getCurrentViewInstruction","currentContextLevel","sort","levelDiff","currStmts","parseTemplate","options","makeBindingParser","parseResult","core.SecurityContext","sanitizeScript","sanitizeUrl","sanitizeResourceUrl","baseDirectiveFields","eventBindings","metadataAsSummary","instance","bindingName","typeName","createHostListeners","definitionMap","queryDefinition","createQueryDefinition","createContentQueriesFunction","statements_1","temporary_1","temporaryAllocator","directiveInstanceVar_1","idx","loadQLArg","getQueryList","assignToTemporary","callQueryRefresh","propertyName","refreshQueryAndUpdateDirective","updateDirective","createContentQueriesRefreshFunction","hostVars","hostBindingSourceSpan","directiveSummary","bindings_1","valueConverter","createHostBindingsFunction","slots","createHostAttributesArray","addFeatures","features","usesInheritance","lifecycle","usesOnChanges","toLiteralMap","firstSelector","selectorAttributes","matcher_1","tempAllocator","createStatements","refresh","viewQueryFnName","createViewQueriesFunction","templateTypeName","pipesUsed","templateBuilder","ROOT_SCOPE","directivesUsed","templateFunctionExpression","getConstCount","directivesExpr","pipesExpr","directiveMetadataFromGlobalMetadata","directive","summary","typeArgumentCount","dependenciesFromGlobalMetadata","queriesFromGlobalMetadata","lifecycleHooks","listeners","read","selectorStrings","predicate_1","getQueryPredicate","stringAsType","createTypeForDef","typeBase","selectorForType","numParams","typeWithParameters","stringMapAsType","q","getBindingNameAndInstruction","ATTR_REGEX","attrMatches","typeMapToExpressionMap","HOST_REG_EXP$1","parseHostBindings","CompilerFacadeImpl","compilePipe","angularCoreEnv","sourceMapUrl","facade","convertR3DependencyMetadataArray","wrapExpression","USE_CLASS","USE_FACTORY","USE_VALUE","USE_EXISTING","compileNgModule","wrapReference","emitInline","compileDirective","convertDirectiveFacadeToMetadata","err","compileComponentFromMetadata","convertToR3QueryMetadata","wrapDirectivesAndPipesInClosure","wrapped","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","field","ann","inputsFromType","isOutput","outputsFromType","isHostListener","extractHostBindings","convertR3DependencyMetadata","facades","piece","ProviderAstType","TextAst","ngContentIndex","BoundTextAst","AttrAst","visitAttr","BoundPropertyMapping","BoundElementPropertyAst","fromBoundProperty","BoundEventAst","calcFullName","ReferenceAst","originalValue","VariableAst","fromParsedVariable","ElementAst","hasViewContainer","queryMatches","EmbeddedTemplateAst","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostEvents","contentQueryStartId","ProviderAst","multiProvider","eager","providerType","isModule","NgContentAst","NullTemplateVisitor","visitNgContent","visitEmbeddedTemplate","visitEvent","visitElementProperty","RecursiveTemplateAstVisitor","__extends","visitDirective","templateVisitAll","defaultEncapsulation","useJit","jitDevMode","missingTranslation","strictInjectionParameters","preserveWhitespacesDefault","DirectiveNormalizer","_resourceLoader","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","delete","_fetch","normalizeTemplate","prenormData","SyncAsync","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","resolve","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateSourceUrl","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_inlineStyles","stylesheets","targetStyles","_loadMissingExternalStylesheets","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","resolver","baseUrl","styleWithImports","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","foundUrls","ngNonBindableStackCount","textContent_1","QUERY_METADATA_IDENTIFIERS","DirectiveResolver","_reflector","isDirective","typeMetadata","isDirectiveMetadata","throwIfNotFound","findLast","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_dedupeBindings","names","publicNames","reversedResult","_extractPublicName","reverse","mergedInputs","mergedOutputs","mergedHost","moduleId","mergedQueries","digest","utf8","words32","endian","wordAt","stringToWords32","Endian","Big","w","h0","h1","h2","h3","h4","rol32","fk","add32","byteStringToHexString","words32ToByteString","sha1","decimalDigest","fingerprint","hi","lo","him","lom","ah","al","bh","bl","add32to64","carry","add64","rol64","decimal","toThePower","numberTimesBigInt","byteStringToDecString","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","startName","closeName","visitPlaceholder","visitIcuPlaceholder","_SerializerIgnoreIcuExpVisitor","hash32","mix","Little","sub32","high","byteAt","word","word32ToByteString","addBigInt","x","y","tmpSum","num","product","bToThePower","placeholderToMessage","startLine","startCol","endLine","endCol","Text$2","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","getUniquePlaceholder","_expParser","_I18nVisitor","_expressionParser","toI18nMessage","_isIcu","_icuDepth","i18n.Message","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","Message","startPhName","closePhName","i18n.TagPlaceholder","_visitTextWithInterpolation","i18n.Icu","i18nIcuCases","i18nIcu","phName","icuCase","sDelimiter","eDelimiter","i18n.Placeholder","lastStringIdx","I18nError","_I18N_ATTR","ID_SEPARATOR","i18nCommentsWarned","ExtractionResult","messages","_implicitAttrs","extract","_init","_VisitorMode","Extract","_messages","merge","Merge","_translations","translatedNode","_inI18nBlock","_mode","_inIcu","_addMessage","wasInIcu","isOpening","_isInTranslatableSection","isClosing","_isClosingComment","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","console","warn","_I18N_COMMENT_PREFIX_REGEXP","_openTranslatableSection","_mayBeAddBlockChildren","childNodes","translatedChildNodes","i18nAttr","isImplicit","_implicitTags","wasInImplicitNode","isTopLevelImplicit","_inI18nNode","isTranslatable","visited","_visitAttributesOf","wasInI18nNode","_inImplicitNode","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","createI18nMessageFactory","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","_parseMessageMeta","html.Attribute","translatedAttributes","directChildren","_Visitor","html.Comment","MEANING_SEPARATOR","XmlTagDefinition","XmlParser","getXmlTagDefinition","Serializer","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toPublicName","internalName","toInternalName","publicName","visitPlaceholderName","nextId","_visitor","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","doctype","rootTag","dtd","serialize","Declaration","unescapedAttrs","escapeXml","Doctype","visitDoctype","Tag","Text$3","unescapedValue","CR","ws","_ESCAPED_CHARS","Xliff","write","locale","_WriteVisitor","contextTags","contextGroupTag","purpose","context-type","xml.CR","transUnit","datatype","xml.Text","transUnits","source-language","xml.Declaration","xliff","xmlns","encoding","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","getCtypeForTag","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","ml.visitAll","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","xmlIcu","nameAttr","caseMap","Xliff2","xml.Tag","_WriteVisitor$1","notes","category","_XMLNS","_DEFAULT_SOURCE_LANG","xml.serialize","units","_MARKER_TAG","srcLang","Xliff2Parser","XmlToI18n$1","getTypeForTag","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","_UNIT_TAG","_SOURCE_TAG","versionAttr","endAttr","_PLACEHOLDER_TAG","startAttr","startId","endId","Xmb","exampleVisitor","ExampleVisitor","_Visitor$2","sourceTags","rootNode","addDefaultExamples","digest$1","createNameMapper","startEx","startTagAsText","closeTagAsText","closeEx","interpolationAsText","exTag","icuExpression","icuCases","icuAsText","icuType","exText","Xtb","XmlToI18n$2","valueFn","createLazyProperty","XtbParser","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","I18NHtmlParser","translationsFormat","format","createSerializer","_translationBundle","implicitTags","implicitAttrs","mergeTranslations","convertValueToOutputAst","_ValueOutputAstTransformer","o.LiteralMapEntry","quotedSet","mapEntry$1","InjectableCompiler","alwaysGenerateDef","tokenInjector","depsArray","tokenExpr","retValue","depArgs","injectableDef","def","o.ClassMethod","STRIP_SRC_FILE_SUFFIXES","GENERATED_FILE","JIT_SUMMARY_FILE","JIT_SUMMARY_NAME","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","endsWith","lastDot","srcFileSuffix","summaryFileName","fileName","summaryForJitFileName","summaryForJitName","symbolName","LOWERED_SYMBOL","isLoweredSymbol","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_shallowModuleCache","getReflector","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","hostViewType","hostType","cpl.CompileTemplateMetadata","diDeps","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","templateMetadata","normalizedDirMeta","componentModuleUrl","createDirectiveMetadata","cacheEntry","nonNormalizedTemplateMetadata","entryComponentMetadata","_getProvidersMetadata","stringifyType","flattenAndDedupeArray","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","changeDetectionStrategy","getRendererType","getDirectiveMetadata","getDirectiveSummary","dirSummary","cpl.CompileSummaryKind","isPipe","isNgModule","getNgModuleSummary","alreadyCollecting","moduleSummary","getNgModuleMetadata","loadNgModuleDirectiveAndPipeMetadata","promise","loading","_loadPipeMetadata","getShallowModuleMetadata","compileMeta","ngModuleMeta","exportedNonModuleIdentifiers","importedType","importedModuleType","isValidType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_getIdentifierMetadata","_addTypeToModule","exportedId","provide","oldModule","modulesByToken","cpl.tokenReference","modSummary","mod","prevModules","moduleRef","addedTokens","isInjectable","getInjectableSummary","Injectable","getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","getPipeMetadata","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","cpl.ProviderMeta","_validateProvider","ProviderMeta","soFar","seenProvider","seenProviderIdx","providersInfo","providerMeta","_getEntryComponentsFromProvider","getProviderMetadata","targetIdentifiers","components","collectedIdentifiers","_CompileValueConverter","_getInjectableTypeMetadata","compileDeps","compileFactoryMetadata","compileTypeMetadata","_getFactoryMetadata","_getQueryMetadata","_queryVarBindings","otherType","tree","flattenArray","ProviderError","viewQueryId","_addQueryToTokenMap","queryId","_getViewQueries","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","isTemplate","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","attrAst","targetErrors","directivesMeta","directiveAst","_allProviders","_resolveProviders","Component","providersByToken","PublicService","PrivateService","_contentQueries","contentQueries","directiveIndex","contentQueryId","_getContentQueries","_addQueryReadsTo","templateRefId","createTokenForExternalReference","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","eagerProviders","lazyProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","queryValue","_getQueriesFor","currentEl","distance","requestingProviderType","resolvedProvider","Builtin","transformedProviderAst","transformedUseValue","existingDiDep","_getDependency","transformedUseExisting","transformedDeps","_transformProvider","_transformProviderAst","transformedProviders","_getLocalDependency","attrValue","isValue","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","targetProvidersByToken","isUseValue","providerAst","lifecycleHook","lifecycleHookToNodeFlag","providerIndex","depExprs","convertDeps","providerExpr","allParams","allDepDefs","depIndex","paramName","depDef","multiProviderDef","singleProviderDef","depsExpr","tokenMeta","nodeFlag","entryComponent","entryComponentFactories","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","NgModuleCompiler","compile","providerParser","componentFactoryResolverProviderDef","providerDefs","ngModuleDefFactory","ngModuleDef","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","NgModuleResolver","debugOutputAstAsTypeScript","_TsEmitterVisitor","TypeScriptEmitter","emitStatementsAndContext","preamble","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexportsCode","reexports","reexport","as","exportedModuleName","importsWithPrefixes","importedModuleName","sm","sourceText","emitStatements","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","Private","CATCH_ERROR_VAR","typeStr","o.BuiltinTypeName","PipeResolver","metas","expandNodes","expander","_Expander","ExpansionResult","isExpanded","expanded","ExpansionError","PLURAL_CASES","html.Element","expansionResult","switchAttr","_expandDefaultForm","_TEXT_CSS_SELECTOR","TEXT_CSS_SELECTOR","TemplateParseError","templateAst","usedPipes","TemplateParser","transforms","tryParse","htmlParseResult","getInterpolationConfig","removeWhitespaces","tryParseHtml","expandHtml","htmlAstWithErrors","uniqDirectives","removeSummaryDuplicates","ProviderViewContext","uniqPipes","parseVisitor","TemplateParseVisitor","providerViewContext","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","TemplateParseResult","transform","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","_targetErrors","selectorMatcher","directivesIndex","ngContentCount","t.BoundTextAst","findNgContentIndex","t.AttrAst","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","_parseAttr","TEMPLATE_ATTR_PREFIX","_normalizeAttributeName","hasTemplateBinding","parsedVariables_1","elementCssSelector","createElementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","isViewRoot","providerContext","queryStartIndex","NON_BINDABLE_VISITOR$1","ElementContext","projectionSelector","t.NgContentAst","_isEmptyTextNode","_assertNoComponentsNorElementBindingsOnTemplate","elementProps","transformedDirectiveAsts","_assertElementExists","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateBoundDirectivePropNames","templateDirectiveAsts","t.EmbeddedTemplateAst","templateElementProps","_createElementPropertyAsts","templateProviderContext","targetRefs","BIND_NAME_REGEXP$1","_parseVariable","_parseReference","KW_BINDON_IDX","_parseAssignmentEvent","IDENT_BANANA_BOX_IDX","IDENT_EVENT_IDX","t.BoundEventAst","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","directiveProperties","_checkPropertiesInSchema","t.ReferenceAst","elOrDirRef","isReferenceToDirective","matchedReferences","parsedEvents","refToken","_createDirectivePropertyAsts","targetBoundDirectiveProps","prevValue","boundPropsByName_1","dirProp","elProp","isEmptyExpression","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","_assertOnlyOneComponent","componentTypeNames","_assertAllEventsPublishedByDirectives","allDirectiveEvents","attrNameAndValues","t.TextAst","splitClasses","classAttrValue","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","elNameNoNs","attrNameNoNs","CLASS_ATTR","NonBindableVisitor$1","items","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckCompiler","TypeCheckLocalResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","useIf","guard","astNodes","targetStatements","viewStmts","bindingCount","o.ExpressionStatement","preprocessUpdateExpression","o.applySourceSpanToStatementIfNeeded","defaultResolver","General","guardExpression","guardClause","o.IfStmt","viewName","viewFactory","fullTemplateTypeCheck","childVisitor","visitElementOrTemplate","inputAst","outputVarType","dirAst","hostEventAst","currBuilder","varAst","pipeOutputVar","argCount","visitDirectiveProperty","ViewCompileResult","viewClassVar","rendererTypeVar","ViewCompiler","staticQueryIds","findStaticQueryIds","childData","dynamicQueryIds","template_1","customRenderData","o.LiteralMapExpr","renderComponentVar","o.importType","ViewBuilder$1","renderComponentVarName","LOG_VAR$1","CHECK_VAR","nodeStaticQueryIds","purePipeNodeIndices","_createPipe","queryIds_1","queryIndex","calcStaticDynamicQueryFlags","nodeFlags","nodeDef","needsAdditionalRootNode","lastAstNode","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","o.DeclareFunctionStmt","OnPush","viewFlags","updateStmts","preStmts","COMP_VAR","VIEW_VAR","updateFn","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","childCount","queryMatchesExpr","_createElementHandleEventFn","_visitElementOrTemplate","usedEvents","dirHostBindings","hostBindings","inputDefs","unexpected","inputType","elementBindingDef","outputDefs","compAst","compRendererType","compView","elementAst","mapResult","attrValue2","CLASS_ATTR$1","STYLE_ATTR","elementEventNameAndTarget","elementEventFullName","localDirAst","dirIndex","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","refNodeIndices","eventAst","elementNodeIndex","queryIds","_visitProviderOrDirective","mapValue","dirContextExpr","updateDirectives","updateDirectiveExpressions","_addProviderNode","_visitComponentFactoryResolverProvider","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","callCheckStmt","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","callUnwrapValue","nodeValueExpr_1","diDep","pipeDef","_createLiteralMapConverter","updateBindingCount","createUpdateStatements","allowEmptyExprs","o.applySourceSpanToExpressionIfNeeded","handlers","handleEventStmts","handleEventBindingCount","trueStmts","ALLOW_DEFAULT_VAR","fullEventName","EVENT_NAME_VAR","handleEventFn","bindingIdx","isFirst","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","extractMessages","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","genFileUrl","sourceOrStmts","ROUTES","loadChildren_1","_collectLoadChildren","route","allLazyRoutes","parseLazyRoute","routes","routes_1","loadChildren","routePath","routeName","referencedModule","ResolvedStaticSymbol","StaticSymbolResolver","staticSymbolCache","summaryResolver","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","staticSymbol","resultFromSummary","_resolveSymbolFromSummary","getImportAs","useSummaries","baseSymbol","getStaticSymbol","baseImportAs","summarizedFileName","summarizedName","getTypeArity","resolvedSymbol","unwrapResolvedMetadata","resolveSymbol","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","invalidateFile","symbols_1","symbols","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","__symbolic","statics","hasDecorators","getModuleMetadata","metadataKey","decorators","summarySymbols","_createSymbolsOf","metadataSymbols","moduleExport","export","exportSymbol","symName","unescapeIdentifier","resolvedModule","resolveModule","getSymbolsOf","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","getOutputName","createResolvedSymbol","symbolMeta","isTsFile","TS","isLibraryFile","transformedMeta_1","_originalFileMemo","topLevelPath","transformedMeta","ReferenceTransformer","functionParams","symbolic","oldLen","getOriginalName","getMetadataFor","topLevelSymbolNames","unwrappedTransformedMeta","md","maxVersion_1","moduleMetadata","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","createSummaryForJitFunction","fnName","symbolResolver","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSymbolSummariesBySymbol","srcFileName","ToJsonSerializer","addSummary","unprocessedSummary","processedSummary","processValue","clone_1","metadata_1","isCall","isMethodCallOnVariable","declarationSymbol","ngModuleSummary","summary_1","json","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","ForJitSerializer","addSourceType","isLibrary","addLibType","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","FromJsonDeserializer","symbolCache","deserialize","libraryFileName","allImportAs","serializedSymbol","fromSummaryFileName","summaries","AotCompiler","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeAndValidateNgModules","ngModules","analyzeModulesAsync","_analyzeFile","analyzedFile","analyzeFile","_analyzeFileForInjectables","analyzeFileForInjectables","allowEmptyCodegenFiles","injectables","exportsNonSourceFiles","genFileNames","enableSummariesForJit","dirSymbol","normalizedUrl","resourceNameToFileName","needsShim","_stylesModuleUrl","fileSuffix","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createEmptyStub","createForJitStub","_codegenSourceModule","emitTypeCheckStub","_createNgFactoryStub","loadFilesAsync","fileNames","tsFiles","files","loadingPromises","analyzedInjectables","tsFile","analyzedModules","mergeAndValidateNgFiles","loadFilesSync","_externalIdentifierReferences","typeIndex","ngModuleIndex","dirId","_createTypeCheckBlock","getHostComponentMetadata","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","htmlParser","messageBundle","emitAllPartialModules","r3Files","ngModuleByPipeOrDirective","contextMap","_compilePartialModule","_compileShallowModules","shallowModules","compileR3Module","schemaRegistry","expressionParser","directiveMetadata","render3Ast","hostBindingParser","directiveTypeBySel_1","pipeTypeByName_1","compileR3Directive","definitionField","compileComponentFromRender2","o.ClassField","compileDirectiveFromRender2","pipeMetadata","compilePipeFromRender2","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","forJitCtx","types","toJsonSerializer","forJitSerializer_1","serializeSummaries","normalizedLocale","i18nFormat","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","_resolveStyleStatements","importModule","_fileNameToModuleName","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","ExternalReference","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","listLazyRoutes","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","compileResult","stylesheetUrl","analyzeNgModules","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","visitFile","seenFiles","isSourceFile","modMeta","_analyzeFilesIncludingNonProgramFiles","validateAnalyzedModules","symbolsMissingModule","isNgSymbol","Visitor","isValueExportingNonSourceFile","analyzedFiles","af","allNgModules","allPipesAndDirectives","formatChain","chain","postfix","indentStr","half","floor","FORMATTED_MESSAGE","ANGULAR_CORE","HIDDEN_KEY","IGNORE","USE_VALUE$1","PROVIDE","REFERENCE_SET","StaticReflector","knownMetadataClasses","knownMetadataFunctions","annotationCache","shallowAnnotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","kf","_registerFunction","findSymbolDeclaration","getResourcePath","declarationSymbol_1","refSymbol","recordModuleNameForFileName","findDeclaration","tryFindDeclaration","resolvedMetadata","originalRecorder","_annotations","simplify","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","requiredAnnotationTypes","requiredType","formatMetadataError","metadataError","parentPropMetadata_1","parentProp","members_1","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","_registerDecoratorOrConstructor","injectionToken","opaqueToken","lazy","BindingScope$1","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyNested","nestedContext","isMetadataError","summaryMsg","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","errorSummary","advise","isPrimitive","spreadArray","spreadArray_1","spreadItem","result_2","shouldIgnore","declarationValue","operand","indexTarget","member","selectTarget","selectContext","localValue","missing","argExpressions","functionSymbol","targetFunction","targetExpression","defaults","calling","functionScope","define","oldScope","done","result_1","simplifyCall","simplifyLazily","reportingContext","METADATA_ERROR","PopulatedScope","formatMetadataMessageChain","LAMBDA_NOT_SUPPORTED","expandedMessage","AotSummaryResolver","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","deserializeSummaries","basePath","SummaryResolver","JitSummaryResolver","_summaries","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","_ExecutionContext","ReturnValue","StatementInterpreter","debugAst","initialValue","currCtx","CATCH_STACK_VAR","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","_classStmt","_ctx","instanceCtx","paramNames","ctorParamNames","superClass","propertyDescriptors","createDynamicClass","stack","_declareFn","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainNgModule","mainModule","nestedNgModule","createOutputContext","allComponentFactories","moduleByJitDirective","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","templates","entryComponentType","_compileTemplate","compiledTemplate","assertComponent","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","_interpretOrJit","templateJitUrl","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","exportName","interpretStatements","_viewClass","ir.importExpr","resolvedUrl","_split","encodeURI","baseParts","_ComponentIndex","Scheme","_joinAndCanonicalizePath","Port","Path","_resolveUrl","resolvedParts","_packagePrefix","UrlResolverImpl","_splitRe","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","leadingSlash","trailingSlash","pos","up","ResourceLoader","Extractor","urlResolver","createAotUrlResolver","CompilerConfig","normalizer","loadResource","elementSchemaRegistry","staticReflector","DirectiveBinder","Scope","parentScope","namedEntities","ingest","childScopes","maybeDeclare","thing","lookup","getChildScope","dirTarget","TemplateBinder","nestingLevel","visitNode","childScope","maybeMap","R3BoundTarget","exprTargets","getDirectivesOfNode","getReferenceTarget","getConsumerOfBinding","getExpressionTarget","getTemplateOfSymbol","getNestingLevel","getUsedDirectives","inputs_1","vx","outputs_1","compilerHost","errorCollector","enableIvy","tmplParser","typeCheckCompiler","compiler","viewCompiler","UrlResolver","class_1"],"mappings":"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C,gBAAgBvrD,gBAAgBwrD,sBAEhC,cACI,gCAEWxrD,gBAAcyrD,OAAW,4BAErCzrD,gBAAA0rD,KACH,eAAgB,YAAgB,YAAc,YAAA,SAC1C,SAAA,kBAAa,kBAAA,WAAA,cACb,UAAA,aAAiB,YAAA,WAAA,SACjB,aAAW,gBAAA,YAAA,eAAA,8BAEA1rD,gBAAA2rD,cACX,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACD,YACN,YACM,kBACV,cACQ,gBAGDC,0BAEPL,gBAAAxwC,IAAA8wC;;;;;;;iICgBGC,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACF,wE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","file":"/mnt/c/Users/Sarun/dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var TagContentType;\n(function (TagContentType) {\n    TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n    TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n    TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n})(TagContentType || (TagContentType = {}));\nexport function splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n// `<ng-container>` tags work the same regardless the namespace\nexport function isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n// `<ng-content>` tags work the same regardless the namespace\nexport function isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n// `<ng-template>` tags work the same regardless the namespace\nexport function isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\nexport function getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\nexport function mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport var NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nexport var NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n//# sourceMappingURL=tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var lcParent = currentParent.toLowerCase();\n        var isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\nexport { HtmlTagDefinition };\nvar _DEFAULT_TAG_DEFINITION;\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS;\nexport function getHtmlTagDefinition(tagName) {\n    if (!TAG_DEFINITIONS) {\n        _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n        TAG_DEFINITIONS = {\n            'base': new HtmlTagDefinition({ isVoid: true }),\n            'meta': new HtmlTagDefinition({ isVoid: true }),\n            'area': new HtmlTagDefinition({ isVoid: true }),\n            'embed': new HtmlTagDefinition({ isVoid: true }),\n            'link': new HtmlTagDefinition({ isVoid: true }),\n            'img': new HtmlTagDefinition({ isVoid: true }),\n            'input': new HtmlTagDefinition({ isVoid: true }),\n            'param': new HtmlTagDefinition({ isVoid: true }),\n            'hr': new HtmlTagDefinition({ isVoid: true }),\n            'br': new HtmlTagDefinition({ isVoid: true }),\n            'source': new HtmlTagDefinition({ isVoid: true }),\n            'track': new HtmlTagDefinition({ isVoid: true }),\n            'wbr': new HtmlTagDefinition({ isVoid: true }),\n            'p': new HtmlTagDefinition({\n                closedByChildren: [\n                    'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset',\n                    'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5',\n                    'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol',\n                    'p', 'pre', 'section', 'table', 'ul'\n                ],\n                closedByParent: true\n            }),\n            'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n            'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n            'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n            'tr': new HtmlTagDefinition({\n                closedByChildren: ['tr'],\n                requiredParents: ['tbody', 'tfoot', 'thead'],\n                closedByParent: true\n            }),\n            'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n            'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n            'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n            'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n            'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n            'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n            'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n            'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n            'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n            'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n            'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n            'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n            'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n            'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n            'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n        };\n    }\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n//# sourceMappingURL=html_tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\nimport { CssSelector } from './selector';\nexport var createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nexport var createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\nexport var createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\nexport var createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nexport var createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nexport var createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nexport var createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\nexport var createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\nexport var ViewEncapsulation;\n(function (ViewEncapsulation) {\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\nexport var ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\nexport var createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (tslib_1.__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\nexport var createPipe = makeMetadataFactory('Pipe', function (p) { return (tslib_1.__assign({ pure: true }, p)); });\nexport var createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nexport var createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\nexport var createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\nexport var createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\nexport var createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\nexport var createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\nexport var CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nexport var NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nexport var createOptional = makeMetadataFactory('Optional');\nexport var createSelf = makeMetadataFactory('Self');\nexport var createSkipSelf = makeMetadataFactory('SkipSelf');\nexport var createHost = makeMetadataFactory('Host');\nexport var Type = Function;\nexport var SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\nexport var MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\nfunction makeMetadataFactory(name, props) {\n    var factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var values = props ? props.apply(void 0, args) : {};\n        return tslib_1.__assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\nfunction parserSelectorToSimpleSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? [8 /* CLASS */].concat(selector.classNames) :\n        [];\n    var elementName = selector.element && selector.element !== '*' ? selector.element : '';\n    return [elementName].concat(selector.attrs, classes);\n}\nfunction parserSelectorToNegativeSelector(selector) {\n    var classes = selector.classNames && selector.classNames.length ? [8 /* CLASS */].concat(selector.classNames) :\n        [];\n    if (selector.element) {\n        return [\n            1 /* NOT */ | 4 /* ELEMENT */, selector.element\n        ].concat(selector.attrs, classes);\n    }\n    else if (selector.attrs.length) {\n        return [1 /* NOT */ | 2 /* ATTRIBUTE */].concat(selector.attrs, classes);\n    }\n    else {\n        return selector.classNames && selector.classNames.length ? [1 /* NOT */ | 8 /* CLASS */].concat(selector.classNames) :\n            [];\n    }\n}\nfunction parserSelectorToR3Selector(selector) {\n    var positive = parserSelectorToSimpleSelector(selector);\n    var negative = selector.notSelectors && selector.notSelectors.length ?\n        selector.notSelectors.map(function (notSelector) { return parserSelectorToNegativeSelector(notSelector); }) :\n        [];\n    return positive.concat.apply(positive, negative);\n}\nexport function parseSelectorToR3Selector(selector) {\n    var selectors = CssSelector.parse(selector);\n    return selectors.map(parserSelectorToR3Selector);\n}\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getHtmlTagDefinition } from './ml_parser/html_tags';\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        /**\n         * The selectors are encoded in pairs where:\n         * - even locations are attribute names\n         * - odd locations are attribute values.\n         *\n         * Example:\n         * Selector: `[key1=value1][key2]` would parse to:\n         * ```\n         * ['key1', 'value1', 'key2', '']\n         * ```\n         */\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    CssSelector.parse = function (selector) {\n        var results = [];\n        var _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var cssSelector = new CssSelector();\n        var match;\n        var current = cssSelector;\n        var inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var tagName = this.element || 'div';\n        var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var attrs = '';\n        for (var i = 0; i < this.attrs.length; i += 2) {\n            var attrName = this.attrs[i];\n            var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    CssSelector.prototype.getAttrs = function () {\n        var result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    CssSelector.prototype.toString = function () {\n        var res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var i = 0; i < this.attrs.length; i += 2) {\n                var name_1 = this.attrs[i];\n                var value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\nexport { CssSelector };\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var listContext = null;\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param cssSelector A css selector\n     * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var matcher = this;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var isTerminal = i === attrs.length - 2;\n                var name_2 = attrs[i];\n                var value = attrs[i + 1];\n                if (isTerminal) {\n                    var terminalMap = matcher._attrValueMap;\n                    var terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var partialMap = matcher._attrValuePartialMap;\n                    var partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var result = false;\n        var element = cssSelector.element;\n        var classNames = cssSelector.classNames;\n        var attrs = cssSelector.attrs;\n        for (var i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var i = 0; i < classNames.length; i++) {\n                var className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i += 2) {\n                var name_3 = attrs[i];\n                var value = attrs[i + 1];\n                var terminalValuesMap = this._attrValueMap.get(name_3);\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var selectables = map.get(name) || [];\n        var starSelectables = map.get('*');\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var selectable;\n        var result = false;\n        for (var i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nexport { SelectorMatcher };\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nexport { SelectorListContext };\n// Store context to pass back selector and context when a selector is matched\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\nexport { SelectorContext };\n//# sourceMappingURL=selector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\n//// Types\nexport var TypeModifier;\n(function (TypeModifier) {\n    TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n})(TypeModifier || (TypeModifier = {}));\nvar Type = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Type;\n}());\nexport { Type };\nexport var BuiltinTypeName;\n(function (BuiltinTypeName) {\n    BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n    BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n    BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n    BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n    BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n    BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n    BuiltinTypeName[BuiltinTypeName[\"Inferred\"] = 6] = \"Inferred\";\n    BuiltinTypeName[BuiltinTypeName[\"None\"] = 7] = \"None\";\n})(BuiltinTypeName || (BuiltinTypeName = {}));\nvar BuiltinType = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type));\nexport { BuiltinType };\nvar ExpressionType = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers, typeParams) {\n        if (modifiers === void 0) { modifiers = null; }\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type));\nexport { ExpressionType };\nvar ArrayType = /** @class */ (function (_super) {\n    tslib_1.__extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type));\nexport { ArrayType };\nvar MapType = /** @class */ (function (_super) {\n    tslib_1.__extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type));\nexport { MapType };\nexport var DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport var INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nexport var BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport var INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport var NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport var STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport var FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nexport var NONE_TYPE = new BuiltinType(BuiltinTypeName.None);\n///// Expressions\nexport var BinaryOperator;\n(function (BinaryOperator) {\n    BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n    BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n    BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n    BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n    BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n    BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n    BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n    BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n    BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n    BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n    BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n    BinaryOperator[BinaryOperator[\"BitwiseAnd\"] = 11] = \"BitwiseAnd\";\n    BinaryOperator[BinaryOperator[\"Lower\"] = 12] = \"Lower\";\n    BinaryOperator[BinaryOperator[\"LowerEquals\"] = 13] = \"LowerEquals\";\n    BinaryOperator[BinaryOperator[\"Bigger\"] = 14] = \"Bigger\";\n    BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 15] = \"BiggerEquals\";\n})(BinaryOperator || (BinaryOperator = {}));\nexport function nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\nexport function areAllEquivalent(base, other) {\n    var len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bitwiseAnd = function (rhs, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        return new BinaryOperatorExpr(BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n    };\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nexport { Expression };\nexport var BuiltinVar;\n(function (BuiltinVar) {\n    BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n    BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n    BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n    BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n})(BuiltinVar || (BuiltinVar = {}));\nvar ReadVarExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    ReadVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    ReadVarExpr.prototype.isConstant = function () { return false; };\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nexport { ReadVarExpr };\nvar TypeofExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(TypeofExpr, _super);\n    function TypeofExpr(expr, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    TypeofExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitTypeofExpr(this, context);\n    };\n    TypeofExpr.prototype.isEquivalent = function (e) {\n        return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n    };\n    TypeofExpr.prototype.isConstant = function () { return this.expr.isConstant(); };\n    return TypeofExpr;\n}(Expression));\nexport { TypeofExpr };\nvar WrappedNodeExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WrappedNodeExpr, _super);\n    function WrappedNodeExpr(node, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.node = node;\n        return _this;\n    }\n    WrappedNodeExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WrappedNodeExpr && this.node === e.node;\n    };\n    WrappedNodeExpr.prototype.isConstant = function () { return false; };\n    WrappedNodeExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWrappedNodeExpr(this, context);\n    };\n    return WrappedNodeExpr;\n}(Expression));\nexport { WrappedNodeExpr };\nvar WriteVarExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WriteVarExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WriteVarExpr.prototype.isConstant = function () { return false; };\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    WriteVarExpr.prototype.toConstDecl = function () { return this.toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]); };\n    return WriteVarExpr;\n}(Expression));\nexport { WriteVarExpr };\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    WriteKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    WriteKeyExpr.prototype.isConstant = function () { return false; };\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nexport { WriteKeyExpr };\nvar WritePropExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    WritePropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    WritePropExpr.prototype.isConstant = function () { return false; };\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nexport { WritePropExpr };\nexport var BuiltinMethod;\n(function (BuiltinMethod) {\n    BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n    BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n    BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n})(BuiltinMethod || (BuiltinMethod = {}));\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    InvokeMethodExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    InvokeMethodExpr.prototype.isConstant = function () { return false; };\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nexport { InvokeMethodExpr };\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan, pure) {\n        if (pure === void 0) { pure = false; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        _this.pure = pure;\n        return _this;\n    }\n    InvokeFunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args) && this.pure === e.pure;\n    };\n    InvokeFunctionExpr.prototype.isConstant = function () { return false; };\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nexport { InvokeFunctionExpr };\nvar InstantiateExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    InstantiateExpr.prototype.isEquivalent = function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    InstantiateExpr.prototype.isConstant = function () { return false; };\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nexport { InstantiateExpr };\nvar LiteralExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    LiteralExpr.prototype.isConstant = function () { return true; };\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nexport { LiteralExpr };\nvar ExternalExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    ExternalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    ExternalExpr.prototype.isConstant = function () { return false; };\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nexport { ExternalExpr };\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nexport { ExternalReference };\nvar ConditionalExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    ConditionalExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    ConditionalExpr.prototype.isConstant = function () { return false; };\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nexport { ConditionalExpr };\nvar NotExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    NotExpr.prototype.isEquivalent = function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    NotExpr.prototype.isConstant = function () { return false; };\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nexport { NotExpr };\nvar AssertNotNull = /** @class */ (function (_super) {\n    tslib_1.__extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    AssertNotNull.prototype.isEquivalent = function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    AssertNotNull.prototype.isConstant = function () { return false; };\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nexport { AssertNotNull };\nvar CastExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    CastExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    CastExpr.prototype.isConstant = function () { return false; };\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nexport { CastExpr };\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    FnParam.prototype.isEquivalent = function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nexport { FnParam };\nvar FunctionExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    FunctionExpr.prototype.isEquivalent = function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    FunctionExpr.prototype.isConstant = function () { return false; };\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nexport { FunctionExpr };\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan, parens) {\n        if (parens === void 0) { parens = true; }\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.parens = parens;\n        _this.lhs = lhs;\n        return _this;\n    }\n    BinaryOperatorExpr.prototype.isEquivalent = function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    BinaryOperatorExpr.prototype.isConstant = function () { return false; };\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nexport { BinaryOperatorExpr };\nvar ReadPropExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    ReadPropExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    ReadPropExpr.prototype.isConstant = function () { return false; };\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nexport { ReadPropExpr };\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    ReadKeyExpr.prototype.isEquivalent = function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    ReadKeyExpr.prototype.isConstant = function () { return false; };\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nexport { ReadKeyExpr };\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    LiteralArrayExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n    LiteralArrayExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nexport { LiteralArrayExpr };\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    LiteralMapEntry.prototype.isEquivalent = function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nexport { LiteralMapEntry };\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    LiteralMapExpr.prototype.isEquivalent = function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    LiteralMapExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nexport { LiteralMapExpr };\nvar CommaExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    CommaExpr.prototype.isEquivalent = function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    CommaExpr.prototype.isConstant = function () { return false; };\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nexport { CommaExpr };\nexport var THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nexport var SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nexport var CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nexport var CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nexport var NULL_EXPR = new LiteralExpr(null, null, null);\nexport var TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n//// Statements\nexport var StmtModifier;\n(function (StmtModifier) {\n    StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n    StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n    StmtModifier[StmtModifier[\"Exported\"] = 2] = \"Exported\";\n    StmtModifier[StmtModifier[\"Static\"] = 3] = \"Static\";\n})(StmtModifier || (StmtModifier = {}));\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return Statement;\n}());\nexport { Statement };\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || (value && value.type) || null;\n        return _this;\n    }\n    DeclareVarStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n    };\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nexport { DeclareVarStmt };\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    DeclareFunctionStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nexport { DeclareFunctionStmt };\nvar ExpressionStatement = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    ExpressionStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nexport { ExpressionStatement };\nvar ReturnStatement = /** @class */ (function (_super) {\n    tslib_1.__extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    ReturnStatement.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nexport { ReturnStatement };\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nexport { AbstractClassPart };\nvar ClassField = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    ClassField.prototype.isEquivalent = function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nexport { ClassField };\nvar ClassMethod = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    ClassMethod.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nexport { ClassMethod };\nvar ClassGetter = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    ClassGetter.prototype.isEquivalent = function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nexport { ClassGetter };\nvar ClassStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    ClassStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nexport { ClassStmt };\nvar IfStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    IfStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nexport { IfStmt };\nvar CommentStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(CommentStmt, _super);\n    function CommentStmt(comment, multiline, sourceSpan) {\n        if (multiline === void 0) { multiline = false; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        _this.multiline = multiline;\n        return _this;\n    }\n    CommentStmt.prototype.isEquivalent = function (stmt) { return stmt instanceof CommentStmt; };\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nexport { CommentStmt };\nvar JSDocCommentStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(JSDocCommentStmt, _super);\n    function JSDocCommentStmt(tags, sourceSpan) {\n        if (tags === void 0) { tags = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.tags = tags;\n        return _this;\n    }\n    JSDocCommentStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n    };\n    JSDocCommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitJSDocCommentStmt(this, context);\n    };\n    JSDocCommentStmt.prototype.toString = function () { return serializeTags(this.tags); };\n    return JSDocCommentStmt;\n}(Statement));\nexport { JSDocCommentStmt };\nvar TryCatchStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    TryCatchStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nexport { TryCatchStmt };\nvar ThrowStmt = /** @class */ (function (_super) {\n    tslib_1.__extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    ThrowStmt.prototype.isEquivalent = function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nexport { ThrowStmt };\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.transformExpr = function (expr, context) { return expr; };\n    AstTransformer.prototype.transformStmt = function (stmt, context) { return stmt; };\n    AstTransformer.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitWrappedNodeExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitTypeofExpr = function (expr, context) {\n        return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    AstTransformer.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    AstTransformer.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    AstTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n        var value = stmt.value && stmt.value.visitExpression(this, context);\n        return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var parent = stmt.parent.visitExpression(this, context);\n        var getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    AstTransformer.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitJSDocCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    AstTransformer.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nexport { AstTransformer };\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitType = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitExpression = function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    RecursiveAstVisitor.prototype.visitBuiltinType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitExpressionType = function (type, context) {\n        var _this = this;\n        type.value.visitExpression(this, context);\n        if (type.typeParams !== null) {\n            type.typeParams.forEach(function (param) { return _this.visitType(param, context); });\n        }\n        return this.visitType(type, context);\n    };\n    RecursiveAstVisitor.prototype.visitArrayType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitMapType = function (type, context) { return this.visitType(type, context); };\n    RecursiveAstVisitor.prototype.visitWrappedNodeExpr = function (ast, context) { return ast; };\n    RecursiveAstVisitor.prototype.visitTypeofExpr = function (ast, context) { return this.visitExpression(ast, context); };\n    RecursiveAstVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitWritePropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralExpr = function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitExternalExpr = function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context);\n        ast.falseCase.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    RecursiveAstVisitor.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n        if (stmt.value) {\n            stmt.value.visitExpression(this, context);\n        }\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        stmt.parent.visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    RecursiveAstVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitJSDocCommentStmt = function (stmt, context) { return stmt; };\n    RecursiveAstVisitor.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\nexport { RecursiveAstVisitor };\nexport function findReadVarNames(stmts) {\n    var visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor));\nexport function collectExternalReferences(stmts) {\n    var visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor));\nexport function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\nexport function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    tslib_1.__extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var clone = Object.create(obj.constructor.prototype);\n        for (var prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer));\nexport function variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\nexport function importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\nexport function importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\nexport function expressionType(expr, typeModifiers, typeParams) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExpressionType(expr, typeModifiers, typeParams);\n}\nexport function typeofExpr(expr) {\n    return new TypeofExpr(expr);\n}\nexport function literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\nexport function literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\nexport function not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\nexport function assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\nexport function fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\nexport function ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\nexport function literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\nexport function isNull(exp) {\n    return exp instanceof LiteralExpr && exp.value === null;\n}\n/*\n * Serializes a `Tag` into a string.\n * Returns a string like \" @foo {bar} baz\" (note the leading whitespace before `@foo`).\n */\nfunction tagToString(tag) {\n    var out = '';\n    if (tag.tagName) {\n        out += \" @\" + tag.tagName;\n    }\n    if (tag.text) {\n        if (tag.text.match(/\\/\\*|\\*\\//)) {\n            throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n        }\n        out += ' ' + tag.text.replace(/@/g, '\\\\@');\n    }\n    return out;\n}\nfunction serializeTags(tags) {\n    if (tags.length === 0)\n        return '';\n    var out = '*\\n';\n    for (var _i = 0, tags_1 = tags; _i < tags_1.length; _i++) {\n        var tag = tags_1[_i];\n        out += ' *';\n        // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n        out += tagToString(tag).replace(/\\n/g, '\\n * ');\n        out += '\\n';\n    }\n    out += ' ';\n    return out;\n}\n//# sourceMappingURL=output_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** I18n separators for metadata **/\nvar I18N_MEANING_SEPARATOR = '|';\nvar I18N_ID_SEPARATOR = '@@';\n/** Name of the i18n attributes **/\nexport var I18N_ATTR = 'i18n';\nexport var I18N_ATTR_PREFIX = 'i18n-';\n/** Placeholder wrapper for i18n expressions **/\nexport var I18N_PLACEHOLDER_SYMBOL = '�';\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nexport function parseI18nMeta(meta) {\n    var _a, _b;\n    var id;\n    var meaning;\n    var description;\n    if (meta) {\n        var idIndex = meta.indexOf(I18N_ID_SEPARATOR);\n        var descIndex = meta.indexOf(I18N_MEANING_SEPARATOR);\n        var meaningAndDesc = void 0;\n        _a = (idIndex > -1) ? [meta.slice(0, idIndex), meta.slice(idIndex + 2)] : [meta, ''], meaningAndDesc = _a[0], id = _a[1];\n        _b = (descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    }\n    return { id: id, meaning: meaning, description: description };\n}\nexport function isI18NAttribute(name) {\n    return name === I18N_ATTR || name.startsWith(I18N_ATTR_PREFIX);\n}\nexport function wrapI18nPlaceholder(content, contextId) {\n    if (contextId === void 0) { contextId = 0; }\n    var blockId = contextId > 0 ? \":\" + contextId : '';\n    return \"\" + I18N_PLACEHOLDER_SYMBOL + content + blockId + I18N_PLACEHOLDER_SYMBOL;\n}\nexport function assembleI18nBoundString(strings, bindingStartIndex, contextId) {\n    if (bindingStartIndex === void 0) { bindingStartIndex = 0; }\n    if (contextId === void 0) { contextId = 0; }\n    if (!strings.length)\n        return '';\n    var acc = '';\n    var lastIdx = strings.length - 1;\n    for (var i = 0; i < lastIdx; i++) {\n        acc += \"\" + strings[i] + wrapI18nPlaceholder(bindingStartIndex + i, contextId);\n    }\n    acc += strings[lastIdx];\n    return acc;\n}\nfunction getSeqNumberGenerator(startsAt) {\n    if (startsAt === void 0) { startsAt = 0; }\n    var current = startsAt;\n    return function () { return current++; };\n}\n/**\n * I18nContext is a helper class which keeps track of all i18n-related aspects\n * (accumulates content, bindings, etc) between i18nStart and i18nEnd instructions.\n *\n * When we enter a nested template, the top-level context is being passed down\n * to the nested component, which uses this context to generate a child instance\n * of I18nContext class (to handle nested template) and at the end, reconciles it back\n * with the parent context.\n */\nvar I18nContext = /** @class */ (function () {\n    function I18nContext(index, templateIndex, ref, level, uniqueIdGen) {\n        if (level === void 0) { level = 0; }\n        this.index = index;\n        this.templateIndex = templateIndex;\n        this.ref = ref;\n        this.level = level;\n        this.uniqueIdGen = uniqueIdGen;\n        this.content = '';\n        this.bindings = new Set();\n        this.uniqueIdGen = uniqueIdGen || getSeqNumberGenerator();\n        this.id = this.uniqueIdGen();\n    }\n    I18nContext.prototype.wrap = function (symbol, elementIndex, contextId, closed) {\n        var state = closed ? '/' : '';\n        return wrapI18nPlaceholder(\"\" + state + symbol + elementIndex, contextId);\n    };\n    I18nContext.prototype.append = function (content) { this.content += content; };\n    I18nContext.prototype.genTemplatePattern = function (contextId, templateId) {\n        return wrapI18nPlaceholder(\"tmpl:\" + contextId + \":\" + templateId);\n    };\n    I18nContext.prototype.getId = function () { return this.id; };\n    I18nContext.prototype.getRef = function () { return this.ref; };\n    I18nContext.prototype.getIndex = function () { return this.index; };\n    I18nContext.prototype.getContent = function () { return this.content; };\n    I18nContext.prototype.getTemplateIndex = function () { return this.templateIndex; };\n    I18nContext.prototype.getBindings = function () { return this.bindings; };\n    I18nContext.prototype.appendBinding = function (binding) { this.bindings.add(binding); };\n    I18nContext.prototype.isRoot = function () { return this.level === 0; };\n    I18nContext.prototype.isResolved = function () {\n        var regex = new RegExp(this.genTemplatePattern('\\\\d+', '\\\\d+'));\n        return !regex.test(this.content);\n    };\n    I18nContext.prototype.appendText = function (content) { this.append(content.trim()); };\n    I18nContext.prototype.appendTemplate = function (index) { this.append(this.genTemplatePattern(this.id, index)); };\n    I18nContext.prototype.appendElement = function (elementIndex, closed) {\n        this.append(this.wrap('#', elementIndex, this.id, closed));\n    };\n    I18nContext.prototype.forkChildContext = function (index, templateIndex) {\n        return new I18nContext(index, templateIndex, this.ref, this.level + 1, this.uniqueIdGen);\n    };\n    I18nContext.prototype.reconcileChildContext = function (context) {\n        var id = context.getId();\n        var content = context.getContent();\n        var templateIndex = context.getTemplateIndex();\n        var pattern = new RegExp(this.genTemplatePattern(this.id, templateIndex));\n        var replacement = \"\" + this.wrap('*', templateIndex, id) + content + this.wrap('*', templateIndex, id, true);\n        this.content = this.content.replace(pattern, replacement);\n    };\n    return I18nContext;\n}());\nexport { I18nContext };\n//# sourceMappingURL=i18n.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nexport function dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\nexport function splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\nexport function splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\nfunction _splitAt(input, character, defaultValues) {\n    var characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\nexport function visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(value, context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(value, context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\nexport function isDefined(val) {\n    return val !== null && val !== undefined;\n}\nexport function noUndefined(val) {\n    return val === undefined ? null : val;\n}\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nexport { ValueTransformer };\nexport var SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues;\n    }\n};\nexport function error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\nexport function syntaxError(msg, parseErrors) {\n    var error = Error(msg);\n    error[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        error[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\nexport function isSyntaxError(error) {\n    return error[ERROR_SYNTAX_ERROR];\n}\nexport function getParseErrors(error) {\n    return error[ERROR_PARSE_ERRORS] || [];\n}\n// Escape characters that have a special meaning in Regular Expressions\nexport function escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexport function utf8Encode(str) {\n    var encoded = '';\n    for (var index = 0; index < str.length; index++) {\n        var codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    // WARNING: do not try to `JSON.stringify(token)` here\n    // see https://github.com/angular/angular/issues/23440\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n */\nexport function resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\nexport { Version };\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nexport { _global as global };\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as o from './output/output_ast';\nimport { parseI18nMeta } from './render3/view/i18n';\nimport { error } from './util';\nvar CONSTANT_PREFIX = '_c';\n// Closure variables holding messages must be named `MSG_[A-Z0-9]+`\nvar TRANSLATION_PREFIX = 'MSG_';\n/**\n * Closure uses `goog.getMsg(message)` to lookup translations\n */\nvar GOOG_GET_MSG = 'goog.getMsg';\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nvar KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    tslib_1.__extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        _this.original = resolved;\n        return _this;\n    }\n    FixupExpression.prototype.visitExpression = function (visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    };\n    FixupExpression.prototype.isEquivalent = function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    FixupExpression.prototype.isConstant = function () { return true; };\n    FixupExpression.prototype.fixup = function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(o.Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.translations = new Map();\n        this.deferredTranslations = new Map();\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    ConstantPool.prototype.getConstLiteral = function (literal, forceShared) {\n        if (literal instanceof o.LiteralExpr || literal instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal;\n        }\n        var key = this.keyOf(literal);\n        var fixup = this.literals.get(key);\n        var newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var name_1 = this.freshName();\n            this.statements.push(o.variable(name_1).set(literal).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name_1));\n        }\n        return fixup;\n    };\n    ConstantPool.prototype.getDeferredTranslationConst = function (suffix) {\n        var index = this.statements.push(new o.ExpressionStatement(o.NULL_EXPR)) - 1;\n        var variable = o.variable(this.freshTranslationName(suffix));\n        this.deferredTranslations.set(variable, index);\n        return variable;\n    };\n    ConstantPool.prototype.setDeferredTranslationConst = function (variable, message) {\n        var index = this.deferredTranslations.get(variable);\n        this.statements[index] = this.getTranslationDeclStmt(variable, message);\n    };\n    ConstantPool.prototype.getTranslationDeclStmt = function (variable, message) {\n        var fnCall = o.variable(GOOG_GET_MSG).callFn([o.literal(message)]);\n        return variable.set(fnCall).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n    };\n    ConstantPool.prototype.appendTranslationMeta = function (meta) {\n        var parsedMeta = typeof meta === 'string' ? parseI18nMeta(meta) : meta;\n        var docStmt = i18nMetaToDocStmt(parsedMeta);\n        if (docStmt) {\n            this.statements.push(docStmt);\n        }\n    };\n    // Generates closure specific code for translation.\n    //\n    // ```\n    // /**\n    //  * @desc description?\n    //  * @meaning meaning?\n    //  */\n    // const MSG_XYZ = goog.getMsg('message');\n    // ```\n    ConstantPool.prototype.getTranslation = function (message, meta, suffix) {\n        var parsedMeta = parseI18nMeta(meta);\n        // The identity of an i18n message depends on the message and its meaning\n        var key = parsedMeta.meaning ? message + \"\\0\\0\" + parsedMeta.meaning : message;\n        var exp = this.translations.get(key);\n        if (exp) {\n            return exp;\n        }\n        var variable = o.variable(this.freshTranslationName(suffix));\n        this.appendTranslationMeta(parsedMeta);\n        this.statements.push(this.getTranslationDeclStmt(variable, message));\n        this.translations.set(key, variable);\n        return variable;\n    };\n    ConstantPool.prototype.getDefinition = function (type, kind, ctx, forceShared) {\n        if (forceShared === void 0) { forceShared = false; }\n        var definitions = this.definitionsOf(kind);\n        var fixup = definitions.get(type);\n        var newValue = false;\n        if (!fixup) {\n            var property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            var name_2 = this.freshName();\n            this.statements.push(o.variable(name_2).set(fixup.resolved).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            fixup.fixup(o.variable(name_2));\n        }\n        return fixup;\n    };\n    ConstantPool.prototype.getLiteralFactory = function (literal) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal instanceof o.LiteralArrayExpr) {\n            var argumentsForKey = literal.entries.map(function (e) { return e.isConstant() ? e : o.literal(null); });\n            var key = this.keyOf(o.literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal.entries, function (entries) { return o.literalArr(entries); });\n        }\n        else {\n            var expressionForKey = o.literalMap(literal.entries.map(function (e) { return ({\n                key: e.key,\n                value: e.value.isConstant() ? e.value : o.literal(null),\n                quoted: e.quoted\n            }); }));\n            var key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal.entries.map(function (e) { return e.value; }), function (entries) { return o.literalMap(entries.map(function (value, index) { return ({\n                key: literal.entries[index].key,\n                value: value,\n                quoted: literal.entries[index].quoted\n            }); })); });\n        }\n    };\n    ConstantPool.prototype._getLiteralFactory = function (key, values, resultMap) {\n        var _this = this;\n        var literalFactory = this.literalFactories.get(key);\n        var literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n        if (!literalFactory) {\n            var resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : o.variable(\"a\" + index); });\n            var parameters = resultExpressions.filter(isVariable).map(function (e) { return new o.FnParam(e.name, o.DYNAMIC_TYPE); });\n            var pureFunctionDeclaration = o.fn(parameters, [new o.ReturnStatement(resultMap(resultExpressions))], o.INFERRED_TYPE);\n            var name_3 = this.freshName();\n            this.statements.push(o.variable(name_3).set(pureFunctionDeclaration).toDeclStmt(o.INFERRED_TYPE, [\n                o.StmtModifier.Final\n            ]));\n            literalFactory = o.variable(name_3);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    ConstantPool.prototype.uniqueName = function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    ConstantPool.prototype.definitionsOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(\"Unknown definition kind \" + kind);\n        return this.componentDefinitions;\n    };\n    ConstantPool.prototype.propertyNameOf = function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(\"Unknown definition kind \" + kind);\n        return '<unknown>';\n    };\n    ConstantPool.prototype.freshName = function () { return this.uniqueName(CONSTANT_PREFIX); };\n    ConstantPool.prototype.freshTranslationName = function (suffix) {\n        return this.uniqueName(TRANSLATION_PREFIX + suffix).toUpperCase();\n    };\n    ConstantPool.prototype.keyOf = function (expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    };\n    return ConstantPool;\n}());\nexport { ConstantPool };\n/**\n * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n * `ConstantPool`.\n *\n * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n */\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitWrappedNodeExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    KeyVisitor.prototype.visitLiteralExpr = function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    KeyVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n    };\n    KeyVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var mapKey = function (entry) {\n            var quote = entry.quoted ? '\"' : '';\n            return \"\" + quote + entry.key + quote;\n        };\n        var mapEntry = function (entry) {\n            return mapKey(entry) + \":\" + entry.value.visitExpression(_this, context);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    KeyVisitor.prototype.visitExternalExpr = function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    KeyVisitor.prototype.visitReadVarExpr = function (node) { return \"VAR:\" + node.name; };\n    KeyVisitor.prototype.visitTypeofExpr = function (node, context) {\n        return \"TYPEOF:\" + node.expr.visitExpression(this, context);\n    };\n    return KeyVisitor;\n}());\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + arg.constructor.name);\n}\nfunction isVariable(e) {\n    return e instanceof o.ReadVarExpr;\n}\n// Converts i18n meta informations for a message (id, description, meaning)\n// to a JsDoc statement formatted as expected by the Closure compiler.\nfunction i18nMetaToDocStmt(meta) {\n    var tags = [];\n    if (meta.id || meta.description) {\n        var text = meta.id ? \"[BACKUP_MESSAGE_ID:\" + meta.id + \"] \" + meta.description : meta.description;\n        tags.push({ tagName: \"desc\" /* Desc */, text: text.trim() });\n    }\n    if (meta.meaning) {\n        tags.push({ tagName: \"meaning\" /* Meaning */, text: meta.meaning });\n    }\n    return tags.length == 0 ? null : new o.JSDocCommentStmt(tags);\n}\n//# sourceMappingURL=constant_pool.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.Renderer2 = { name: 'Renderer2', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.INJECTOR = { name: 'INJECTOR', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.InjectableDef = { name: 'ɵInjectableDef', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    Identifiers.setClassMetadata = { name: 'ɵsetClassMetadata', moduleName: CORE };\n    return Identifiers;\n}());\nexport { Identifiers };\nexport function createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\nexport function createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n//# sourceMappingURL=identifiers.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\nexport { StaticSymbol };\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nexport { StaticSymbolCache };\n//# sourceMappingURL=static_symbol.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from './aot/static_symbol';\nimport { splitAtColon, stringify } from './util';\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nexport function sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\nexport function identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\nexport function identifierModuleUrl(compileIdentifier) {\n    var ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\nexport function viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\nexport function rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\nexport function hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\nexport function componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nexport var CompileSummaryKind;\n(function (CompileSummaryKind) {\n    CompileSummaryKind[CompileSummaryKind[\"Pipe\"] = 0] = \"Pipe\";\n    CompileSummaryKind[CompileSummaryKind[\"Directive\"] = 1] = \"Directive\";\n    CompileSummaryKind[CompileSummaryKind[\"NgModule\"] = 2] = \"NgModule\";\n    CompileSummaryKind[CompileSummaryKind[\"Injectable\"] = 3] = \"Injectable\";\n})(CompileSummaryKind || (CompileSummaryKind = {}));\nexport function tokenName(token) {\n    return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\nexport function tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\nexport { CompileStylesheetMetadata };\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n            styles: this.styles,\n            animations: this.animations\n        };\n    };\n    return CompileTemplateMetadata;\n}());\nexport { CompileTemplateMetadata };\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var hostListeners = {};\n        var hostProperties = {};\n        var hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var value = host[key];\n                var matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\nexport { CompileDirectiveMetadata };\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\nexport { CompilePipeMetadata };\nvar CompileShallowModuleMetadata = /** @class */ (function () {\n    function CompileShallowModuleMetadata() {\n    }\n    return CompileShallowModuleMetadata;\n}());\nexport { CompileShallowModuleMetadata };\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var module = this.transitiveModule;\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nexport { CompileNgModuleMetadata };\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\nexport { TransitiveCompileNgModuleMetadata };\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\nexport { ProviderMeta };\nexport function flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\nexport function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = templateMeta.templateUrl;\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\nexport function sharedStylesheetJitUrl(meta, id) {\n    var pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n    var baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\nexport function ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\nexport function templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n//# sourceMappingURL=compile_metadata.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'factory';\n    Identifiers.TRANSFORM_METHOD = 'transform';\n    Identifiers.PATCH_DEPS = 'patchedDeps';\n    /* Instructions */\n    Identifiers.namespaceHTML = { name: 'ɵnamespaceHTML', moduleName: CORE };\n    Identifiers.namespaceMathML = { name: 'ɵnamespaceMathML', moduleName: CORE };\n    Identifiers.namespaceSVG = { name: 'ɵnamespaceSVG', moduleName: CORE };\n    Identifiers.element = { name: 'ɵelement', moduleName: CORE };\n    Identifiers.elementStart = { name: 'ɵelementStart', moduleName: CORE };\n    Identifiers.elementEnd = { name: 'ɵelementEnd', moduleName: CORE };\n    Identifiers.elementProperty = { name: 'ɵelementProperty', moduleName: CORE };\n    Identifiers.elementAttribute = { name: 'ɵelementAttribute', moduleName: CORE };\n    Identifiers.elementClassProp = { name: 'ɵelementClassProp', moduleName: CORE };\n    Identifiers.elementContainerStart = { name: 'ɵEC', moduleName: CORE };\n    Identifiers.elementContainerEnd = { name: 'ɵeC', moduleName: CORE };\n    Identifiers.elementStyling = { name: 'ɵelementStyling', moduleName: CORE };\n    Identifiers.elementStylingMap = { name: 'ɵelementStylingMap', moduleName: CORE };\n    Identifiers.elementStyleProp = { name: 'ɵelementStyleProp', moduleName: CORE };\n    Identifiers.elementStylingApply = { name: 'ɵelementStylingApply', moduleName: CORE };\n    Identifiers.containerCreate = { name: 'ɵcontainer', moduleName: CORE };\n    Identifiers.nextContext = { name: 'ɵnextContext', moduleName: CORE };\n    Identifiers.templateCreate = { name: 'ɵtemplate', moduleName: CORE };\n    Identifiers.text = { name: 'ɵtext', moduleName: CORE };\n    Identifiers.textBinding = { name: 'ɵtextBinding', moduleName: CORE };\n    Identifiers.bind = { name: 'ɵbind', moduleName: CORE };\n    Identifiers.enableBindings = { name: 'ɵenableBindings', moduleName: CORE };\n    Identifiers.disableBindings = { name: 'ɵdisableBindings', moduleName: CORE };\n    Identifiers.getCurrentView = { name: 'ɵgetCurrentView', moduleName: CORE };\n    Identifiers.restoreView = { name: 'ɵrestoreView', moduleName: CORE };\n    Identifiers.interpolation1 = { name: 'ɵinterpolation1', moduleName: CORE };\n    Identifiers.interpolation2 = { name: 'ɵinterpolation2', moduleName: CORE };\n    Identifiers.interpolation3 = { name: 'ɵinterpolation3', moduleName: CORE };\n    Identifiers.interpolation4 = { name: 'ɵinterpolation4', moduleName: CORE };\n    Identifiers.interpolation5 = { name: 'ɵinterpolation5', moduleName: CORE };\n    Identifiers.interpolation6 = { name: 'ɵinterpolation6', moduleName: CORE };\n    Identifiers.interpolation7 = { name: 'ɵinterpolation7', moduleName: CORE };\n    Identifiers.interpolation8 = { name: 'ɵinterpolation8', moduleName: CORE };\n    Identifiers.interpolationV = { name: 'ɵinterpolationV', moduleName: CORE };\n    Identifiers.pureFunction0 = { name: 'ɵpureFunction0', moduleName: CORE };\n    Identifiers.pureFunction1 = { name: 'ɵpureFunction1', moduleName: CORE };\n    Identifiers.pureFunction2 = { name: 'ɵpureFunction2', moduleName: CORE };\n    Identifiers.pureFunction3 = { name: 'ɵpureFunction3', moduleName: CORE };\n    Identifiers.pureFunction4 = { name: 'ɵpureFunction4', moduleName: CORE };\n    Identifiers.pureFunction5 = { name: 'ɵpureFunction5', moduleName: CORE };\n    Identifiers.pureFunction6 = { name: 'ɵpureFunction6', moduleName: CORE };\n    Identifiers.pureFunction7 = { name: 'ɵpureFunction7', moduleName: CORE };\n    Identifiers.pureFunction8 = { name: 'ɵpureFunction8', moduleName: CORE };\n    Identifiers.pureFunctionV = { name: 'ɵpureFunctionV', moduleName: CORE };\n    Identifiers.pipeBind1 = { name: 'ɵpipeBind1', moduleName: CORE };\n    Identifiers.pipeBind2 = { name: 'ɵpipeBind2', moduleName: CORE };\n    Identifiers.pipeBind3 = { name: 'ɵpipeBind3', moduleName: CORE };\n    Identifiers.pipeBind4 = { name: 'ɵpipeBind4', moduleName: CORE };\n    Identifiers.pipeBindV = { name: 'ɵpipeBindV', moduleName: CORE };\n    Identifiers.i18nAttribute = { name: 'ɵi18nAttribute', moduleName: CORE };\n    Identifiers.i18nExp = { name: 'ɵi18nExp', moduleName: CORE };\n    Identifiers.i18nStart = { name: 'ɵi18nStart', moduleName: CORE };\n    Identifiers.i18nEnd = { name: 'ɵi18nEnd', moduleName: CORE };\n    Identifiers.i18nApply = { name: 'ɵi18nApply', moduleName: CORE };\n    Identifiers.load = { name: 'ɵload', moduleName: CORE };\n    Identifiers.loadQueryList = { name: 'ɵloadQueryList', moduleName: CORE };\n    Identifiers.pipe = { name: 'ɵpipe', moduleName: CORE };\n    Identifiers.projection = { name: 'ɵprojection', moduleName: CORE };\n    Identifiers.projectionDef = { name: 'ɵprojectionDef', moduleName: CORE };\n    Identifiers.reference = { name: 'ɵreference', moduleName: CORE };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.injectAttribute = { name: 'ɵinjectAttribute', moduleName: CORE };\n    Identifiers.directiveInject = { name: 'ɵdirectiveInject', moduleName: CORE };\n    Identifiers.templateRefExtractor = { name: 'ɵtemplateRefExtractor', moduleName: CORE };\n    Identifiers.defineBase = { name: 'ɵdefineBase', moduleName: CORE };\n    Identifiers.BaseDef = {\n        name: 'ɵBaseDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE };\n    Identifiers.ComponentDefWithMeta = {\n        name: 'ɵComponentDefWithMeta',\n        moduleName: CORE,\n    };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE,\n    };\n    Identifiers.DirectiveDefWithMeta = {\n        name: 'ɵDirectiveDefWithMeta',\n        moduleName: CORE,\n    };\n    Identifiers.InjectorDef = {\n        name: 'ɵInjectorDef',\n        moduleName: CORE,\n    };\n    Identifiers.defineInjector = {\n        name: 'defineInjector',\n        moduleName: CORE,\n    };\n    Identifiers.NgModuleDefWithMeta = {\n        name: 'ɵNgModuleDefWithMeta',\n        moduleName: CORE,\n    };\n    Identifiers.defineNgModule = { name: 'ɵdefineNgModule', moduleName: CORE };\n    Identifiers.PipeDefWithMeta = { name: 'ɵPipeDefWithMeta', moduleName: CORE };\n    Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE };\n    Identifiers.query = { name: 'ɵquery', moduleName: CORE };\n    Identifiers.queryRefresh = { name: 'ɵqueryRefresh', moduleName: CORE };\n    Identifiers.registerContentQuery = { name: 'ɵregisterContentQuery', moduleName: CORE };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE };\n    Identifiers.InheritDefinitionFeature = { name: 'ɵInheritDefinitionFeature', moduleName: CORE };\n    Identifiers.ProvidersFeature = { name: 'ɵProvidersFeature', moduleName: CORE };\n    Identifiers.listener = { name: 'ɵlistener', moduleName: CORE };\n    Identifiers.getFactoryOf = {\n        name: 'ɵgetFactoryOf',\n        moduleName: CORE,\n    };\n    Identifiers.getInheritedFactory = {\n        name: 'ɵgetInheritedFactory',\n        moduleName: CORE,\n    };\n    // sanitization-related functions\n    Identifiers.sanitizeHtml = { name: 'ɵsanitizeHtml', moduleName: CORE };\n    Identifiers.sanitizeStyle = { name: 'ɵsanitizeStyle', moduleName: CORE };\n    Identifiers.defaultStyleSanitizer = { name: 'ɵdefaultStyleSanitizer', moduleName: CORE };\n    Identifiers.sanitizeResourceUrl = { name: 'ɵsanitizeResourceUrl', moduleName: CORE };\n    Identifiers.sanitizeScript = { name: 'ɵsanitizeScript', moduleName: CORE };\n    Identifiers.sanitizeUrl = { name: 'ɵsanitizeUrl', moduleName: CORE };\n    return Identifiers;\n}());\nexport { Identifiers };\n//# sourceMappingURL=r3_identifiers.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../../output/output_ast';\nimport { isI18NAttribute } from './i18n';\n/** Name of the temporary to use during data binding */\nexport var TEMPORARY_NAME = '_t';\n/** Name of the context parameter passed into a template function */\nexport var CONTEXT_NAME = 'ctx';\n/** Name of the RenderFlag passed into a template function */\nexport var RENDER_FLAGS = 'rf';\n/** The prefix reference variables */\nexport var REFERENCE_PREFIX = '_r';\n/** The name of the implicit context reference */\nexport var IMPLICIT_REFERENCE = '$implicit';\n/** Non bindable attribute name **/\nexport var NON_BINDABLE_ATTR = 'ngNonBindable';\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nexport function temporaryAllocator(statements, name) {\n    var temp = null;\n    return function () {\n        if (!temp) {\n            statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n            temp = o.variable(name);\n        }\n        return temp;\n    };\n}\nexport function unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nexport function invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + o.constructor.name);\n}\nexport function asLiteral(value) {\n    if (Array.isArray(value)) {\n        return o.literalArr(value.map(asLiteral));\n    }\n    return o.literal(value, o.INFERRED_TYPE);\n}\nexport function conditionallyCreateMapObjectLiteral(keys) {\n    if (Object.getOwnPropertyNames(keys).length > 0) {\n        return mapToExpression(keys);\n    }\n    return null;\n}\nexport function mapToExpression(map, quoted) {\n    if (quoted === void 0) { quoted = false; }\n    return o.literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: quoted, value: asLiteral(map[key]) }); }));\n}\n/**\n *  Remove trailing null nodes as they are implied.\n */\nexport function trimTrailingNulls(parameters) {\n    while (o.isNull(parameters[parameters.length - 1])) {\n        parameters.pop();\n    }\n    return parameters;\n}\nexport function getQueryPredicate(query, constantPool) {\n    if (Array.isArray(query.predicate)) {\n        var predicate_1 = [];\n        query.predicate.forEach(function (selector) {\n            // Each item in predicates array may contain strings with comma-separated refs\n            // (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them\n            // as separate array entities\n            var selectors = selector.split(',').map(function (token) { return o.literal(token.trim()); });\n            predicate_1.push.apply(predicate_1, selectors);\n        });\n        return constantPool.getConstLiteral(o.literalArr(predicate_1), true);\n    }\n    else {\n        return query.predicate;\n    }\n}\nexport function noop() { }\nvar DefinitionMap = /** @class */ (function () {\n    function DefinitionMap() {\n        this.values = [];\n    }\n    DefinitionMap.prototype.set = function (key, value) {\n        if (value) {\n            this.values.push({ key: key, value: value, quoted: false });\n        }\n    };\n    DefinitionMap.prototype.toLiteralMap = function () { return o.literalMap(this.values); };\n    return DefinitionMap;\n}());\nexport { DefinitionMap };\n/**\n * Extract a map of properties to values for a given element or template node, which can be used\n * by the directive matching machinery.\n *\n * @param elOrTpl the element or template in question\n * @return an object set up for directive matching. For attributes on the element/template, this\n * object maps a property name to its (static) value. For any bindings, this map simply maps the\n * property name to an empty string.\n */\nexport function getAttrsForDirectiveMatching(elOrTpl) {\n    var attributesMap = {};\n    elOrTpl.attributes.forEach(function (a) {\n        if (!isI18NAttribute(a.name)) {\n            attributesMap[a.name] = a.value;\n        }\n    });\n    elOrTpl.inputs.forEach(function (i) { attributesMap[i.name] = ''; });\n    elOrTpl.outputs.forEach(function (o) { attributesMap[o.name] = ''; });\n    return attributesMap;\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { tokenReference } from '../compile_metadata';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nimport { Identifiers as R3 } from '../render3/r3_identifiers';\nimport { unsupported } from './view/util';\nexport var R3FactoryDelegateType;\n(function (R3FactoryDelegateType) {\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Class\"] = 0] = \"Class\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Function\"] = 1] = \"Function\";\n    R3FactoryDelegateType[R3FactoryDelegateType[\"Factory\"] = 2] = \"Factory\";\n})(R3FactoryDelegateType || (R3FactoryDelegateType = {}));\n/**\n * Resolved type of a dependency.\n *\n * Occasionally, dependencies will have special significance which is known statically. In that\n * case the `R3ResolvedDependencyType` informs the factory generator that a particular dependency\n * should be generated specially (usually by calling a special injection function instead of the\n * standard one).\n */\nexport var R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    /**\n     * A normal token dependency.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    /**\n     * The dependency is for an attribute.\n     *\n     * The token expression is a string representing the attribute name.\n     */\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n/**\n * Construct a factory function expression for the given `R3FactoryMetadata`.\n */\nexport function compileFactoryFunction(meta) {\n    var t = o.variable('t');\n    var statements = [];\n    // The type to instantiate via constructor invocation. If there is no delegated factory, meaning\n    // this type is always created by constructor invocation, then this is the type-to-create\n    // parameter provided by the user (t) if specified, or the current type if not. If there is a\n    // delegated factory (which is used to create the current type) then this is only the type-to-\n    // create parameter (t).\n    var typeForCtor = !isDelegatedMetadata(meta) ? new o.BinaryOperatorExpr(o.BinaryOperator.Or, t, meta.type) : t;\n    var ctorExpr = null;\n    if (meta.deps !== null) {\n        // There is a constructor (either explicitly or implicitly defined).\n        ctorExpr = new o.InstantiateExpr(typeForCtor, injectDependencies(meta.deps, meta.injectFn));\n    }\n    else {\n        var baseFactory = o.variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getInheritedFactory = o.importExpr(R3.getInheritedFactory);\n        var baseFactoryStmt = baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(o.INFERRED_TYPE, [\n            o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n        statements.push(baseFactoryStmt);\n        // There is no constructor, use the base class' factory to construct typeForCtor.\n        ctorExpr = baseFactory.callFn([typeForCtor]);\n    }\n    var ctorExprFinal = ctorExpr;\n    var body = [];\n    var retExpr = null;\n    function makeConditionalFactory(nonCtorExpr) {\n        var r = o.variable('r');\n        body.push(r.set(o.NULL_EXPR).toDeclStmt());\n        body.push(o.ifStmt(t, [r.set(ctorExprFinal).toStmt()], [r.set(nonCtorExpr).toStmt()]));\n        return r;\n    }\n    if (isDelegatedMetadata(meta) && meta.delegateType === R3FactoryDelegateType.Factory) {\n        var delegateFactory = o.variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n        var getFactoryOf = o.importExpr(R3.getFactoryOf);\n        if (meta.delegate.isEquivalent(meta.type)) {\n            throw new Error(\"Illegal state: compiling factory that delegates to itself\");\n        }\n        var delegateFactoryStmt = delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(o.INFERRED_TYPE, [\n            o.StmtModifier.Exported, o.StmtModifier.Final\n        ]);\n        statements.push(delegateFactoryStmt);\n        retExpr = makeConditionalFactory(delegateFactory.callFn([]));\n    }\n    else if (isDelegatedMetadata(meta)) {\n        // This type is created with a delegated factory. If a type parameter is not specified, call\n        // the factory instead.\n        var delegateArgs = injectDependencies(meta.delegateDeps, meta.injectFn);\n        // Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.\n        var factoryExpr = new (meta.delegateType === R3FactoryDelegateType.Class ?\n            o.InstantiateExpr :\n            o.InvokeFunctionExpr)(meta.delegate, delegateArgs);\n        retExpr = makeConditionalFactory(factoryExpr);\n    }\n    else if (isExpressionFactoryMetadata(meta)) {\n        // TODO(alxhub): decide whether to lower the value here or in the caller\n        retExpr = makeConditionalFactory(meta.expression);\n    }\n    else if (meta.extraStatementFn) {\n        // if extraStatementsFn is specified and the 'makeConditionalFactory' function\n        // was not invoked, we need to create a reference to the instance, so we can\n        // pass it as an argument to the 'extraStatementFn' function while calling it\n        var variable = o.variable('f');\n        body.push(variable.set(ctorExpr).toDeclStmt());\n        retExpr = variable;\n    }\n    else {\n        retExpr = ctorExpr;\n    }\n    if (meta.extraStatementFn) {\n        var extraStmts = meta.extraStatementFn(retExpr);\n        body.push.apply(body, extraStmts);\n    }\n    return {\n        factory: o.fn([new o.FnParam('t', o.DYNAMIC_TYPE)], body.concat([new o.ReturnStatement(retExpr)]), o.INFERRED_TYPE, undefined, meta.name + \"_Factory\"),\n        statements: statements,\n    };\n}\nfunction injectDependencies(deps, injectFn) {\n    return deps.map(function (dep) { return compileInjectDependency(dep, injectFn); });\n}\nfunction compileInjectDependency(dep, injectFn) {\n    // Interpret the dependency according to its resolved type.\n    switch (dep.resolved) {\n        case R3ResolvedDependencyType.Token: {\n            // Build up the injection flags according to the metadata.\n            var flags = 0 /* Default */ | (dep.self ? 2 /* Self */ : 0) |\n                (dep.skipSelf ? 4 /* SkipSelf */ : 0) | (dep.host ? 1 /* Host */ : 0) |\n                (dep.optional ? 8 /* Optional */ : 0);\n            // Build up the arguments to the injectFn call.\n            var injectArgs = [dep.token];\n            // If this dependency is optional or otherwise has non-default flags, then additional\n            // parameters describing how to inject the dependency must be passed to the inject function\n            // that's being used.\n            if (flags !== 0 /* Default */ || dep.optional) {\n                injectArgs.push(o.literal(flags));\n            }\n            return o.importExpr(injectFn).callFn(injectArgs);\n        }\n        case R3ResolvedDependencyType.Attribute:\n            // In the case of attributes, the attribute name in question is given as the token.\n            return o.importExpr(R3.injectAttribute).callFn([dep.token]);\n        default:\n            return unsupported(\"Unknown R3ResolvedDependencyType: \" + R3ResolvedDependencyType[dep.resolved]);\n    }\n}\n/**\n * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n * `CompileTypeMetadata` instance.\n */\nexport function dependenciesFromGlobalMetadata(type, outputCtx, reflector) {\n    // Use the `CompileReflector` to look up references to some well-known Angular types. These will\n    // be compared with the token to statically determine whether the token has significance to\n    // Angular, and set the correct `R3ResolvedDependencyType` as a result.\n    var injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n    // Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.\n    var deps = [];\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.token) {\n            var tokenRef = tokenReference(dependency.token);\n            var resolved = dependency.isAttribute ?\n                R3ResolvedDependencyType.Attribute :\n                R3ResolvedDependencyType.Token;\n            // In the case of most dependencies, the token will be a reference to a type. Sometimes,\n            // however, it can be a string, in the case of older Angular code or @Attribute injection.\n            var token = tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n            // Construct the dependency.\n            deps.push({\n                token: token,\n                resolved: resolved,\n                host: !!dependency.isHost,\n                optional: !!dependency.isOptional,\n                self: !!dependency.isSelf,\n                skipSelf: !!dependency.isSkipSelf,\n            });\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return deps;\n}\nfunction isDelegatedMetadata(meta) {\n    return meta.delegateType !== undefined;\n}\nfunction isExpressionFactoryMetadata(meta) {\n    return meta.expression !== undefined;\n}\n//# sourceMappingURL=r3_factory.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport * as o from '../output/output_ast';\n/**\n * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n */\nexport function mapToMapExpression(map) {\n    var result = Object.keys(map).map(function (key) { return ({ key: key, value: map[key], quoted: false }); });\n    return o.literalMap(result);\n}\n/**\n * Convert metadata into an `Expression` in the given `OutputContext`.\n *\n * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n */\nexport function convertMetaToOutput(meta, ctx) {\n    if (Array.isArray(meta)) {\n        return o.literalArr(meta.map(function (entry) { return convertMetaToOutput(entry, ctx); }));\n    }\n    if (meta instanceof StaticSymbol) {\n        return ctx.importExpr(meta);\n    }\n    if (meta == null) {\n        return o.literal(meta);\n    }\n    throw new Error(\"Internal error: Unsupported or unknown metadata: \" + meta);\n}\nexport function typeWithParameters(type, numParams) {\n    var params = null;\n    if (numParams > 0) {\n        params = [];\n        for (var i = 0; i < numParams; i++) {\n            params.push(o.DYNAMIC_TYPE);\n        }\n    }\n    return o.expressionType(type, null, params);\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { R3FactoryDelegateType, compileFactoryFunction } from './render3/r3_factory';\nimport { mapToMapExpression } from './render3/util';\nexport function compileInjectable(meta) {\n    var result = null;\n    function makeFn(ret) {\n        return o.fn([], [new o.ReturnStatement(ret)], undefined, undefined, meta.name + \"_Factory\");\n    }\n    var factoryMeta = {\n        name: meta.name,\n        type: meta.type,\n        deps: meta.ctorDeps,\n        injectFn: Identifiers.inject,\n        extraStatementFn: null,\n    };\n    if (meta.useClass !== undefined) {\n        // meta.useClass has two modes of operation. Either deps are specified, in which case `new` is\n        // used to instantiate the class with dependencies injected, or deps are not specified and\n        // the factory of the class is used to instantiate it.\n        //\n        // A special case exists for useClass: Type where Type is the injectable type itself, in which\n        // case omitting deps just uses the constructor dependencies instead.\n        var useClassOnSelf = meta.useClass.isEquivalent(meta.type);\n        var deps = meta.userDeps || (useClassOnSelf && meta.ctorDeps) || undefined;\n        if (deps !== undefined) {\n            // factory: () => new meta.useClass(...deps)\n            result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useClass, delegateDeps: deps, delegateType: R3FactoryDelegateType.Class }));\n        }\n        else {\n            result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useClass, delegateType: R3FactoryDelegateType.Factory }));\n        }\n    }\n    else if (meta.useFactory !== undefined) {\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { delegate: meta.useFactory, delegateDeps: meta.userDeps || [], delegateType: R3FactoryDelegateType.Function }));\n    }\n    else if (meta.useValue !== undefined) {\n        // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n        // client code because meta.useValue is an Expression which will be defined even if the actual\n        // value is undefined.\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { expression: meta.useValue }));\n    }\n    else if (meta.useExisting !== undefined) {\n        // useExisting is an `inject` call on the existing token.\n        result = compileFactoryFunction(tslib_1.__assign({}, factoryMeta, { expression: o.importExpr(Identifiers.inject).callFn([meta.useExisting]) }));\n    }\n    else {\n        result = compileFactoryFunction(factoryMeta);\n    }\n    var token = meta.type;\n    var providedIn = meta.providedIn;\n    var expression = o.importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({ token: token, factory: result.factory, providedIn: providedIn })]);\n    var type = new o.ExpressionType(o.importExpr(Identifiers.InjectableDef, [new o.ExpressionType(meta.type)]));\n    return {\n        expression: expression,\n        type: type,\n        statements: result.statements,\n    };\n}\n//# sourceMappingURL=injectable_compiler_2.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var sourcesIndex = new Map();\n        var sources = [];\n        var sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var mappings = '';\n        var lastCol0 = 0;\n        var lastSourceIndex = 0;\n        var lastSourceLine0 = 0;\n        var lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                    lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                    lastSourceLine0 = segment.sourceLine0;\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                    lastSourceCol0 = segment.sourceCol0;\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\nexport { SourceMapGenerator };\nexport function toBase64String(value) {\n    var b64 = '';\n    value = utf8Encode(value);\n    for (var i = 0; i < value.length;) {\n        var i1 = value.charCodeAt(i++);\n        var i2 = value.charCodeAt(i++);\n        var i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var out = '';\n    do {\n        var digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n//# sourceMappingURL=source_map.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { SourceMapGenerator } from './source_map';\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nexport var CATCH_ERROR_VAR = o.variable('error', null, null);\nexport var CATCH_STACK_VAR = o.variable('stack', null, null);\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var map = new SourceMapGenerator(genFilePath);\n        var firstOffsetMapped = false;\n        var mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var spans = line.srcSpans;\n            var parts = line.parts;\n            var col0 = line.indent * _INDENT_WITH.length;\n            var spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var span = spans[spanIdx];\n                var source = span.start.file;\n                var sourceLine = span.start.line;\n                var sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\nexport { EmitterVisitorContext };\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        if (stmt.multiline) {\n            ctx.println(stmt, \"/* \" + stmt.comment + \" */\");\n        }\n        else {\n            stmt.comment.split('\\n').forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitJSDocCommentStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"/*\" + stmt.toString() + \"*/\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n    };\n    AbstractEmitterVisitor.prototype.visitTypeofExpr = function (expr, ctx) {\n        ctx.print(expr, 'typeof ');\n        expr.expr.visitExpression(this, ctx);\n    };\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case o.BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR.name;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR.name;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': ');\n        ast.falseCase.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var opStr;\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case o.BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case o.BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case o.BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case o.BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case o.BinaryOperator.BitwiseAnd:\n                opStr = '&';\n                break;\n            case o.BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case o.BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case o.BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case o.BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case o.BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case o.BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case o.BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case o.BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case o.BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case o.BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        if (ast.parens)\n            ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        if (ast.parens)\n            ctx.print(ast, \")\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var incrementedIndent = false;\n        for (var i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\nexport { AbstractEmitterVisitor };\nexport function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\nfunction _createIndent(count) {\n    var res = '';\n    for (var i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n//# sourceMappingURL=abstract_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName } from '../compile_metadata';\nimport { EmitterVisitorContext } from './abstract_emitter';\nimport { AbstractJsEmitterVisitor } from './abstract_js_emitter';\nimport * as o from './output_ast';\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\nexport function jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var converter = new JitEmitterVisitor(reflector);\n    var ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new o.LiteralMapEntry(resultVar, o.variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var result = {};\n        for (var i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        this._emitReferenceToExternal(ast, ast.node, ctx);\n        return null;\n    };\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    JitEmitterVisitor.prototype._emitReferenceToExternal = function (ast, value, ctx) {\n        var id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\nexport { JitEmitterVisitor };\n//# sourceMappingURL=output_jit.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR } from './abstract_emitter';\nimport * as o from './output_ast';\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n    };\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === o.BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === o.BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name);\n        if (stmt.value) {\n            ctx.print(stmt, ' = ');\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var fnExpr = expr.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.currentClass.parent.visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\nexport { AbstractJsEmitterVisitor };\n//# sourceMappingURL=abstract_js_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from '../output/output_ast';\nimport { jitStatements } from '../output/output_jit';\n/**\n * Implementation of `CompileReflector` which resolves references to @angular/core\n * symbols at runtime, according to a consumer-provided mapping.\n *\n * Only supports `resolveExternalReference`, all other methods throw.\n */\nvar R3JitReflector = /** @class */ (function () {\n    function R3JitReflector(context) {\n        this.context = context;\n    }\n    R3JitReflector.prototype.resolveExternalReference = function (ref) {\n        // This reflector only handles @angular/core imports.\n        if (ref.moduleName !== '@angular/core') {\n            throw new Error(\"Cannot resolve external reference to \" + ref.moduleName + \", only references to @angular/core are supported.\");\n        }\n        if (!this.context.hasOwnProperty(ref.name)) {\n            throw new Error(\"No value provided for @angular/core symbol '\" + ref.name + \"'.\");\n        }\n        return this.context[ref.name];\n    };\n    R3JitReflector.prototype.parameters = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.annotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.shallowAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.tryAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.propMetadata = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.guards = function (typeOrFunc) { throw new Error('Not implemented.'); };\n    R3JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { throw new Error('Not implemented.'); };\n    return R3JitReflector;\n}());\n/**\n * JIT compiles an expression and returns the result of executing that expression.\n *\n * @param def the definition which will be compiled and executed to get the value to patch\n * @param context an object map of @angular/core symbol names to symbols which will be available in\n * the context of the compiled expression\n * @param sourceUrl a URL to use for the source map of the compiled expression\n * @param constantPool an optional `ConstantPool` which contains constants used in the expression\n */\nexport function jitExpression(def, context, sourceUrl, preStatements) {\n    // The ConstantPool may contain Statements which declare variables used in the final expression.\n    // Therefore, its statements need to precede the actual JIT operation. The final statement is a\n    // declaration of $def which is set to the expression being compiled.\n    var statements = preStatements.concat([\n        new o.DeclareVarStmt('$def', def, undefined, [o.StmtModifier.Exported]),\n    ]);\n    var res = jitStatements(sourceUrl, statements, new R3JitReflector(context), false);\n    return res['$def'];\n}\n//# sourceMappingURL=r3_jit.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport { mapLiteral } from '../output/map_util';\nimport * as o from '../output/output_ast';\nimport { compileFactoryFunction } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\nimport { convertMetaToOutput, mapToMapExpression } from './util';\n/**\n * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n */\nexport function compileNgModule(meta) {\n    var moduleType = meta.type, bootstrap = meta.bootstrap, declarations = meta.declarations, imports = meta.imports, exports = meta.exports;\n    var expression = o.importExpr(R3.defineNgModule).callFn([mapToMapExpression({\n            type: moduleType,\n            bootstrap: o.literalArr(bootstrap.map(function (ref) { return ref.value; })),\n            declarations: o.literalArr(declarations.map(function (ref) { return ref.value; })),\n            imports: o.literalArr(imports.map(function (ref) { return ref.value; })),\n            exports: o.literalArr(exports.map(function (ref) { return ref.value; })),\n        })]);\n    var type = new o.ExpressionType(o.importExpr(R3.NgModuleDefWithMeta, [\n        new o.ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n        tupleTypeOf(exports)\n    ]));\n    var additionalStatements = [];\n    return { expression: expression, type: type, additionalStatements: additionalStatements };\n}\nexport function compileInjector(meta) {\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: R3.inject,\n        extraStatementFn: null,\n    });\n    var expression = o.importExpr(R3.defineInjector).callFn([mapToMapExpression({\n            factory: result.factory,\n            providers: meta.providers,\n            imports: meta.imports,\n        })]);\n    var type = new o.ExpressionType(o.importExpr(R3.InjectorDef, [new o.ExpressionType(meta.type)]));\n    return { expression: expression, type: type, statements: result.statements };\n}\n// TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.\nexport function compileNgModuleFromRender2(ctx, ngModule, injectableCompiler) {\n    var className = identifierName(ngModule.type);\n    var rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n    var rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n    var injectorDefArg = mapLiteral({\n        'factory': injectableCompiler.factoryFor({ type: ngModule.type, symbol: ngModule.type.reference }, ctx),\n        'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n        'imports': convertMetaToOutput(rawImports.concat(rawExports), ctx),\n    });\n    var injectorDef = o.importExpr(R3.defineInjector).callFn([injectorDefArg]);\n    ctx.statements.push(new o.ClassStmt(\n    /* name */ className, \n    /* parent */ null, \n    /* fields */ [new o.ClassField(\n        /* name */ 'ngInjectorDef', \n        /* type */ o.INFERRED_TYPE, \n        /* modifiers */ [o.StmtModifier.Static], \n        /* initializer */ injectorDef)], \n    /* getters */ [], \n    /* constructorMethod */ new o.ClassMethod(null, [], []), \n    /* methods */ []));\n}\nfunction accessExportScope(module) {\n    var selectorScope = new o.ReadPropExpr(module, 'ngModuleDef');\n    return new o.ReadPropExpr(selectorScope, 'exported');\n}\nfunction tupleTypeOf(exp) {\n    var types = exp.map(function (ref) { return o.typeofExpr(ref.type); });\n    return exp.length > 0 ? o.expressionType(o.literalArr(types)) : o.NONE_TYPE;\n}\n//# sourceMappingURL=r3_module_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nexport function mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nexport function mapLiteral(obj) {\n    return o.literalMap(Object.keys(obj).map(function (key) { return ({\n        key: key,\n        quoted: false,\n        value: obj[key],\n    }); }));\n}\n//# sourceMappingURL=map_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { error } from '../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from './r3_factory';\nimport { Identifiers as R3 } from './r3_identifiers';\nexport function compilePipeFromMetadata(metadata) {\n    var definitionMapValues = [];\n    // e.g. `name: 'myPipe'`\n    definitionMapValues.push({ key: 'name', value: o.literal(metadata.pipeName), quoted: false });\n    // e.g. `type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: metadata.type, quoted: false });\n    var templateFactory = compileFactoryFunction({\n        name: metadata.name,\n        type: metadata.type,\n        deps: metadata.deps,\n        injectFn: R3.directiveInject,\n        extraStatementFn: null,\n    });\n    definitionMapValues.push({ key: 'factory', value: templateFactory.factory, quoted: false });\n    // e.g. `pure: true`\n    definitionMapValues.push({ key: 'pure', value: o.literal(metadata.pure), quoted: false });\n    var expression = o.importExpr(R3.definePipe).callFn([o.literalMap(definitionMapValues)]);\n    var type = new o.ExpressionType(o.importExpr(R3.PipeDefWithMeta, [\n        new o.ExpressionType(metadata.type),\n        new o.ExpressionType(new o.LiteralExpr(metadata.pipeName)),\n    ]));\n    return { expression: expression, type: type, statements: templateFactory.statements };\n}\n/**\n * Write a pipe definition to the output context.\n */\nexport function compilePipeFromRender2(outputCtx, pipe, reflector) {\n    var definitionMapValues = [];\n    var name = identifierName(pipe.type);\n    if (!name) {\n        return error(\"Cannot resolve the name of \" + pipe.type);\n    }\n    var metadata = {\n        name: name,\n        pipeName: pipe.name,\n        type: outputCtx.importExpr(pipe.type.reference),\n        deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n        pure: pipe.pure,\n    };\n    var res = compilePipeFromMetadata(metadata);\n    var definitionField = outputCtx.constantPool.propertyNameOf(3 /* Pipe */);\n    outputCtx.statements.push(new o.ClassStmt(\n    /* name */ name, \n    /* parent */ null, \n    /* fields */ [new o.ClassField(\n        /* name */ definitionField, \n        /* type */ o.INFERRED_TYPE, \n        /* modifiers */ [o.StmtModifier.Static], \n        /* initializer */ res.expression)], \n    /* getters */ [], \n    /* constructorMethod */ new o.ClassMethod(null, [], []), \n    /* methods */ []));\n}\n//# sourceMappingURL=r3_pipe_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nexport { ParserError };\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nexport { ParseSpan };\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\nexport { AST };\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    tslib_1.__extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nexport { Quote };\nvar EmptyExpr = /** @class */ (function (_super) {\n    tslib_1.__extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nexport { EmptyExpr };\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    tslib_1.__extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\nexport { ImplicitReceiver };\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    tslib_1.__extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nexport { Chain };\nvar Conditional = /** @class */ (function (_super) {\n    tslib_1.__extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nexport { Conditional };\nvar PropertyRead = /** @class */ (function (_super) {\n    tslib_1.__extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nexport { PropertyRead };\nvar PropertyWrite = /** @class */ (function (_super) {\n    tslib_1.__extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nexport { PropertyWrite };\nvar SafePropertyRead = /** @class */ (function (_super) {\n    tslib_1.__extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nexport { SafePropertyRead };\nvar KeyedRead = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nexport { KeyedRead };\nvar KeyedWrite = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nexport { KeyedWrite };\nvar BindingPipe = /** @class */ (function (_super) {\n    tslib_1.__extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nexport { BindingPipe };\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nexport { LiteralPrimitive };\nvar LiteralArray = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nexport { LiteralArray };\nvar LiteralMap = /** @class */ (function (_super) {\n    tslib_1.__extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nexport { LiteralMap };\nvar Interpolation = /** @class */ (function (_super) {\n    tslib_1.__extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nexport { Interpolation };\nvar Binary = /** @class */ (function (_super) {\n    tslib_1.__extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nexport { Binary };\nvar PrefixNot = /** @class */ (function (_super) {\n    tslib_1.__extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nexport { PrefixNot };\nvar NonNullAssert = /** @class */ (function (_super) {\n    tslib_1.__extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nexport { NonNullAssert };\nvar MethodCall = /** @class */ (function (_super) {\n    tslib_1.__extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nexport { MethodCall };\nvar SafeMethodCall = /** @class */ (function (_super) {\n    tslib_1.__extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nexport { SafeMethodCall };\nvar FunctionCall = /** @class */ (function (_super) {\n    tslib_1.__extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nexport { FunctionCall };\nvar ASTWithSource = /** @class */ (function (_super) {\n    tslib_1.__extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nexport { ASTWithSource };\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nexport { TemplateBinding };\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nexport { NullAstVisitor };\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ast.target.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nexport { RecursiveAstVisitor };\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    AstTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        for (var i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\nexport { AstTransformer };\n// A transformer that only creates new nodes if the transformer makes a change or\n// a change is made a child node.\nvar AstMemoryEfficientTransformer = /** @class */ (function () {\n    function AstMemoryEfficientTransformer() {\n    }\n    AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitInterpolation = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = function (ast, context) { return ast; };\n    AstMemoryEfficientTransformer.prototype.visitPropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        var receiver = ast.receiver.visit(this);\n        var args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitFunctionCall = function (ast, context) {\n        var target = ast.target && ast.target.visit(this);\n        var args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralArray = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitLiteralMap = function (ast, context) {\n        var values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitBinary = function (ast, context) {\n        var left = ast.left.visit(this);\n        var right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPrefixNot = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        var expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitConditional = function (ast, context) {\n        var condition = ast.condition.visit(this);\n        var trueExp = ast.trueExp.visit(this);\n        var falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitPipe = function (ast, context) {\n        var exp = ast.exp.visit(this);\n        var args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedRead = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        var obj = ast.obj.visit(this);\n        var key = ast.key.visit(this);\n        var value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitAll = function (asts) {\n        var res = new Array(asts.length);\n        var modified = false;\n        for (var i = 0; i < asts.length; ++i) {\n            var original = asts[i];\n            var value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    };\n    AstMemoryEfficientTransformer.prototype.visitChain = function (ast, context) {\n        var expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    };\n    AstMemoryEfficientTransformer.prototype.visitQuote = function (ast, context) { return ast; };\n    return AstMemoryEfficientTransformer;\n}());\nexport { AstMemoryEfficientTransformer };\nexport function visitAstChildren(ast, visitor, context) {\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n// Bindings\nvar ParsedProperty = /** @class */ (function () {\n    function ParsedProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === ParsedPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === ParsedPropertyType.ANIMATION;\n    }\n    return ParsedProperty;\n}());\nexport { ParsedProperty };\nexport var ParsedPropertyType;\n(function (ParsedPropertyType) {\n    ParsedPropertyType[ParsedPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ParsedPropertyType[ParsedPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n    ParsedPropertyType[ParsedPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n})(ParsedPropertyType || (ParsedPropertyType = {}));\nvar ParsedEvent = /** @class */ (function () {\n    // Regular events have a target\n    // Animation events have a phase\n    function ParsedEvent(name, targetOrPhase, type, handler, sourceSpan) {\n        this.name = name;\n        this.targetOrPhase = targetOrPhase;\n        this.type = type;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedEvent;\n}());\nexport { ParsedEvent };\nvar ParsedVariable = /** @class */ (function () {\n    function ParsedVariable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ParsedVariable;\n}());\nexport { ParsedVariable };\nvar BoundElementProperty = /** @class */ (function () {\n    function BoundElementProperty(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    return BoundElementProperty;\n}());\nexport { BoundElementProperty };\n//# sourceMappingURL=ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as cdAst from '../expression_parser/ast';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = o.variable('$event');\n    return EventHandlerVars;\n}());\nexport { EventHandlerVars };\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(\n    /**\n     * Render2 compatible statements,\n     */\n    stmts, \n    /**\n     * Variable name used with render2 compatible statements.\n     */\n    allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n        /**\n         * This is bit of a hack. It converts statements which render2 expects to statements which are\n         * expected by render3.\n         *\n         * Example: `<div click=\"doSomething($event)\">` will generate:\n         *\n         * Render3:\n         * ```\n         * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n         * return pd_b;\n         * ```\n         *\n         * but render2 expects:\n         * ```\n         * return ctx.doSomething($event);\n         * ```\n         */\n        // TODO(misko): remove this hack once we no longer support ViewEngine.\n        this.render3Stmts = stmts.map(function (statement) {\n            if (statement instanceof o.DeclareVarStmt && statement.name == allowDefault.name &&\n                statement.value instanceof o.BinaryOperatorExpr) {\n                var lhs = statement.value.lhs;\n                return new o.ReturnStatement(lhs.value);\n            }\n            return statement;\n        });\n    }\n    return ConvertActionBindingResult;\n}());\nexport { ConvertActionBindingResult };\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n */\nexport function convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return o.literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return o.literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var lastIndex = actionStmts.length - 1;\n    var preventDefaultVar = null;\n    if (lastIndex >= 0) {\n        var lastStatement = actionStmts[lastIndex];\n        var returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                    .toDeclStmt(null, [o.StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\nexport function convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\nexport { ConvertPropertyBindingResult };\nexport var BindingForm;\n(function (BindingForm) {\n    // The general form of binding expression, supports all expressions.\n    BindingForm[BindingForm[\"General\"] = 0] = \"General\";\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    BindingForm[BindingForm[\"TrySimple\"] = 1] = \"TrySimple\";\n})(BindingForm || (BindingForm = {}));\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n */\nexport function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var currValExpr = createCurrValueExpr(bindingId);\n    var stmts = [];\n    var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(o.DYNAMIC_TYPE, [o.StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\nfunction convertBuiltins(converterFactory, ast) {\n    var visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\nexport function temporaryDeclaration(bindingId, temporaryNumber) {\n    return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode;\n(function (_Mode) {\n    _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n    _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n})(_Mode || (_Mode = {}));\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(cdAst.AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var op;\n        switch (ast.operation) {\n            case '+':\n                op = o.BinaryOperator.Plus;\n                break;\n            case '-':\n                op = o.BinaryOperator.Minus;\n                break;\n            case '*':\n                op = o.BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = o.BinaryOperator.Divide;\n                break;\n            case '%':\n                op = o.BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = o.BinaryOperator.And;\n                break;\n            case '||':\n                op = o.BinaryOperator.Or;\n                break;\n            case '==':\n                op = o.BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = o.BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = o.BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = o.BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = o.BinaryOperator.Lower;\n                break;\n            case '>':\n                op = o.BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = o.BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = o.BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new o.BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var args = [o.literal(ast.expressions.length)];\n        for (var i = 0; i < ast.strings.length - 1; i++) {\n            args.push(o.literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(o.literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            o.importExpr(Identifiers.interpolate).callFn([args[0], o.literalArr(args.slice(1))]);\n    };\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var obj = this._visit(ast.obj, _Mode.Expression);\n        var key = this._visit(ast.key, _Mode.Expression);\n        var value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type interference\n        // to infer the type.\n        var type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            o.INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, o.literal(ast.value, type));\n    };\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        if (ast.receiver instanceof cdAst.ImplicitReceiver && ast.name == '$any') {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return args[0].cast(o.DYNAMIC_TYPE);\n        }\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var args = this.visitAll(ast.args, _Mode.Expression);\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var result = null;\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var receiver = this._visit(ast.receiver, _Mode.Expression);\n        var varExpr = null;\n        if (receiver === this._implicitReceiver) {\n            var localExpr = this._getLocal(ast.name);\n            if (localExpr) {\n                if (localExpr instanceof o.ReadPropExpr) {\n                    // If the local variable is a property read expression, it's a reference\n                    // to a 'context.property' value and will be used as the target of the\n                    // write expression.\n                    varExpr = localExpr;\n                }\n                else {\n                    // Otherwise it's an error.\n                    throw new Error('Cannot assign to a reference or variable!');\n                }\n            }\n        }\n        // If no local expression could be produced, use the original receiver's\n        // property as the target.\n        if (varExpr === null) {\n            varExpr = receiver.prop(ast.name);\n        }\n        return convertToStatementIfNeeded(mode, varExpr.set(this._visit(ast.value, _Mode.Expression)));\n    };\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var temporary = undefined;\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new cdAst.MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n    };\n    // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n    // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n    // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n    // safe method call as this needs be transform initially to:\n    //   a == null ? null : a.c.b.c?.d.e\n    // then to:\n    //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return null; },\n            visitChain: function (ast) { return null; },\n            visitConditional: function (ast) { return null; },\n            visitFunctionCall: function (ast) { return null; },\n            visitImplicitReceiver: function (ast) { return null; },\n            visitInterpolation: function (ast) { return null; },\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: function (ast) { return null; },\n            visitLiteralArray: function (ast) { return null; },\n            visitLiteralMap: function (ast) { return null; },\n            visitLiteralPrimitive: function (ast) { return null; },\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            visitPipe: function (ast) { return null; },\n            visitPrefixNot: function (ast) { return null; },\n            visitNonNullAssert: function (ast) { return null; },\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: function (ast) { return null; },\n            visitQuote: function (ast) { return null; },\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    // Returns true of the AST includes a method or a pipe indicating that, if the\n    // expression is used as the target of a safe property or method access then\n    // the expression should be stored into a temporary variable.\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: function (ast) { return false; },\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: function (ast) { return true; },\n            visitImplicitReceiver: function (ast) { return false; },\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: function (ast) { return false; },\n            visitKeyedWrite: function (ast) { return false; },\n            visitLiteralArray: function (ast) { return true; },\n            visitLiteralMap: function (ast) { return true; },\n            visitLiteralPrimitive: function (ast) { return false; },\n            visitMethodCall: function (ast) { return true; },\n            visitPipe: function (ast) { return true; },\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: function (ast) { return false; },\n            visitPropertyWrite: function (ast) { return false; },\n            visitQuote: function (ast) { return false; },\n            visitSafeMethodCall: function (ast) { return true; },\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        arg.forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\nfunction createCurrValueExpr(bindingId) {\n    return o.variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\nfunction createPreventDefaultVar(bindingId) {\n    return o.variable(\"pd_\" + bindingId);\n}\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof o.ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof o.ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    tslib_1.__extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(cdAst.FunctionCall));\nexport { BuiltinFunctionCall };\n//# sourceMappingURL=expression_converter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var LifecycleHooks;\n(function (LifecycleHooks) {\n    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n})(LifecycleHooks || (LifecycleHooks = {}));\nexport var LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\nexport function hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\nexport function getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = hook;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\n//# sourceMappingURL=lifecycle_reflector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var $EOF = 0;\nexport var $TAB = 9;\nexport var $LF = 10;\nexport var $VTAB = 11;\nexport var $FF = 12;\nexport var $CR = 13;\nexport var $SPACE = 32;\nexport var $BANG = 33;\nexport var $DQ = 34;\nexport var $HASH = 35;\nexport var $$ = 36;\nexport var $PERCENT = 37;\nexport var $AMPERSAND = 38;\nexport var $SQ = 39;\nexport var $LPAREN = 40;\nexport var $RPAREN = 41;\nexport var $STAR = 42;\nexport var $PLUS = 43;\nexport var $COMMA = 44;\nexport var $MINUS = 45;\nexport var $PERIOD = 46;\nexport var $SLASH = 47;\nexport var $COLON = 58;\nexport var $SEMICOLON = 59;\nexport var $LT = 60;\nexport var $EQ = 61;\nexport var $GT = 62;\nexport var $QUESTION = 63;\nexport var $0 = 48;\nexport var $9 = 57;\nexport var $A = 65;\nexport var $E = 69;\nexport var $F = 70;\nexport var $X = 88;\nexport var $Z = 90;\nexport var $LBRACKET = 91;\nexport var $BACKSLASH = 92;\nexport var $RBRACKET = 93;\nexport var $CARET = 94;\nexport var $_ = 95;\nexport var $a = 97;\nexport var $e = 101;\nexport var $f = 102;\nexport var $n = 110;\nexport var $r = 114;\nexport var $t = 116;\nexport var $u = 117;\nexport var $v = 118;\nexport var $x = 120;\nexport var $z = 122;\nexport var $LBRACE = 123;\nexport var $BAR = 124;\nexport var $RBRACE = 125;\nexport var $NBSP = 160;\nexport var $PIPE = 124;\nexport var $TILDA = 126;\nexport var $AT = 64;\nexport var $BT = 96;\nexport function isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\nexport function isDigit(code) {\n    return $0 <= code && code <= $9;\n}\nexport function isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\nexport function isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n//# sourceMappingURL=chars.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from './chars';\nimport { identifierModuleUrl, identifierName } from './compile_metadata';\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    ParseLocation.prototype.moveBy = function (delta) {\n        var source = this.file.content;\n        var len = source.length;\n        var offset = this.offset;\n        var line = this.line;\n        var col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var ch = source.charCodeAt(offset);\n            if (ch == chars.$LF) {\n                line--;\n                var priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == chars.$LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var content = this.file.content;\n        var startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var endOffset = startOffset;\n            var ctxChars = 0;\n            var ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nexport { ParseLocation };\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nexport { ParseSourceFile };\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nexport { ParseSourceSpan };\nexport var ParseErrorLevel;\n(function (ParseErrorLevel) {\n    ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n    ParseErrorLevel[ParseErrorLevel[\"ERROR\"] = 1] = \"ERROR\";\n})(ParseErrorLevel || (ParseErrorLevel = {}));\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    ParseError.prototype.contextualMessage = function () {\n        var ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    ParseError.prototype.toString = function () {\n        var details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\nexport { ParseError };\nexport function typeSourceSpan(kind, type) {\n    var moduleUrl = identifierModuleUrl(type);\n    var sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n//# sourceMappingURL=parse_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /*\n     * Process styles to convert native ShadowDOM rules that will trip\n     * up the css parser; we rely on decorating the stylesheet with inert rules.\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-next-selector { content: ':host menu-item'; }\n     * ::content menu-item {\n     *\n     * to this:\n     *\n     * scopeName menu-item {\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     *\n     * For example, we convert this rule:\n     *\n     * polyfill-rule {\n     *   content: ':host menu-item';\n     * ...\n     * }\n     *\n     * to this:\n     *\n     * scopeName menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n     *\n     *  .foo {... }\n     *\n     *  and converts this to\n     *\n     *  scopeName .foo { ... }\n    */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /*\n     * Process styles to add rules which will only apply under the polyfill\n     * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n     * occasions, e.g. -webkit-calc on Safari.)\n     * For example, we convert this rule:\n     *\n     * @polyfill-unscoped-rule {\n     *   content: 'menu-item';\n     * ... }\n     *\n     * to this:\n     *\n     * menu-item {...}\n     *\n    **/\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var r = '';\n        var m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var parts = m[2].split(',');\n                var r = [];\n                for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    // change a selector like 'div' to 'name div'\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var selector = rule.selector;\n            var content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var lre = /\\[/g;\n        var rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    // scope via name and [is=name]\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    // return a selector with [name] suffix on each simple selector\n    // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var attrName = '[' + scopeSelector + ']';\n        var _scopeSelectorPart = function (p) {\n            var scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var scopedSelector = '';\n        var startIndex = 0;\n        var res;\n        var sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var separator = res[1];\n            var part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nexport { ShadowCss };\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\nexport { CssRule };\nexport function processRules(input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\nfunction escapeBlocks(input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n//# sourceMappingURL=shadow_css.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nexport var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n    TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n    TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n    TokenType[TokenType[\"String\"] = 3] = \"String\";\n    TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n    TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n    TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n})(TokenType || (TokenType = {}));\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    Lexer.prototype.tokenize = function (text) {\n        var scanner = new _Scanner(text);\n        var tokens = [];\n        var token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nexport { Lexer };\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    Token.prototype.isOperator = function (operator) {\n        return this.type == TokenType.Operator && this.strValue == operator;\n    };\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\nexport { Token };\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nexport var EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n    };\n    _Scanner.prototype.scanToken = function () {\n        var input = this.input, length = this.length;\n        var peek = this.peek, index = this.index;\n        // Skip whitespace.\n        while (peek <= chars.$SPACE) {\n            if (++index >= length) {\n                peek = chars.$EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (chars.isDigit(peek))\n            return this.scanNumber(index);\n        var start = index;\n        switch (peek) {\n            case chars.$PERIOD:\n                this.advance();\n                return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, chars.$PERIOD);\n            case chars.$LPAREN:\n            case chars.$RPAREN:\n            case chars.$LBRACE:\n            case chars.$RBRACE:\n            case chars.$LBRACKET:\n            case chars.$RBRACKET:\n            case chars.$COMMA:\n            case chars.$COLON:\n            case chars.$SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case chars.$SQ:\n            case chars.$DQ:\n                return this.scanString();\n            case chars.$HASH:\n            case chars.$PLUS:\n            case chars.$MINUS:\n            case chars.$STAR:\n            case chars.$SLASH:\n            case chars.$PERCENT:\n            case chars.$CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case chars.$QUESTION:\n                return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n            case chars.$LT:\n            case chars.$GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n            case chars.$BANG:\n            case chars.$EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n            case chars.$AMPERSAND:\n                return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n            case chars.$BAR:\n                return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n            case chars.$NBSP:\n                while (chars.isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    _Scanner.prototype.scanIdentifier = function () {\n        var start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    _Scanner.prototype.scanNumber = function (start) {\n        var simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (chars.isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == chars.$PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!chars.isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var str = this.input.substring(start, this.index);\n        var value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    _Scanner.prototype.scanString = function () {\n        var start = this.index;\n        var quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var buffer = '';\n        var marker = this.index;\n        var input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == chars.$BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == chars.$u) {\n                    // 4 character hex code for unicode character.\n                    var hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == chars.$EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    _Scanner.prototype.error = function (message, offset) {\n        var position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\nfunction isIdentifierStart(code) {\n    return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n        (code == chars.$_) || (code == chars.$$);\n}\nexport function isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== chars.$EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\nfunction isIdentifierPart(code) {\n    return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n        (code == chars.$$);\n}\nfunction isExponentStart(code) {\n    return code == chars.$e || code == chars.$E;\n}\nfunction isExponentSign(code) {\n    return code == chars.$MINUS || code == chars.$PLUS;\n}\nexport function isQuote(code) {\n    return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\nfunction unescape(code) {\n    switch (code) {\n        case chars.$n:\n            return chars.$LF;\n        case chars.$f:\n            return chars.$FF;\n        case chars.$r:\n            return chars.$CR;\n        case chars.$t:\n            return chars.$TAB;\n        case chars.$v:\n            return chars.$VTAB;\n        default:\n            return code;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, identifierModuleUrl, identifierName } from './compile_metadata';\nimport { ViewEncapsulation } from './core';\nimport * as o from './output/output_ast';\nimport { ShadowCss } from './shadow_css';\nvar COMPONENT_VARIABLE = '%COMP%';\nexport var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nexport var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nexport { StylesCompileDependency };\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nexport { CompiledStylesheet };\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var template = comp.template;\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return comp.template.encapsulation === ViewEncapsulation.Emulated;\n    };\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var styleExpressions = stylesheet.styles.map(function (plainStyle) { return o.literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(null);\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var stmt = o.variable(stylesVar)\n            .set(o.literalArr(styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n            o.StmtModifier.Final, o.StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\nexport { StyleCompiler };\nfunction getStylesVarName(component) {\n    var result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n//# sourceMappingURL=style_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport function assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\nexport function assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var start_1 = value[0];\n        var end_1 = value[1];\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n//# sourceMappingURL=assertions.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertInterpolationSymbols } from '../assertions';\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nexport { InterpolationConfig };\nexport var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n//# sourceMappingURL=interpolation_config.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { escapeRegExp } from '../util';\nimport { ASTWithSource, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding } from './ast';\nimport { EOF, TokenType, isIdentifier, isQuote } from './lexer';\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nexport { SplitInterpolation };\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\nexport { TemplateBindingParseResult };\nfunction _createInterpolateRegExp(config) {\n    var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(this._stripComments(input));\n        var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var ast = this._parseBindingAst(input, location, interpolationConfig);\n        var errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var sourceToLex = this._stripComments(input);\n        var tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    Parser.prototype.parseTemplateBindings = function (tplKey, tplValue, location) {\n        var tokens = this._lexer.tokenize(tplValue);\n        return new _ParseAST(tplValue, location, tokens, tplValue.length, false, this.errors, 0)\n            .parseTemplateBindings(tplKey);\n    };\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var expressions = [];\n        for (var i = 0; i < split.expressions.length; ++i) {\n            var expressionText = split.expressions[i];\n            var sourceToLex = this._stripComments(expressionText);\n            var tokens = this._lexer.tokenize(sourceToLex);\n            var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var strings = [];\n        var expressions = [];\n        var offsets = [];\n        var offset = 0;\n        for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    Parser.prototype._stripComments = function (input) {\n        var i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    Parser.prototype._commentStart = function (input) {\n        var outerQuote = null;\n        for (var i = 0; i < input.length - 1; i++) {\n            var char = input.charCodeAt(i);\n            var nextChar = input.charCodeAt(i + 1);\n            if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var regexp = _createInterpolateRegExp(interpolationConfig);\n        var parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var errLocation = '';\n        for (var j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nexport { Parser };\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    _ParseAST.prototype.peek = function (offset) {\n        var i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    _ParseAST.prototype.advance = function () { this.index++; };\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return n.toString();\n    };\n    _ParseAST.prototype.parseChain = function () {\n        var exprs = [];\n        var start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter(chars.$SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter(chars.$SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    _ParseAST.prototype.parsePipe = function () {\n        var result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var name_1 = this.expectIdentifierOrKeyword();\n                var args = [];\n                while (this.optionalCharacter(chars.$COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    _ParseAST.prototype.parseConditional = function () {\n        var start = this.inputIndex;\n        var result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var yes = this.parsePipe();\n            var no = void 0;\n            if (!this.optionalCharacter(chars.$COLON)) {\n                var end = this.inputIndex;\n                var expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var start = this.inputIndex;\n            var operator = this.next.strValue;\n            var result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    _ParseAST.prototype.parseCallChain = function () {\n        var result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter(chars.$PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter(chars.$LBRACKET)) {\n                this.rbracketsExpected++;\n                var key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter(chars.$RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter(chars.$LPAREN)) {\n                this.rparensExpected++;\n                var args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter(chars.$RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    _ParseAST.prototype.parsePrimary = function () {\n        var start = this.inputIndex;\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            var result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter(chars.$RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter(chars.$LBRACKET)) {\n            this.rbracketsExpected++;\n            var elements = this.parseExpressionList(chars.$RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter(chars.$RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter(chars.$LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n        }\n        return result;\n    };\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var keys = [];\n        var values = [];\n        var start = this.inputIndex;\n        this.expectCharacter(chars.$LBRACE);\n        if (!this.optionalCharacter(chars.$RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var quoted = this.next.isString();\n                var key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter(chars.$COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter(chars.$RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var start = receiver.span.start;\n        var id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            var args = this.parseCallArguments();\n            this.expectCharacter(chars.$RPAREN);\n            this.rparensExpected--;\n            var span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter(chars.$RPAREN))\n            return [];\n        var positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter(chars.$COMMA));\n        return positionals;\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` in between.\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var result = '';\n        var operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    // Parses the AST for `<some-tag *tplKey=AST>`\n    _ParseAST.prototype.parseTemplateBindings = function (tplKey) {\n        var firstBinding = true;\n        var bindings = [];\n        var warnings = [];\n        do {\n            var start = this.inputIndex;\n            var rawKey = void 0;\n            var key = void 0;\n            var isVar = false;\n            if (firstBinding) {\n                rawKey = key = tplKey;\n                firstBinding = false;\n            }\n            else {\n                isVar = this.peekKeywordLet();\n                if (isVar)\n                    this.advance();\n                rawKey = this.expectTemplateBindingKey();\n                key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n                this.optionalCharacter(chars.$COLON);\n            }\n            var name_2 = null;\n            var expression = null;\n            if (isVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                isVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var start_1 = this.inputIndex;\n                var ast = this.parsePipe();\n                var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, isVar, name_2, expression));\n            if (this.peekKeywordAs() && !isVar) {\n                var letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n            }\n            if (!this.optionalCharacter(chars.$SEMICOLON)) {\n                this.optionalCharacter(chars.$COMMA);\n            }\n        } while (this.index < this.tokens.length);\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n    // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n    // '}' and ']' as conditional recovery points if one of calling productions is expecting\n    // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n    // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n    // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n    // must be conditional as they must be skipped if none of the calling productions are not\n    // expecting the closing token else we will never make progress in the case of an\n    // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n    // parseChain() is always the root production and it expects a ';'.\n    // If a production expects one of these token it increments the corresponding nesting count,\n    // and then decrements it just prior to checking if the token is in the input.\n    _ParseAST.prototype.skip = function () {\n        var n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nexport { _ParseAST };\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    SimpleExpressionChecker.check = function (ast) {\n        var s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n//# sourceMappingURL=parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expression `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    AstPath.prototype.first = function (ctor) {\n        for (var i = this.path.length - 1; i >= 0; i--) {\n            var item = this.path[i];\n            if (item instanceof ctor)\n                return item;\n        }\n    };\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    AstPath.prototype.pop = function () { return this.path.pop(); };\n    return AstPath;\n}());\nexport { AstPath };\n//# sourceMappingURL=ast_path.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AstPath } from '../ast_path';\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nexport { Text };\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nexport { Expansion };\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nexport { ExpansionCase };\nvar Attribute = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nexport { Attribute };\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nexport { Element };\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\nexport { Comment };\nexport function visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\nexport { RecursiveVisitor };\nfunction spanOf(ast) {\n    var start = ast.sourceSpan.start.offset;\n    var end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\nexport function findNode(nodes, position) {\n    var path = [];\n    var visitor = new /** @class */ (function (_super) {\n        tslib_1.__extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n//# sourceMappingURL=ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as chars from '../chars';\nimport { ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan } from '../parse_util';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { NAMED_ENTITIES, TagContentType } from './tags';\nexport var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n    TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n    TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n    TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n    TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n    TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n    TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n    TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n    TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n    TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n    TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n    TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n    TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n    TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n    TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n    TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n    TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n    TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n})(TokenType || (TokenType = {}));\nvar Token = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nexport { Token };\nvar TokenError = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nexport { TokenError };\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\nexport { TokenizeResult };\nexport function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\n// See http://www.w3.org/TR/html51/syntax.html#writing\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        // Note: this is always lowercase!\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== chars.$EOF) {\n            var start = this._getLocation();\n            try {\n                if (this._attemptCharCode(chars.$LT)) {\n                    if (this._attemptCharCode(chars.$BANG)) {\n                        if (this._attemptCharCode(chars.$LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode(chars.$MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode(chars.$SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * @returns whether an ICU token has been created\n     * @internal\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === chars.$RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var token = new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return token;\n    };\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = null;\n        this._currentTokenType = null;\n        return new _ControlFlowError(error);\n    };\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n        }\n        if (this._peek === chars.$LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n    };\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var initialPosition = this._savePosition();\n        for (var i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === chars.$AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    _Tokenizer.prototype._decodeEntity = function () {\n        var start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode(chars.$HASH)) {\n            var isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n            var numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var tagCloseStart;\n        var textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n        var parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType.COMMENT_START, start);\n        this._requireCharCode(chars.$MINUS);\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, chars.$MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var textToken = this._consumeRawText(false, chars.$RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType.DOC_TYPE, start);\n        this._attemptUntilChar(chars.$GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var nameOrPrefixStart = this._index;\n        var prefix = null;\n        while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var nameStart;\n        if (this._peek === chars.$COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var savedPos = this._savePosition();\n        var tagName;\n        var lowercaseTagName;\n        try {\n            if (!chars.isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode(chars.$EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var textToken = this._consumeRawText(decodeEntities, chars.$LT, function () {\n            if (!_this._attemptCharCode(chars.$SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode(chars.$GT);\n        });\n        this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([null, lowercaseTagName]);\n    };\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType.TAG_OPEN_START, start);\n        var parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType.ATTR_NAME);\n        var prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType.ATTR_VALUE);\n        var value;\n        if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n            var quoteChar = this._peek;\n            this._advance();\n            var parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var tokenType = this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode(chars.$GT);\n        this._endToken([]);\n    };\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode(chars.$GT);\n        this._endToken(prefixAndName);\n    };\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        var condition = this._readUntil(chars.$COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        var type = this._readUntil(chars.$COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n        var value = this._readUntil(chars.$LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n    };\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    _Tokenizer.prototype._consumeText = function () {\n        var start = this._getLocation();\n        this._beginToken(TokenType.TEXT, start);\n        var parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    _Tokenizer.prototype._readUntil = function (char) {\n        var start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_CASE_EXP_START;\n    };\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\nfunction isNotWhitespace(code) {\n    return !chars.isWhitespace(code) || code === chars.$EOF;\n}\nfunction isNameEnd(code) {\n    return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n        code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\nfunction isPrefixEnd(code) {\n    return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n        (code < chars.$0 || code > chars.$9);\n}\nfunction isDigitEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\nfunction isNamedEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\nfunction isExpansionCaseStart(peek) {\n    return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\nfunction toUpperCaseCharCode(code) {\n    return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\nfunction mergeTextTokens(srcTokens) {\n    var dstTokens = [];\n    var lastDstToken = undefined;\n    for (var i = 0; i < srcTokens.length; i++) {\n        var token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n//# sourceMappingURL=lexer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError, ParseSourceSpan } from '../parse_util';\nimport * as html from './ast';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport * as lex from './lexer';\nimport { getNsPrefix, isNgContainer, mergeNsAndName } from './tags';\nvar TreeError = /** @class */ (function (_super) {\n    tslib_1.__extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nexport { TreeError };\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nexport { ParseTreeResult };\nvar Parser = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var tokensAndErrors = lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nexport { Parser };\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== lex.TokenType.EOF) {\n            if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n                this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    _TreeBuilder.prototype._advance = function () {\n        var prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(lex.TokenType.CDATA_END);\n    };\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var text = this._advanceIf(lex.TokenType.RAW_TEXT);\n        this._advanceIf(lex.TokenType.COMMENT_END);\n        var value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new html.Comment(value, token.sourceSpan));\n    };\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var switchValue = this._advance();\n        var type = this._advance();\n        var cases = [];\n        // read =\n        while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n            var expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new html.Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var value = this._advance();\n        // read {\n        if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var start = this._advance();\n        var exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var end = this._advance();\n        exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(parsedExp.errors);\n            return null;\n        }\n        var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new html.ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var exp = [];\n        var expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n                this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new html.Text(text, token.sourceSpan));\n        }\n    };\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var prefix = startTagToken.parts[0];\n        var name = startTagToken.parts[1];\n        var attrs = [];\n        while (this._peek.type === lex.TokenType.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var end = this._peek.sourceSpan.start;\n        var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var el = new html.Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var newParent = new html.Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var end = attrName.sourceSpan.end;\n        var value = '';\n        var valueSpan = undefined;\n        if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n            var valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new html.Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var container = null;\n        for (var i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * @internal\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n//# sourceMappingURL=parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { getHtmlTagDefinition } from './html_tags';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { Parser } from './parser';\nexport { ParseTreeResult, TreeError } from './parser';\nvar HtmlParser = /** @class */ (function (_super) {\n    tslib_1.__extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser));\nexport { HtmlParser };\n//# sourceMappingURL=html_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from './ast';\nimport { ParseTreeResult } from './parser';\nimport { NGSP_UNICODE } from './tags';\nexport var PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n */\nexport function replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    WhitespaceVisitor.prototype.visitElement = function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new html.Element(element.name, html.visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    WhitespaceVisitor.prototype.visitText = function (text, context) {\n        var isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new html.Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n    WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\nexport { WhitespaceVisitor };\nexport function removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(html.visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n//# sourceMappingURL=html_whitespaces.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '../core';\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n//                               Reach out to mprobst for details.\n//\n// =================================================================================================\n/** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\nvar _SECURITY_SCHEMA;\nexport function SECURITY_SCHEMA() {\n    if (!_SECURITY_SCHEMA) {\n        _SECURITY_SCHEMA = {};\n        // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n        registerContext(SecurityContext.HTML, [\n            'iframe|srcdoc',\n            '*|innerHTML',\n            '*|outerHTML',\n        ]);\n        registerContext(SecurityContext.STYLE, ['*|style']);\n        // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n        registerContext(SecurityContext.URL, [\n            '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n            'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n            'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n            'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n        ]);\n        registerContext(SecurityContext.RESOURCE_URL, [\n            'applet|code',\n            'applet|codebase',\n            'base|href',\n            'embed|src',\n            'frame|src',\n            'head|profile',\n            'html|manifest',\n            'iframe|src',\n            'link|href',\n            'media|src',\n            'object|codebase',\n            'object|data',\n            'script|src',\n        ]);\n    }\n    return _SECURITY_SCHEMA;\n}\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n//# sourceMappingURL=dom_security_schema.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SecurityContext } from '../core';\nimport { isNgContainer, isNgContent } from '../ml_parser/tags';\nimport { dashCaseToCamelCase } from '../util';\nimport { SECURITY_SCHEMA } from './dom_security_schema';\nimport { ElementSchemaRegistry } from './element_schema_registry';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    tslib_1.__extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA()['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var unit = '';\n        var strVal = val.toString().trim();\n        var errorMsg = null;\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nexport { DomElementSchemaRegistry };\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n//# sourceMappingURL=dom_element_schema_registry.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { SecurityContext } from '../core';\nimport { BoundElementProperty, EmptyExpr, ParsedEvent, ParsedProperty, ParsedPropertyType, ParsedVariable, RecursiveAstVisitor } from '../expression_parser/ast';\nimport { mergeNsAndName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { CssSelector } from '../selector';\nimport { splitAtColon, splitAtPeriod } from '../util';\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, errors) {\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this.errors = errors;\n        this.pipesByName = null;\n        this._usedPipes = new Map();\n        // When the `pipes` parameter is `null`, do not check for used pipes\n        // This is used in IVY when we might not know the available pipes at compile time\n        if (pipes) {\n            var pipesByName_1 = new Map();\n            pipes.forEach(function (pipe) { return pipesByName_1.set(pipe.name, pipe); });\n            this.pipesByName = pipesByName_1;\n        }\n    }\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    BindingParser.prototype.createBoundHostProperties = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        var boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n        return boundProps &&\n            boundProps.map(function (prop) { return _this.createBoundElementProperty(elementSelector, prop); });\n    };\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var targetEvents_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEvents_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEvents_1;\n        }\n        return null;\n    };\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    // Parse an inline template binding. ie `<tag *tplKey=\"<tplValue>\">`\n    BindingParser.prototype.parseInlineTemplateBinding = function (tplKey, tplValue, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    BindingParser.prototype._parseTemplateBindings = function (tplKey, tplValue, sourceSpan) {\n        var _this = this;\n        var sourceInfo = sourceSpan.start.toString();\n        try {\n            var bindingsResult = this._exprParser.parseTemplateBindings(tplKey, tplValue, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new ParsedProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), ParsedPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.DEFAULT, sourceSpan));\n    };\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetProps.push(new ParsedProperty(name, ast, ParsedPropertyType.ANIMATION, sourceSpan));\n    };\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n        try {\n            var ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype.createBoundElementProperty = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementProperty(boundProp.name, 4 /* Animation */, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var unit = null;\n        var bindingType = undefined;\n        var boundPropertyName = null;\n        var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var securityContexts = undefined;\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = 1 /* Attribute */;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = 2 /* Class */;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = 3 /* Style */;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = 0 /* Property */;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementProperty(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var matches = splitAtPeriod(name, [name, '']);\n        var eventName = matches[0];\n        var phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new ParsedEvent(eventName, phase, 1 /* Animation */, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    BindingParser.prototype._parseRegularEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [null, name]), target = _a[0], eventName = _a[1];\n        var ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([name, ast.source]);\n        targetEvents.push(new ParsedEvent(eventName, target, 0 /* Regular */, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n        try {\n            var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    // Make sure all the used pipes are known in `this.pipesByName`\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast && this.pipesByName) {\n            var collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param propName the name of the property / attribute\n     * @param sourceSpan\n     * @param isAttr true when binding to an attribute\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(report.msg, sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nexport { BindingParser };\nvar PipeCollector = /** @class */ (function (_super) {\n    tslib_1.__extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\nexport { PipeCollector };\nfunction isAnimationLabel(name) {\n    return name[0] == '@';\n}\nexport function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n//# sourceMappingURL=binding_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nexport { Text };\nvar BoundText = /** @class */ (function () {\n    function BoundText(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundText.prototype.visit = function (visitor) { return visitor.visitBoundText(this); };\n    return BoundText;\n}());\nexport { BoundText };\nvar TextAttribute = /** @class */ (function () {\n    function TextAttribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    TextAttribute.prototype.visit = function (visitor) { return visitor.visitTextAttribute(this); };\n    return TextAttribute;\n}());\nexport { TextAttribute };\nvar BoundAttribute = /** @class */ (function () {\n    function BoundAttribute(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundAttribute.fromBoundElementProperty = function (prop) {\n        return new BoundAttribute(prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    };\n    BoundAttribute.prototype.visit = function (visitor) { return visitor.visitBoundAttribute(this); };\n    return BoundAttribute;\n}());\nexport { BoundAttribute };\nvar BoundEvent = /** @class */ (function () {\n    function BoundEvent(name, handler, target, phase, sourceSpan) {\n        this.name = name;\n        this.handler = handler;\n        this.target = target;\n        this.phase = phase;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundEvent.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEvent(event.name, event.handler, target, phase, event.sourceSpan);\n    };\n    BoundEvent.prototype.visit = function (visitor) { return visitor.visitBoundEvent(this); };\n    return BoundEvent;\n}());\nexport { BoundEvent };\nvar Element = /** @class */ (function () {\n    function Element(name, attributes, inputs, outputs, children, references, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Element.prototype.visit = function (visitor) { return visitor.visitElement(this); };\n    return Element;\n}());\nexport { Element };\nvar Template = /** @class */ (function () {\n    function Template(attributes, inputs, outputs, children, references, variables, sourceSpan, startSourceSpan, endSourceSpan) {\n        this.attributes = attributes;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.children = children;\n        this.references = references;\n        this.variables = variables;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    Template.prototype.visit = function (visitor) { return visitor.visitTemplate(this); };\n    return Template;\n}());\nexport { Template };\nvar Content = /** @class */ (function () {\n    function Content(selectorIndex, attributes, sourceSpan) {\n        this.selectorIndex = selectorIndex;\n        this.attributes = attributes;\n        this.sourceSpan = sourceSpan;\n    }\n    Content.prototype.visit = function (visitor) { return visitor.visitContent(this); };\n    return Content;\n}());\nexport { Content };\nvar Variable = /** @class */ (function () {\n    function Variable(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Variable.prototype.visit = function (visitor) { return visitor.visitVariable(this); };\n    return Variable;\n}());\nexport { Variable };\nvar Reference = /** @class */ (function () {\n    function Reference(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Reference.prototype.visit = function (visitor) { return visitor.visitReference(this); };\n    return Reference;\n}());\nexport { Reference };\nvar NullVisitor = /** @class */ (function () {\n    function NullVisitor() {\n    }\n    NullVisitor.prototype.visitElement = function (element) { };\n    NullVisitor.prototype.visitTemplate = function (template) { };\n    NullVisitor.prototype.visitContent = function (content) { };\n    NullVisitor.prototype.visitVariable = function (variable) { };\n    NullVisitor.prototype.visitReference = function (reference) { };\n    NullVisitor.prototype.visitTextAttribute = function (attribute) { };\n    NullVisitor.prototype.visitBoundAttribute = function (attribute) { };\n    NullVisitor.prototype.visitBoundEvent = function (attribute) { };\n    NullVisitor.prototype.visitText = function (text) { };\n    NullVisitor.prototype.visitBoundText = function (text) { };\n    return NullVisitor;\n}());\nexport { NullVisitor };\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    RecursiveVisitor.prototype.visitElement = function (element) {\n        visitAll(this, element.attributes);\n        visitAll(this, element.children);\n        visitAll(this, element.references);\n    };\n    RecursiveVisitor.prototype.visitTemplate = function (template) {\n        visitAll(this, template.attributes);\n        visitAll(this, template.children);\n        visitAll(this, template.references);\n        visitAll(this, template.variables);\n    };\n    RecursiveVisitor.prototype.visitContent = function (content) { };\n    RecursiveVisitor.prototype.visitVariable = function (variable) { };\n    RecursiveVisitor.prototype.visitReference = function (reference) { };\n    RecursiveVisitor.prototype.visitTextAttribute = function (attribute) { };\n    RecursiveVisitor.prototype.visitBoundAttribute = function (attribute) { };\n    RecursiveVisitor.prototype.visitBoundEvent = function (attribute) { };\n    RecursiveVisitor.prototype.visitText = function (text) { };\n    RecursiveVisitor.prototype.visitBoundText = function (text) { };\n    return RecursiveVisitor;\n}());\nexport { RecursiveVisitor };\nvar TransformVisitor = /** @class */ (function () {\n    function TransformVisitor() {\n    }\n    TransformVisitor.prototype.visitElement = function (element) {\n        var newAttributes = transformAll(this, element.attributes);\n        var newInputs = transformAll(this, element.inputs);\n        var newOutputs = transformAll(this, element.outputs);\n        var newChildren = transformAll(this, element.children);\n        var newReferences = transformAll(this, element.references);\n        if (newAttributes != element.attributes || newInputs != element.inputs ||\n            newOutputs != element.outputs || newChildren != element.children ||\n            newReferences != element.references) {\n            return new Element(element.name, newAttributes, newInputs, newOutputs, newChildren, newReferences, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return element;\n    };\n    TransformVisitor.prototype.visitTemplate = function (template) {\n        var newAttributes = transformAll(this, template.attributes);\n        var newInputs = transformAll(this, template.inputs);\n        var newOutputs = transformAll(this, template.outputs);\n        var newChildren = transformAll(this, template.children);\n        var newReferences = transformAll(this, template.references);\n        var newVariables = transformAll(this, template.variables);\n        if (newAttributes != template.attributes || newInputs != template.inputs ||\n            newChildren != template.children || newVariables != template.variables ||\n            newReferences != template.references) {\n            return new Template(newAttributes, newInputs, newOutputs, newChildren, newReferences, newVariables, template.sourceSpan, template.startSourceSpan, template.endSourceSpan);\n        }\n        return template;\n    };\n    TransformVisitor.prototype.visitContent = function (content) { return content; };\n    TransformVisitor.prototype.visitVariable = function (variable) { return variable; };\n    TransformVisitor.prototype.visitReference = function (reference) { return reference; };\n    TransformVisitor.prototype.visitTextAttribute = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitBoundAttribute = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitBoundEvent = function (attribute) { return attribute; };\n    TransformVisitor.prototype.visitText = function (text) { return text; };\n    TransformVisitor.prototype.visitBoundText = function (text) { return text; };\n    return TransformVisitor;\n}());\nexport { TransformVisitor };\nexport function visitAll(visitor, nodes) {\n    var result = [];\n    if (visitor.visit) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            var newNode = visitor.visit(node) || node.visit(visitor);\n        }\n    }\n    else {\n        for (var _a = 0, nodes_2 = nodes; _a < nodes_2.length; _a++) {\n            var node = nodes_2[_a];\n            var newNode = node.visit(visitor);\n            if (newNode) {\n                result.push(newNode);\n            }\n        }\n    }\n    return result;\n}\nexport function transformAll(visitor, nodes) {\n    var result = [];\n    var changed = false;\n    for (var _i = 0, nodes_3 = nodes; _i < nodes_3.length; _i++) {\n        var node = nodes_3[_i];\n        var newNode = node.visit(visitor);\n        if (newNode) {\n            result.push(newNode);\n        }\n        changed = changed || newNode != node;\n    }\n    return changed ? result : nodes;\n}\n//# sourceMappingURL=r3_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\nexport { StyleWithImports };\nexport function isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the @import urls that\n * are either relative or don't have a `package:` scheme\n */\nexport function extractStyleUrls(resolver, baseUrl, cssText) {\n    var foundUrls = [];\n    var modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n//# sourceMappingURL=style_url_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isNgContent } from '../ml_parser/tags';\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\nexport function preparseElement(ast) {\n    var selectAttr = null;\n    var hrefAttr = null;\n    var relAttr = null;\n    var nonBindable = false;\n    var projectAs = '';\n    ast.attrs.forEach(function (attr) {\n        var lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var nodeName = ast.name.toLowerCase();\n    var type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nexport var PreparsedElementType;\n(function (PreparsedElementType) {\n    PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n    PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n    PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n    PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n})(PreparsedElementType || (PreparsedElementType = {}));\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\nexport { PreparsedElement };\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n//# sourceMappingURL=template_preparser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { isNgTemplate } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel } from '../parse_util';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { PreparsedElementType, preparseElement } from '../template_parser/template_preparser';\nimport { syntaxError } from '../util';\nimport * as t from './r3_ast';\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar TEMPLATE_ATTR_PREFIX = '*';\n// Default selector used by `<ng-content>` if none specified\nvar DEFAULT_CONTENT_SELECTOR = '*';\nexport function htmlAstToRender3Ast(htmlNodes, bindingParser) {\n    var transformer = new HtmlAstToIvyAst(bindingParser);\n    var ivyNodes = html.visitAll(transformer, htmlNodes);\n    // Errors might originate in either the binding parser or the html to ivy transformer\n    var allErrors = bindingParser.errors.concat(transformer.errors);\n    var errors = allErrors.filter(function (e) { return e.level === ParseErrorLevel.ERROR; });\n    if (errors.length > 0) {\n        var errorString = errors.join('\\n');\n        throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n    }\n    return {\n        nodes: ivyNodes,\n        errors: allErrors,\n        ngContentSelectors: transformer.ngContentSelectors,\n        hasNgContent: transformer.hasNgContent,\n    };\n}\nvar HtmlAstToIvyAst = /** @class */ (function () {\n    function HtmlAstToIvyAst(bindingParser) {\n        this.bindingParser = bindingParser;\n        this.errors = [];\n        // Selectors for the `ng-content` tags. Only non `*` selectors are recorded here\n        this.ngContentSelectors = [];\n        // Any `<ng-content>` in the template ?\n        this.hasNgContent = false;\n    }\n    // HTML visitor\n    HtmlAstToIvyAst.prototype.visitElement = function (element) {\n        var _this = this;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        // Whether the element is a `<ng-template>`\n        var isTemplateElement = isNgTemplate(element.name);\n        var parsedProperties = [];\n        var boundEvents = [];\n        var variables = [];\n        var references = [];\n        var attributes = [];\n        var templateParsedProperties = [];\n        var templateVariables = [];\n        // Whether the element has any *-attribute\n        var elementHasInlineTemplate = false;\n        for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n            var attribute = _a[_i];\n            var hasBinding = false;\n            var normalizedName = normalizeAttributeName(attribute.name);\n            // `*attr` defines template bindings\n            var isTemplateBinding = false;\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                // *-attributes\n                if (elementHasInlineTemplate) {\n                    this.reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attribute.sourceSpan);\n                }\n                isTemplateBinding = true;\n                elementHasInlineTemplate = true;\n                var templateValue = attribute.value;\n                var templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n                var parsedVariables = [];\n                this.bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attribute.sourceSpan, [], templateParsedProperties, parsedVariables);\n                templateVariables.push.apply(templateVariables, parsedVariables.map(function (v) { return new t.Variable(v.name, v.value, v.sourceSpan); }));\n            }\n            else {\n                // Check for variables, events, property bindings, interpolation\n                hasBinding = this.parseAttribute(isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n            }\n            if (!hasBinding && !isTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attributes.push(this.visitAttribute(attribute));\n            }\n        }\n        var children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>`\n            this.hasNgContent = true;\n            if (element.children && !element.children.every(isEmptyTextNode)) {\n                this.reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            var selector = preparsedElement.selectAttr;\n            var attributes_1 = element.attrs.map(function (attribute) { return _this.visitAttribute(attribute); });\n            var selectorIndex = selector === DEFAULT_CONTENT_SELECTOR ? 0 : this.ngContentSelectors.push(selector);\n            parsedElement = new t.Content(selectorIndex, attributes_1, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>`\n            var attrs = this.extractAttributes(element.name, parsedProperties);\n            parsedElement = new t.Template(attributes, attrs.bound, boundEvents, children, references, variables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        else {\n            var attrs = this.extractAttributes(element.name, parsedProperties);\n            parsedElement = new t.Element(element.name, attributes, attrs.bound, boundEvents, children, references, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        if (elementHasInlineTemplate) {\n            var attrs = this.extractAttributes('ng-template', templateParsedProperties);\n            // TODO(pk): test for this case\n            parsedElement = new t.Template(attrs.literal, attrs.bound, [], [parsedElement], [], templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return parsedElement;\n    };\n    HtmlAstToIvyAst.prototype.visitAttribute = function (attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan);\n    };\n    HtmlAstToIvyAst.prototype.visitText = function (text) {\n        var valueNoNgsp = replaceNgsp(text.value);\n        var expr = this.bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new t.BoundText(expr, text.sourceSpan) : new t.Text(valueNoNgsp, text.sourceSpan);\n    };\n    HtmlAstToIvyAst.prototype.visitComment = function (comment) { return null; };\n    HtmlAstToIvyAst.prototype.visitExpansion = function (expansion) { return null; };\n    HtmlAstToIvyAst.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    // convert view engine `ParsedProperty` to a format suitable for IVY\n    HtmlAstToIvyAst.prototype.extractAttributes = function (elementName, properties) {\n        var _this = this;\n        var bound = [];\n        var literal = [];\n        properties.forEach(function (prop) {\n            if (prop.isLiteral) {\n                literal.push(new t.TextAttribute(prop.name, prop.expression.source || '', prop.sourceSpan));\n            }\n            else {\n                var bep = _this.bindingParser.createBoundElementProperty(elementName, prop);\n                bound.push(t.BoundAttribute.fromBoundElementProperty(bep));\n            }\n        });\n        return { bound: bound, literal: literal };\n    };\n    HtmlAstToIvyAst.prototype.parseAttribute = function (isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references) {\n        var name = normalizeAttributeName(attribute.name);\n        var value = attribute.value;\n        var srcSpan = attribute.sourceSpan;\n        var bindParts = name.match(BIND_NAME_REGEXP);\n        var hasBinding = false;\n        if (bindParts) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this.parseVariable(identifier, value, srcSpan, variables);\n                }\n                else {\n                    this.reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var identifier = bindParts[IDENT_KW_IDX];\n                this.parseReference(identifier, value, srcSpan, references);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this.bindingParser.parseLiteralAttr(name, value, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                var events = [];\n                this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n                addEvents(events, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this.bindingParser.parsePropertyInterpolation(name, value, srcSpan, matchableAttributes, parsedProperties);\n        }\n        return hasBinding;\n    };\n    HtmlAstToIvyAst.prototype.parseVariable = function (identifier, value, sourceSpan, variables) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        variables.push(new t.Variable(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseReference = function (identifier, value, sourceSpan, references) {\n        if (identifier.indexOf('-') > -1) {\n            this.reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        references.push(new t.Reference(identifier, value, sourceSpan));\n    };\n    HtmlAstToIvyAst.prototype.parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, boundEvents) {\n        var events = [];\n        this.bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, events);\n        addEvents(events, boundEvents);\n    };\n    HtmlAstToIvyAst.prototype.reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.errors.push(new ParseError(sourceSpan, message, level));\n    };\n    return HtmlAstToIvyAst;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var children = html.visitAll(this, ast.children, null);\n        return new t.Element(ast.name, html.visitAll(this, ast.attrs), \n        /* inputs */ [], /* outputs */ [], children, /* references */ [], ast.sourceSpan, ast.startSourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute) {\n        return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitText = function (text) { return new t.Text(text.value, text.sourceSpan); };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion) { return null; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase) { return null; };\n    return NonBindableVisitor;\n}());\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\nfunction normalizeAttributeName(attrName) {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\nfunction addEvents(events, boundEvents) {\n    boundEvents.push.apply(boundEvents, events.map(function (e) { return t.BoundEvent.fromParsedEvent(e); }));\n}\nfunction isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\n//# sourceMappingURL=r3_template_transform.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses string representation of a style and converts it into object literal.\n *\n * @param value string representation of style as used in the `style` attribute in HTML.\n *   Example: `color: red; height: auto`.\n * @returns an object literal. `{ color: 'red', height: 'auto'}`.\n */\nexport function parseStyle(value) {\n    var styles = {};\n    var i = 0;\n    var parenDepth = 0;\n    var quote = 0 /* QuoteNone */;\n    var valueStart = 0;\n    var propStart = 0;\n    var currentProp = null;\n    var valueHasQuotes = false;\n    while (i < value.length) {\n        var token = value.charCodeAt(i++);\n        switch (token) {\n            case 40 /* OpenParen */:\n                parenDepth++;\n                break;\n            case 41 /* CloseParen */:\n                parenDepth--;\n                break;\n            case 39 /* QuoteSingle */:\n                // valueStart needs to be there since prop values don't\n                // have quotes in CSS\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 39 /* QuoteSingle */;\n                }\n                else if (quote === 39 /* QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 34 /* QuoteDouble */:\n                // same logic as above\n                valueHasQuotes = valueHasQuotes || valueStart > 0;\n                if (quote === 0 /* QuoteNone */) {\n                    quote = 34 /* QuoteDouble */;\n                }\n                else if (quote === 34 /* QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                    quote = 0 /* QuoteNone */;\n                }\n                break;\n            case 58 /* Colon */:\n                if (!currentProp && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n                    valueStart = i;\n                }\n                break;\n            case 59 /* Semicolon */:\n                if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                    var styleVal = value.substring(valueStart, i - 1).trim();\n                    styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n                    propStart = i;\n                    valueStart = 0;\n                    currentProp = null;\n                    valueHasQuotes = false;\n                }\n                break;\n        }\n    }\n    if (currentProp && valueStart) {\n        var styleVal = value.substr(valueStart).trim();\n        styles[currentProp] = valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal;\n    }\n    return styles;\n}\nexport function stripUnnecessaryQuotes(value) {\n    var qS = value.charCodeAt(0);\n    var qE = value.charCodeAt(value.length - 1);\n    if (qS == qE && (qS == 39 /* QuoteSingle */ || qS == 34 /* QuoteDouble */)) {\n        var tempValue = value.substring(1, value.length - 1);\n        // special case to avoid using a multi-quoted string that was just chomped\n        // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n        if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n            value = tempValue;\n        }\n    }\n    return value;\n}\nexport function hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, function (v) {\n        return v.charAt(0) + '-' + v.charAt(1);\n    }).toLowerCase();\n}\n//# sourceMappingURL=styling.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { flatten, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, BuiltinFunctionCall, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { AstMemoryEfficientTransformer, FunctionCall, ImplicitReceiver, Interpolation, LiteralArray, LiteralPrimitive, PropertyRead } from '../../expression_parser/ast';\nimport { Lexer } from '../../expression_parser/lexer';\nimport { Parser } from '../../expression_parser/parser';\nimport * as html from '../../ml_parser/ast';\nimport { HtmlParser } from '../../ml_parser/html_parser';\nimport { WhitespaceVisitor } from '../../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../../ml_parser/interpolation_config';\nimport { isNgContainer as checkIsNgContainer, splitNsName } from '../../ml_parser/tags';\nimport * as o from '../../output/output_ast';\nimport { DomElementSchemaRegistry } from '../../schema/dom_element_schema_registry';\nimport { CssSelector } from '../../selector';\nimport { BindingParser } from '../../template_parser/binding_parser';\nimport { error } from '../../util';\nimport * as t from '../r3_ast';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { htmlAstToRender3Ast } from '../r3_template_transform';\nimport { I18N_ATTR, I18N_ATTR_PREFIX, I18nContext, assembleI18nBoundString } from './i18n';\nimport { parseStyle } from './styling';\nimport { CONTEXT_NAME, IMPLICIT_REFERENCE, NON_BINDABLE_ATTR, REFERENCE_PREFIX, RENDER_FLAGS, asLiteral, getAttrsForDirectiveMatching, invalid, trimTrailingNulls, unsupported } from './util';\nfunction mapBindingToInstruction(type) {\n    switch (type) {\n        case 0 /* Property */:\n            return R3.elementProperty;\n        case 2 /* Class */:\n            return R3.elementClassProp;\n        case 1 /* Attribute */:\n        case 4 /* Animation */:\n            return R3.elementAttribute;\n        default:\n            return undefined;\n    }\n}\n//  if (rf & flags) { .. }\nexport function renderFlagCheckIfStmt(flags, statements) {\n    return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null, false), statements);\n}\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(constantPool, parentBindingScope, level, contextName, i18nContext, templateIndex, templateName, viewQueries, directiveMatcher, directives, pipeTypeByName, pipes, _namespace, relativeContextFilePath) {\n        if (level === void 0) { level = 0; }\n        var _this = this;\n        this.constantPool = constantPool;\n        this.level = level;\n        this.contextName = contextName;\n        this.i18nContext = i18nContext;\n        this.templateIndex = templateIndex;\n        this.templateName = templateName;\n        this.viewQueries = viewQueries;\n        this.directiveMatcher = directiveMatcher;\n        this.directives = directives;\n        this.pipeTypeByName = pipeTypeByName;\n        this.pipes = pipes;\n        this._namespace = _namespace;\n        this.relativeContextFilePath = relativeContextFilePath;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._prefixCode = [];\n        /**\n         * List of callbacks to generate creation mode instructions. We store them here as we process\n         * the template so bindings in listeners are resolved only once all nodes have been visited.\n         * This ensures all local refs and context variables are available for matching.\n         */\n        this._creationCodeFns = [];\n        /**\n         * List of callbacks to generate update mode instructions. We store them here as we process\n         * the template so bindings are resolved only once all nodes have been visited. This ensures\n         * all local refs and context variables are available for matching.\n         */\n        this._updateCodeFns = [];\n        /** Temporary variable declarations generated from visiting pipes, literals, etc. */\n        this._tempVariables = [];\n        /**\n         * List of callbacks to build nested templates. Nested templates must not be visited until\n         * after the parent template has finished visiting all of its nodes. This ensures that all\n         * local ref bindings in nested templates are able to find local ref values if the refs\n         * are defined after the template declaration.\n         */\n        this._nestedTemplateFns = [];\n        this._unsupported = unsupported;\n        // i18n context local to this template\n        this.i18n = null;\n        // Number of slots to reserve for pureFunctions\n        this._pureFunctionSlots = 0;\n        // Number of binding slots\n        this._bindingSlots = 0;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid;\n        this.visitVariable = invalid;\n        this.visitTextAttribute = invalid;\n        this.visitBoundAttribute = invalid;\n        this.visitBoundEvent = invalid;\n        // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n        // function)\n        this._dataIndex = viewQueries.length;\n        this._bindingScope = parentBindingScope.nestedScope(level);\n        // Turn the relative context file path into an identifier by replacing non-alphanumeric\n        // characters with underscores.\n        this.fileBasedI18nSuffix = relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_') + '_';\n        this._valueConverter = new ValueConverter(constantPool, function () { return _this.allocateDataSlot(); }, function (numSlots) { return _this.allocatePureFunctionSlots(numSlots); }, function (name, localName, slot, value) {\n            var pipeType = pipeTypeByName.get(name);\n            if (pipeType) {\n                _this.pipes.add(pipeType);\n            }\n            _this._bindingScope.set(_this.level, localName, value);\n            _this.creationInstruction(null, R3.pipe, [o.literal(slot), o.literal(name)]);\n        });\n    }\n    TemplateDefinitionBuilder.prototype.registerContextVariables = function (variable) {\n        var scopedName = this._bindingScope.freshReferenceName();\n        var retrievalLevel = this.level;\n        var lhs = o.variable(variable.name + scopedName);\n        this._bindingScope.set(retrievalLevel, variable.name, lhs, 1 /* CONTEXT */, function (scope, relativeLevel) {\n            var rhs;\n            if (scope.bindingLevel === retrievalLevel) {\n                // e.g. ctx\n                rhs = o.variable(CONTEXT_NAME);\n            }\n            else {\n                var sharedCtxVar = scope.getSharedContextName(retrievalLevel);\n                // e.g. ctx_r0   OR  x(2);\n                rhs = sharedCtxVar ? sharedCtxVar : generateNextContextExpr(relativeLevel);\n            }\n            // e.g. const $item$ = x(2).$implicit;\n            return [lhs.set(rhs.prop(variable.value || IMPLICIT_REFERENCE)).toConstDecl()];\n        });\n    };\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = function (nodes, variables, hasNgContent, ngContentSelectors) {\n        var _this = this;\n        if (hasNgContent === void 0) { hasNgContent = false; }\n        if (ngContentSelectors === void 0) { ngContentSelectors = []; }\n        if (this._namespace !== R3.namespaceHTML) {\n            this.creationInstruction(null, this._namespace);\n        }\n        // Create variable bindings\n        variables.forEach(function (v) { return _this.registerContextVariables(v); });\n        // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n        if (hasNgContent) {\n            var parameters = [];\n            // Only selectors with a non-default value are generated\n            if (ngContentSelectors.length > 1) {\n                var r3Selectors = ngContentSelectors.map(function (s) { return core.parseSelectorToR3Selector(s); });\n                // `projectionDef` needs both the parsed and raw value of the selectors\n                var parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n                var unParsed = this.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n                parameters.push(parsed, unParsed);\n            }\n            this.creationInstruction(null, R3.projectionDef, parameters);\n        }\n        if (this.i18nContext) {\n            this.i18nStart();\n        }\n        // This is the initial pass through the nodes of this template. In this pass, we\n        // queue all creation mode and update mode instructions for generation in the second\n        // pass. It's necessary to separate the passes to ensure local refs are defined before\n        // resolving bindings. We also count bindings in this pass as we walk bound expressions.\n        t.visitAll(this, nodes);\n        // Add total binding count to pure function count so pure function instructions are\n        // generated with the correct slot offset when update instructions are processed.\n        this._pureFunctionSlots += this._bindingSlots;\n        // Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and\n        // `pipeBind` update instructions), so we have to update the slot offsets manually\n        // to account for bindings.\n        this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);\n        // Nested templates must be processed before creation instructions so template()\n        // instructions can be generated with the correct internal const count.\n        this._nestedTemplateFns.forEach(function (buildTemplateFn) { return buildTemplateFn(); });\n        if (this.i18nContext) {\n            this.i18nEnd();\n        }\n        // Generate all the creation mode instructions (e.g. resolve bindings in listeners)\n        var creationStatements = this._creationCodeFns.map(function (fn) { return fn(); });\n        // Generate all the update mode instructions (e.g. resolve property or text bindings)\n        var updateStatements = this._updateCodeFns.map(function (fn) { return fn(); });\n        //  Variable declaration must occur after binding resolution so we can generate context\n        //  instructions that build on each other. e.g. const b = x().$implicit(); const b = x();\n        var creationVariables = this._bindingScope.viewSnapshotStatements();\n        var updateVariables = this._bindingScope.variableDeclarations().concat(this._tempVariables);\n        var creationBlock = creationStatements.length > 0 ?\n            [renderFlagCheckIfStmt(1 /* Create */, creationVariables.concat(creationStatements))] :\n            [];\n        var updateBlock = updateStatements.length > 0 ?\n            [renderFlagCheckIfStmt(2 /* Update */, updateVariables.concat(updateStatements))] :\n            [];\n        return o.fn(\n        // i.e. (rf: RenderFlags, ctx: any)\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)], this._prefixCode.concat(creationBlock, updateBlock), o.INFERRED_TYPE, null, this.templateName);\n    };\n    // LocalResolver\n    TemplateDefinitionBuilder.prototype.getLocal = function (name) { return this._bindingScope.get(name); };\n    TemplateDefinitionBuilder.prototype.i18nTranslate = function (label, meta) {\n        if (meta === void 0) { meta = ''; }\n        return this.constantPool.getTranslation(label, meta, this.fileBasedI18nSuffix);\n    };\n    TemplateDefinitionBuilder.prototype.i18nAppendTranslationMeta = function (meta) {\n        if (meta === void 0) { meta = ''; }\n        this.constantPool.appendTranslationMeta(meta);\n    };\n    TemplateDefinitionBuilder.prototype.i18nAllocateRef = function () {\n        return this.constantPool.getDeferredTranslationConst(this.fileBasedI18nSuffix);\n    };\n    TemplateDefinitionBuilder.prototype.i18nUpdateRef = function (context) {\n        if (context.isRoot() && context.isResolved()) {\n            this.constantPool.setDeferredTranslationConst(context.getRef(), context.getContent());\n        }\n    };\n    TemplateDefinitionBuilder.prototype.i18nStart = function (span, meta) {\n        if (span === void 0) { span = null; }\n        var index = this.allocateDataSlot();\n        if (this.i18nContext) {\n            this.i18n = this.i18nContext.forkChildContext(index, this.templateIndex);\n        }\n        else {\n            this.i18nAppendTranslationMeta(meta);\n            var ref = this.i18nAllocateRef();\n            this.i18n = new I18nContext(index, this.templateIndex, ref);\n        }\n        // generate i18nStart instruction\n        var params = [o.literal(index), this.i18n.getRef()];\n        if (this.i18n.getId() > 0) {\n            // do not push 3rd argument (sub-block id)\n            // into i18nStart call for top level i18n context\n            params.push(o.literal(this.i18n.getId()));\n        }\n        this.creationInstruction(span, R3.i18nStart, params);\n    };\n    TemplateDefinitionBuilder.prototype.i18nEnd = function (span) {\n        var _this = this;\n        if (span === void 0) { span = null; }\n        if (this.i18nContext) {\n            this.i18nContext.reconcileChildContext(this.i18n);\n            this.i18nUpdateRef(this.i18nContext);\n        }\n        else {\n            this.i18nUpdateRef(this.i18n);\n        }\n        // setup accumulated bindings\n        var bindings = this.i18n.getBindings();\n        if (bindings.size) {\n            bindings.forEach(function (binding) { _this.updateInstruction(span, R3.i18nExp, [binding]); });\n            var index = o.literal(this.i18n.getIndex());\n            this.updateInstruction(span, R3.i18nApply, [index]);\n        }\n        this.creationInstruction(span, R3.i18nEnd);\n        this.i18n = null; // reset local i18n context\n    };\n    TemplateDefinitionBuilder.prototype.visitContent = function (ngContent) {\n        var slot = this.allocateDataSlot();\n        var selectorIndex = ngContent.selectorIndex;\n        var parameters = [o.literal(slot)];\n        var attributeAsList = [];\n        ngContent.attributes.forEach(function (attribute) {\n            var name = attribute.name;\n            if (name !== 'select') {\n                attributeAsList.push(name, attribute.value);\n            }\n        });\n        if (attributeAsList.length > 0) {\n            parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n        }\n        else if (selectorIndex !== 0) {\n            parameters.push(o.literal(selectorIndex));\n        }\n        this.creationInstruction(ngContent.sourceSpan, R3.projection, parameters);\n    };\n    TemplateDefinitionBuilder.prototype.getNamespaceInstruction = function (namespaceKey) {\n        switch (namespaceKey) {\n            case 'math':\n                return R3.namespaceMathML;\n            case 'svg':\n                return R3.namespaceSVG;\n            default:\n                return R3.namespaceHTML;\n        }\n    };\n    TemplateDefinitionBuilder.prototype.addNamespaceInstruction = function (nsInstruction, element) {\n        this._namespace = nsInstruction;\n        this.creationInstruction(element.sourceSpan, nsInstruction);\n    };\n    TemplateDefinitionBuilder.prototype.visitElement = function (element) {\n        var _this = this;\n        var elementIndex = this.allocateDataSlot();\n        var isNonBindableMode = false;\n        var isI18nRootElement = false;\n        var outputAttrs = {};\n        var attrI18nMetas = {};\n        var i18nMeta = '';\n        var _a = splitNsName(element.name), namespaceKey = _a[0], elementName = _a[1];\n        var isNgContainer = checkIsNgContainer(element.name);\n        // Handle i18n and ngNonBindable attributes\n        for (var _i = 0, _b = element.attributes; _i < _b.length; _i++) {\n            var attr = _b[_i];\n            var name_1 = attr.name;\n            var value = attr.value;\n            if (name_1 === NON_BINDABLE_ATTR) {\n                isNonBindableMode = true;\n            }\n            else if (name_1 === I18N_ATTR) {\n                if (this.i18n) {\n                    throw new Error(\"Could not mark an element as translatable inside of a translatable section\");\n                }\n                isI18nRootElement = true;\n                i18nMeta = value;\n            }\n            else if (name_1.startsWith(I18N_ATTR_PREFIX)) {\n                attrI18nMetas[name_1.slice(I18N_ATTR_PREFIX.length)] = value;\n            }\n            else {\n                outputAttrs[name_1] = value;\n            }\n        }\n        // Match directives on non i18n attributes\n        this.matchDirectives(element.name, element);\n        // Regular element or ng-container creation mode\n        var parameters = [o.literal(elementIndex)];\n        if (!isNgContainer) {\n            parameters.push(o.literal(elementName));\n        }\n        // Add the attributes\n        var attributes = [];\n        var initialStyleDeclarations = [];\n        var initialClassDeclarations = [];\n        var styleInputs = [];\n        var classInputs = [];\n        var allOtherInputs = [];\n        var i18nAttrs = [];\n        element.inputs.forEach(function (input) {\n            switch (input.type) {\n                // [attr.style] or [attr.class] should not be treated as styling-based\n                // bindings since they are intended to be written directly to the attr\n                // and therefore will skip all style/class resolution that is present\n                // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n                // [class.prop]=\"\". [class]=\"\" assignments\n                case 0 /* Property */:\n                    if (input.name == 'style') {\n                        // this should always go first in the compilation (for [style])\n                        styleInputs.splice(0, 0, input);\n                    }\n                    else if (isClassBinding(input)) {\n                        // this should always go first in the compilation (for [class])\n                        classInputs.splice(0, 0, input);\n                    }\n                    else if (attrI18nMetas.hasOwnProperty(input.name)) {\n                        i18nAttrs.push({ name: input.name, value: input.value });\n                    }\n                    else {\n                        allOtherInputs.push(input);\n                    }\n                    break;\n                case 3 /* Style */:\n                    styleInputs.push(input);\n                    break;\n                case 2 /* Class */:\n                    classInputs.push(input);\n                    break;\n                default:\n                    allOtherInputs.push(input);\n                    break;\n            }\n        });\n        var currStyleIndex = 0;\n        var currClassIndex = 0;\n        var staticStylesMap = null;\n        var staticClassesMap = null;\n        var stylesIndexMap = {};\n        var classesIndexMap = {};\n        Object.getOwnPropertyNames(outputAttrs).forEach(function (name) {\n            var value = outputAttrs[name];\n            if (name == 'style') {\n                staticStylesMap = parseStyle(value);\n                Object.keys(staticStylesMap).forEach(function (prop) { stylesIndexMap[prop] = currStyleIndex++; });\n            }\n            else if (name == 'class') {\n                staticClassesMap = {};\n                value.split(/\\s+/g).forEach(function (className) {\n                    classesIndexMap[className] = currClassIndex++;\n                    staticClassesMap[className] = true;\n                });\n            }\n            else {\n                if (attrI18nMetas.hasOwnProperty(name)) {\n                    i18nAttrs.push({ name: name, value: value });\n                }\n                else {\n                    attributes.push(o.literal(name), o.literal(value));\n                }\n            }\n        });\n        var hasMapBasedStyling = false;\n        for (var i = 0; i < styleInputs.length; i++) {\n            var input = styleInputs[i];\n            var isMapBasedStyleBinding = i === 0 && input.name === 'style';\n            if (isMapBasedStyleBinding) {\n                hasMapBasedStyling = true;\n            }\n            else if (!stylesIndexMap.hasOwnProperty(input.name)) {\n                stylesIndexMap[input.name] = currStyleIndex++;\n            }\n        }\n        for (var i = 0; i < classInputs.length; i++) {\n            var input = classInputs[i];\n            var isMapBasedClassBinding = i === 0 && isClassBinding(input);\n            if (!isMapBasedClassBinding && !stylesIndexMap.hasOwnProperty(input.name)) {\n                classesIndexMap[input.name] = currClassIndex++;\n            }\n        }\n        // in the event that a [style] binding is used then sanitization will\n        // always be imported because it is not possible to know ahead of time\n        // whether style bindings will use or not use any sanitizable properties\n        // that isStyleSanitizable() will detect\n        var useDefaultStyleSanitizer = hasMapBasedStyling;\n        // this will build the instructions so that they fall into the following syntax\n        // => [prop1, prop2, prop3, 0, prop1, value1, prop2, value2]\n        Object.keys(stylesIndexMap).forEach(function (prop) {\n            useDefaultStyleSanitizer = useDefaultStyleSanitizer || isStyleSanitizable(prop);\n            initialStyleDeclarations.push(o.literal(prop));\n        });\n        if (staticStylesMap) {\n            initialStyleDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticStylesMap).forEach(function (prop) {\n                initialStyleDeclarations.push(o.literal(prop));\n                var value = staticStylesMap[prop];\n                initialStyleDeclarations.push(o.literal(value));\n            });\n        }\n        Object.keys(classesIndexMap).forEach(function (prop) {\n            initialClassDeclarations.push(o.literal(prop));\n        });\n        if (staticClassesMap) {\n            initialClassDeclarations.push(o.literal(1 /* VALUES_MODE */));\n            Object.keys(staticClassesMap).forEach(function (className) {\n                initialClassDeclarations.push(o.literal(className));\n                initialClassDeclarations.push(o.literal(true));\n            });\n        }\n        var hasStylingInstructions = initialStyleDeclarations.length || styleInputs.length ||\n            initialClassDeclarations.length || classInputs.length;\n        // add attributes for directive matching purposes\n        attributes.push.apply(attributes, this.prepareSyntheticAndSelectOnlyAttrs(allOtherInputs, element.outputs));\n        parameters.push(this.toAttrsParam(attributes));\n        // local refs (ex.: <div #foo #bar=\"baz\">)\n        parameters.push(this.prepareRefsParameter(element.references));\n        var wasInNamespace = this._namespace;\n        var currentNamespace = this.getNamespaceInstruction(namespaceKey);\n        // If the namespace is changing now, include an instruction to change it\n        // during element creation.\n        if (currentNamespace !== wasInNamespace) {\n            this.addNamespaceInstruction(currentNamespace, element);\n        }\n        var implicit = o.variable(CONTEXT_NAME);\n        if (this.i18n) {\n            this.i18n.appendElement(elementIndex);\n        }\n        var hasChildren = function () {\n            if (!isI18nRootElement && _this.i18n) {\n                // we do not append text node instructions inside i18n section, so we\n                // exclude them while calculating whether current element has children\n                return element.children.find(function (child) { return !(child instanceof t.Text || child instanceof t.BoundText); });\n            }\n            return element.children.length > 0;\n        };\n        var createSelfClosingInstruction = !hasStylingInstructions && !isNgContainer &&\n            element.outputs.length === 0 && i18nAttrs.length === 0 && !hasChildren();\n        if (createSelfClosingInstruction) {\n            this.creationInstruction(element.sourceSpan, R3.element, trimTrailingNulls(parameters));\n        }\n        else {\n            this.creationInstruction(element.sourceSpan, isNgContainer ? R3.elementContainerStart : R3.elementStart, trimTrailingNulls(parameters));\n            if (isNonBindableMode) {\n                this.creationInstruction(element.sourceSpan, R3.disableBindings);\n            }\n            if (isI18nRootElement) {\n                this.i18nStart(element.sourceSpan, i18nMeta);\n            }\n            // process i18n element attributes\n            if (i18nAttrs.length) {\n                var hasBindings_1 = false;\n                var i18nAttrArgs_1 = [];\n                i18nAttrs.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    var meta = attrI18nMetas[name];\n                    if (typeof value === 'string') {\n                        // in case of static string value, 3rd argument is 0 declares\n                        // that there are no expressions defined in this translation\n                        i18nAttrArgs_1.push(o.literal(name), _this.i18nTranslate(value, meta), o.literal(0));\n                    }\n                    else {\n                        var converted = value.visit(_this._valueConverter);\n                        if (converted instanceof Interpolation) {\n                            var strings = converted.strings, expressions = converted.expressions;\n                            var label = assembleI18nBoundString(strings);\n                            i18nAttrArgs_1.push(o.literal(name), _this.i18nTranslate(label, meta), o.literal(expressions.length));\n                            expressions.forEach(function (expression) {\n                                hasBindings_1 = true;\n                                var binding = _this.convertExpressionBinding(implicit, expression);\n                                _this.updateInstruction(element.sourceSpan, R3.i18nExp, [binding]);\n                            });\n                        }\n                    }\n                });\n                if (i18nAttrArgs_1.length) {\n                    var index = o.literal(this.allocateDataSlot());\n                    var args = this.constantPool.getConstLiteral(o.literalArr(i18nAttrArgs_1), true);\n                    this.creationInstruction(element.sourceSpan, R3.i18nAttribute, [index, args]);\n                    if (hasBindings_1) {\n                        this.updateInstruction(element.sourceSpan, R3.i18nApply, [index]);\n                    }\n                }\n            }\n            // initial styling for static style=\"...\" attributes\n            if (hasStylingInstructions) {\n                var paramsList = [];\n                if (initialClassDeclarations.length) {\n                    // the template compiler handles initial class styling (e.g. class=\"foo\") values\n                    // in a special command called `elementClass` so that the initial class\n                    // can be processed during runtime. These initial class values are bound to\n                    // a constant because the inital class values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialClassDeclarations), true));\n                }\n                else if (initialStyleDeclarations.length || useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (initialStyleDeclarations.length) {\n                    // the template compiler handles initial style (e.g. style=\"foo\") values\n                    // in a special command called `elementStyle` so that the initial styles\n                    // can be processed during runtime. These initial styles values are bound to\n                    // a constant because the inital style values do not change (since they're static).\n                    paramsList.push(this.constantPool.getConstLiteral(o.literalArr(initialStyleDeclarations), true));\n                }\n                else if (useDefaultStyleSanitizer) {\n                    // no point in having an extra `null` value unless there are follow-up params\n                    paramsList.push(o.NULL_EXPR);\n                }\n                if (useDefaultStyleSanitizer) {\n                    paramsList.push(o.importExpr(R3.defaultStyleSanitizer));\n                }\n                this.creationInstruction(null, R3.elementStyling, paramsList);\n            }\n            // Generate Listeners (outputs)\n            element.outputs.forEach(function (outputAst) {\n                _this.creationInstruction(outputAst.sourceSpan, R3.listener, _this.prepareListenerParameter(element.name, outputAst));\n            });\n        }\n        if ((styleInputs.length || classInputs.length) && hasStylingInstructions) {\n            var indexLiteral_1 = o.literal(elementIndex);\n            var firstStyle = styleInputs[0];\n            var mapBasedStyleInput_1 = firstStyle && firstStyle.name == 'style' ? firstStyle : null;\n            var firstClass = classInputs[0];\n            var mapBasedClassInput = firstClass && isClassBinding(firstClass) ? firstClass : null;\n            var stylingInput = mapBasedStyleInput_1 || mapBasedClassInput;\n            if (stylingInput) {\n                // these values must be outside of the update block so that they can\n                // be evaluted (the AST visit call) during creation time so that any\n                // pipes can be picked up in time before the template is built\n                var mapBasedClassValue_1 = mapBasedClassInput ? mapBasedClassInput.value.visit(this._valueConverter) : null;\n                var mapBasedStyleValue_1 = mapBasedStyleInput_1 ? mapBasedStyleInput_1.value.visit(this._valueConverter) : null;\n                this.updateInstruction(stylingInput.sourceSpan, R3.elementStylingMap, function () {\n                    var params = [indexLiteral_1];\n                    if (mapBasedClassValue_1) {\n                        params.push(_this.convertPropertyBinding(implicit, mapBasedClassValue_1, true));\n                    }\n                    else if (mapBasedStyleInput_1) {\n                        params.push(o.NULL_EXPR);\n                    }\n                    if (mapBasedStyleValue_1) {\n                        params.push(_this.convertPropertyBinding(implicit, mapBasedStyleValue_1, true));\n                    }\n                    return params;\n                });\n            }\n            var lastInputCommand = null;\n            if (styleInputs.length) {\n                var i = mapBasedStyleInput_1 ? 1 : 0;\n                var _loop_1 = function () {\n                    var input = styleInputs[i];\n                    var key = input.name;\n                    var styleIndex = stylesIndexMap[key];\n                    var value = input.value.visit(this_1._valueConverter);\n                    this_1.updateInstruction(input.sourceSpan, R3.elementStyleProp, function () {\n                        var params = [\n                            indexLiteral_1, o.literal(styleIndex),\n                            _this.convertPropertyBinding(implicit, value, true)\n                        ];\n                        if (input.unit != null) {\n                            params.push(o.literal(input.unit));\n                        }\n                        return params;\n                    });\n                };\n                var this_1 = this;\n                for (i; i < styleInputs.length; i++) {\n                    _loop_1();\n                }\n                lastInputCommand = styleInputs[styleInputs.length - 1];\n            }\n            if (classInputs.length) {\n                var i = mapBasedClassInput ? 1 : 0;\n                var _loop_2 = function () {\n                    var input = classInputs[i];\n                    var params = [];\n                    var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                    if (sanitizationRef)\n                        params.push(sanitizationRef);\n                    var key = input.name;\n                    var classIndex = classesIndexMap[key];\n                    var value = input.value.visit(this_2._valueConverter);\n                    this_2.updateInstruction(input.sourceSpan, R3.elementClassProp, function () {\n                        var valueLiteral = _this.convertPropertyBinding(implicit, value, true);\n                        return [indexLiteral_1, o.literal(classIndex), valueLiteral];\n                    });\n                };\n                var this_2 = this;\n                for (i; i < classInputs.length; i++) {\n                    _loop_2();\n                }\n                lastInputCommand = classInputs[classInputs.length - 1];\n            }\n            this.updateInstruction(lastInputCommand.sourceSpan, R3.elementStylingApply, [indexLiteral_1]);\n        }\n        // Generate element input bindings\n        allOtherInputs.forEach(function (input) {\n            var instruction = mapBindingToInstruction(input.type);\n            if (input.type === 4 /* Animation */) {\n                var value_1 = input.value.visit(_this._valueConverter);\n                // setAttribute without a value doesn't make any sense\n                if (value_1.name || value_1.value) {\n                    var name_2 = prepareSyntheticAttributeName(input.name);\n                    _this.updateInstruction(input.sourceSpan, R3.elementAttribute, function () {\n                        return [\n                            o.literal(elementIndex), o.literal(name_2), _this.convertPropertyBinding(implicit, value_1)\n                        ];\n                    });\n                }\n            }\n            else if (instruction) {\n                var params_1 = [];\n                var sanitizationRef = resolveSanitizationFn(input, input.securityContext);\n                if (sanitizationRef)\n                    params_1.push(sanitizationRef);\n                // TODO(chuckj): runtime: security context\n                var value_2 = input.value.visit(_this._valueConverter);\n                _this.allocateBindingSlots(value_2);\n                _this.updateInstruction(input.sourceSpan, instruction, function () {\n                    return [\n                        o.literal(elementIndex), o.literal(input.name),\n                        _this.convertPropertyBinding(implicit, value_2)\n                    ].concat(params_1);\n                });\n            }\n            else {\n                _this._unsupported(\"binding type \" + input.type);\n            }\n        });\n        // Traverse element child nodes\n        t.visitAll(this, element.children);\n        if (!isI18nRootElement && this.i18n) {\n            this.i18n.appendElement(elementIndex, true);\n        }\n        if (!createSelfClosingInstruction) {\n            // Finish element construction mode.\n            var span = element.endSourceSpan || element.sourceSpan;\n            if (isI18nRootElement) {\n                this.i18nEnd(span);\n            }\n            if (isNonBindableMode) {\n                this.creationInstruction(span, R3.enableBindings);\n            }\n            this.creationInstruction(span, isNgContainer ? R3.elementContainerEnd : R3.elementEnd);\n        }\n    };\n    TemplateDefinitionBuilder.prototype.visitTemplate = function (template) {\n        var _this = this;\n        var templateIndex = this.allocateDataSlot();\n        if (this.i18n) {\n            this.i18n.appendTemplate(templateIndex);\n        }\n        var elName = '';\n        if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n            // When the template as a single child, derive the context name from the tag\n            elName = sanitizeIdentifier(template.children[0].name);\n        }\n        var contextName = elName ? this.contextName + \"_\" + elName : '';\n        var templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var parameters = [\n            o.literal(templateIndex),\n            o.variable(templateName),\n            o.TYPED_NULL_EXPR,\n        ];\n        // find directives matching on a given <ng-template> node\n        this.matchDirectives('ng-template', template);\n        // prepare attributes parameter (including attributes used for directive matching)\n        var attrsExprs = [];\n        template.attributes.forEach(function (a) { attrsExprs.push(asLiteral(a.name), asLiteral(a.value)); });\n        attrsExprs.push.apply(attrsExprs, this.prepareSyntheticAndSelectOnlyAttrs(template.inputs, template.outputs));\n        parameters.push(this.toAttrsParam(attrsExprs));\n        // local refs (ex.: <ng-template #foo>)\n        if (template.references && template.references.length) {\n            parameters.push(this.prepareRefsParameter(template.references));\n            parameters.push(o.importExpr(R3.templateRefExtractor));\n        }\n        // handle property bindings e.g. p(1, 'forOf', ɵbind(ctx.items));\n        var context = o.variable(CONTEXT_NAME);\n        template.inputs.forEach(function (input) {\n            var value = input.value.visit(_this._valueConverter);\n            _this.allocateBindingSlots(value);\n            _this.updateInstruction(template.sourceSpan, R3.elementProperty, function () {\n                return [\n                    o.literal(templateIndex), o.literal(input.name),\n                    _this.convertPropertyBinding(context, value)\n                ];\n            });\n        });\n        // Create the template function\n        var templateVisitor = new TemplateDefinitionBuilder(this.constantPool, this._bindingScope, this.level + 1, contextName, this.i18n, templateIndex, templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes, this._namespace, this.fileBasedI18nSuffix);\n        // Nested templates must not be visited until after their parent templates have completed\n        // processing, so they are queued here until after the initial pass. Otherwise, we wouldn't\n        // be able to support bindings in nested templates to local refs that occur after the\n        // template definition. e.g. <div *ngIf=\"showing\"> {{ foo }} </div>  <div #foo></div>\n        this._nestedTemplateFns.push(function () {\n            var templateFunctionExpr = templateVisitor.buildTemplateFunction(template.children, template.variables);\n            _this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName, null));\n        });\n        // e.g. template(1, MyComp_Template_1)\n        this.creationInstruction(template.sourceSpan, R3.templateCreate, function () {\n            parameters.splice(2, 0, o.literal(templateVisitor.getConstCount()), o.literal(templateVisitor.getVarCount()));\n            return trimTrailingNulls(parameters);\n        });\n        // Generate listeners for directive output\n        template.outputs.forEach(function (outputAst) {\n            _this.creationInstruction(outputAst.sourceSpan, R3.listener, _this.prepareListenerParameter('ng_template', outputAst));\n        });\n    };\n    TemplateDefinitionBuilder.prototype.visitBoundText = function (text) {\n        var _this = this;\n        if (this.i18n) {\n            var value_3 = text.value.visit(this._valueConverter);\n            if (value_3 instanceof Interpolation) {\n                var strings = value_3.strings, expressions = value_3.expressions;\n                var label = assembleI18nBoundString(strings, this.i18n.getBindings().size, this.i18n.getId());\n                var implicit_1 = o.variable(CONTEXT_NAME);\n                expressions.forEach(function (expression) {\n                    var binding = _this.convertExpressionBinding(implicit_1, expression);\n                    _this.i18n.appendBinding(binding);\n                });\n                this.i18n.appendText(label);\n            }\n            return;\n        }\n        var nodeIndex = this.allocateDataSlot();\n        this.creationInstruction(text.sourceSpan, R3.text, [o.literal(nodeIndex)]);\n        var value = text.value.visit(this._valueConverter);\n        this.allocateBindingSlots(value);\n        this.updateInstruction(text.sourceSpan, R3.textBinding, function () { return [o.literal(nodeIndex), _this.convertPropertyBinding(o.variable(CONTEXT_NAME), value)]; });\n    };\n    TemplateDefinitionBuilder.prototype.visitText = function (text) {\n        if (this.i18n) {\n            this.i18n.appendText(text.value);\n            return;\n        }\n        this.creationInstruction(text.sourceSpan, R3.text, [o.literal(this.allocateDataSlot()), o.literal(text.value)]);\n    };\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = function () { return this._dataIndex++; };\n    TemplateDefinitionBuilder.prototype.getConstCount = function () { return this._dataIndex; };\n    TemplateDefinitionBuilder.prototype.getVarCount = function () { return this._pureFunctionSlots; };\n    TemplateDefinitionBuilder.prototype.bindingContext = function () { return \"\" + this._bindingContext++; };\n    // Bindings must only be resolved after all local refs have been visited, so all\n    // instructions are queued in callbacks that execute once the initial pass has completed.\n    // Otherwise, we wouldn't be able to support local refs that are defined after their\n    // bindings. e.g. {{ foo }} <div #foo></div>\n    TemplateDefinitionBuilder.prototype.instructionFn = function (fns, span, reference, paramsOrFn) {\n        fns.push(function () {\n            var params = Array.isArray(paramsOrFn) ? paramsOrFn : paramsOrFn();\n            return instruction(span, reference, params).toStmt();\n        });\n    };\n    TemplateDefinitionBuilder.prototype.creationInstruction = function (span, reference, paramsOrFn) {\n        this.instructionFn(this._creationCodeFns, span, reference, paramsOrFn || []);\n    };\n    TemplateDefinitionBuilder.prototype.updateInstruction = function (span, reference, paramsOrFn) {\n        this.instructionFn(this._updateCodeFns, span, reference, paramsOrFn || []);\n    };\n    TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots = function (numSlots) {\n        var originalSlots = this._pureFunctionSlots;\n        this._pureFunctionSlots += numSlots;\n        return originalSlots;\n    };\n    TemplateDefinitionBuilder.prototype.allocateBindingSlots = function (value) {\n        this._bindingSlots += value instanceof Interpolation ? value.expressions.length : 1;\n    };\n    TemplateDefinitionBuilder.prototype.convertExpressionBinding = function (implicit, value) {\n        var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple);\n        var valExpr = convertedPropertyBinding.currValExpr;\n        return o.importExpr(R3.bind).callFn([valExpr]);\n    };\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = function (implicit, value, skipBindFn) {\n        var _a;\n        var interpolationFn = value instanceof Interpolation ? interpolate : function () { return error('Unexpected interpolation'); };\n        var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolationFn);\n        (_a = this._tempVariables).push.apply(_a, convertedPropertyBinding.stmts);\n        var valExpr = convertedPropertyBinding.currValExpr;\n        return value instanceof Interpolation || skipBindFn ? valExpr :\n            o.importExpr(R3.bind).callFn([valExpr]);\n    };\n    TemplateDefinitionBuilder.prototype.matchDirectives = function (tagName, elOrTpl) {\n        var _this = this;\n        if (this.directiveMatcher) {\n            var selector = createCssSelector(tagName, getAttrsForDirectiveMatching(elOrTpl));\n            this.directiveMatcher.match(selector, function (cssSelector, staticType) { _this.directives.add(staticType); });\n        }\n    };\n    TemplateDefinitionBuilder.prototype.prepareSyntheticAndSelectOnlyAttrs = function (inputs, outputs) {\n        var attrExprs = [];\n        var nonSyntheticInputs = [];\n        if (inputs.length) {\n            var EMPTY_STRING_EXPR_1 = asLiteral('');\n            inputs.forEach(function (input) {\n                if (input.type === 4 /* Animation */) {\n                    // @attributes are for Renderer2 animation @triggers, but this feature\n                    // may be supported differently in future versions of angular. However,\n                    // @triggers should always just be treated as regular attributes (it's up\n                    // to the renderer to detect and use them in a special way).\n                    attrExprs.push(asLiteral(prepareSyntheticAttributeName(input.name)), EMPTY_STRING_EXPR_1);\n                }\n                else {\n                    nonSyntheticInputs.push(input);\n                }\n            });\n        }\n        if (nonSyntheticInputs.length || outputs.length) {\n            attrExprs.push(o.literal(1 /* SelectOnly */));\n            nonSyntheticInputs.forEach(function (i) { return attrExprs.push(asLiteral(i.name)); });\n            outputs.forEach(function (o) { return attrExprs.push(asLiteral(o.name)); });\n        }\n        return attrExprs;\n    };\n    TemplateDefinitionBuilder.prototype.toAttrsParam = function (attrsExprs) {\n        return attrsExprs.length > 0 ?\n            this.constantPool.getConstLiteral(o.literalArr(attrsExprs), true) :\n            o.TYPED_NULL_EXPR;\n    };\n    TemplateDefinitionBuilder.prototype.prepareRefsParameter = function (references) {\n        var _this = this;\n        if (!references || references.length === 0) {\n            return o.TYPED_NULL_EXPR;\n        }\n        var refsParam = flatten(references.map(function (reference) {\n            var slot = _this.allocateDataSlot();\n            // Generate the update temporary.\n            var variableName = _this._bindingScope.freshReferenceName();\n            var retrievalLevel = _this.level;\n            var lhs = o.variable(variableName);\n            _this._bindingScope.set(retrievalLevel, reference.name, lhs, 0 /* DEFAULT */, function (scope, relativeLevel) {\n                // e.g. x(2);\n                var nextContextStmt = relativeLevel > 0 ? [generateNextContextExpr(relativeLevel).toStmt()] : [];\n                // e.g. const $foo$ = r(1);\n                var refExpr = lhs.set(o.importExpr(R3.reference).callFn([o.literal(slot)]));\n                return nextContextStmt.concat(refExpr.toConstDecl());\n            });\n            return [reference.name, reference.value];\n        }));\n        return this.constantPool.getConstLiteral(asLiteral(refsParam), true);\n    };\n    TemplateDefinitionBuilder.prototype.prepareListenerParameter = function (tagName, outputAst) {\n        var _this = this;\n        var evNameSanitized = sanitizeIdentifier(outputAst.name);\n        var tagNameSanitized = sanitizeIdentifier(tagName);\n        var functionName = this.templateName + \"_\" + tagNameSanitized + \"_\" + evNameSanitized + \"_listener\";\n        return function () {\n            var listenerScope = _this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);\n            var bindingExpr = convertActionBinding(listenerScope, o.variable(CONTEXT_NAME), outputAst.handler, 'b', function () { return error('Unexpected interpolation'); });\n            var statements = listenerScope.restoreViewStatement().concat(listenerScope.variableDeclarations(), bindingExpr.render3Stmts);\n            var handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], statements, o.INFERRED_TYPE, null, functionName);\n            return [o.literal(outputAst.name), handler];\n        };\n    };\n    return TemplateDefinitionBuilder;\n}());\nexport { TemplateDefinitionBuilder };\nvar ValueConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueConverter, _super);\n    function ValueConverter(constantPool, allocateSlot, allocatePureFunctionSlots, definePipe) {\n        var _this = _super.call(this) || this;\n        _this.constantPool = constantPool;\n        _this.allocateSlot = allocateSlot;\n        _this.allocatePureFunctionSlots = allocatePureFunctionSlots;\n        _this.definePipe = definePipe;\n        _this._pipeBindExprs = [];\n        return _this;\n    }\n    // AstMemoryEfficientTransformer\n    ValueConverter.prototype.visitPipe = function (pipe, context) {\n        // Allocate a slot to create the pipe\n        var slot = this.allocateSlot();\n        var slotPseudoLocal = \"PIPE:\" + slot;\n        // Allocate one slot for the result plus one slot per pipe argument\n        var pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n        var target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n        var _a = pipeBindingCallInfo(pipe.args), identifier = _a.identifier, isVarLength = _a.isVarLength;\n        this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(identifier));\n        var args = [pipe.exp].concat(pipe.args);\n        var convertedArgs = isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n        var pipeBindExpr = new FunctionCall(pipe.span, target, [\n            new LiteralPrimitive(pipe.span, slot),\n            new LiteralPrimitive(pipe.span, pureFunctionSlot)\n        ].concat(convertedArgs));\n        this._pipeBindExprs.push(pipeBindExpr);\n        return pipeBindExpr;\n    };\n    ValueConverter.prototype.updatePipeSlotOffsets = function (bindingSlots) {\n        this._pipeBindExprs.forEach(function (pipe) {\n            // update the slot offset arg (index 1) to account for binding slots\n            var slotOffset = pipe.args[1];\n            slotOffset.value += bindingSlots;\n        });\n    };\n    ValueConverter.prototype.visitLiteralArray = function (array, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), function (values) {\n            // If the literal has calculated (non-literal) elements transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal = o.literalArr(values);\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(_this.constantPool, literal, _this.allocatePureFunctionSlots);\n        });\n    };\n    ValueConverter.prototype.visitLiteralMap = function (map, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(map.span, this.visitAll(map.values), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var literal = o.literalMap(values.map(function (value, index) { return ({ key: map.keys[index].key, value: value, quoted: map.keys[index].quoted }); }));\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.constantPool.getConstLiteral(literal, true) :\n                getLiteralFactory(_this.constantPool, literal, _this.allocatePureFunctionSlots);\n        });\n    };\n    return ValueConverter;\n}(AstMemoryEfficientTransformer));\nexport { ValueConverter };\n// Pipes always have at least one parameter, the value they operate on\nvar pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\nfunction pipeBindingCallInfo(args) {\n    var identifier = pipeBindingIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pipeBindV,\n        isVarLength: !identifier,\n    };\n}\nvar pureFunctionIdentifiers = [\n    R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n    R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\nfunction pureFunctionCallInfo(args) {\n    var identifier = pureFunctionIdentifiers[args.length];\n    return {\n        identifier: identifier || R3.pureFunctionV,\n        isVarLength: !identifier,\n    };\n}\nfunction instruction(span, reference, params) {\n    return o.importExpr(reference, null, span).callFn(params, span);\n}\n// e.g. x(2);\nfunction generateNextContextExpr(relativeLevelDiff) {\n    return o.importExpr(R3.nextContext)\n        .callFn(relativeLevelDiff > 1 ? [o.literal(relativeLevelDiff)] : []);\n}\nfunction getLiteralFactory(constantPool, literal, allocateSlots) {\n    var _a = constantPool.getLiteralFactory(literal), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n    // Allocate 1 slot for the result plus 1 per argument\n    var startSlot = allocateSlots(1 + literalFactoryArguments.length);\n    literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n    var _b = pureFunctionCallInfo(literalFactoryArguments), identifier = _b.identifier, isVarLength = _b.isVarLength;\n    // Literal factories are pure functions that only need to be re-invoked when the parameters\n    // change.\n    var args = [\n        o.literal(startSlot),\n        literalFactory,\n    ];\n    if (isVarLength) {\n        args.push(o.literalArr(literalFactoryArguments));\n    }\n    else {\n        args.push.apply(args, literalFactoryArguments);\n    }\n    return o.importExpr(identifier).callFn(args);\n}\n/** The prefix used to get a shared context in BindingScope's map. */\nvar SHARED_CONTEXT_KEY = '$$shared_ctx$$';\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(bindingLevel, parent) {\n        if (bindingLevel === void 0) { bindingLevel = 0; }\n        if (parent === void 0) { parent = null; }\n        this.bindingLevel = bindingLevel;\n        this.parent = parent;\n        /** Keeps a map from local variables to their BindingData. */\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n        this.restoreViewVariable = null;\n    }\n    Object.defineProperty(BindingScope, \"ROOT_SCOPE\", {\n        get: function () {\n            if (!BindingScope._ROOT_SCOPE) {\n                BindingScope._ROOT_SCOPE = new BindingScope().set(0, '$event', o.variable('$event'));\n            }\n            return BindingScope._ROOT_SCOPE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BindingScope.prototype.get = function (name) {\n        var current = this;\n        while (current) {\n            var value = current.map.get(name);\n            if (value != null) {\n                if (current !== this) {\n                    // make a local copy and reset the `declare` state\n                    value = {\n                        retrievalLevel: value.retrievalLevel,\n                        lhs: value.lhs,\n                        declareLocalCallback: value.declareLocalCallback,\n                        declare: false,\n                        priority: value.priority\n                    };\n                    // Cache the value locally.\n                    this.map.set(name, value);\n                    // Possibly generate a shared context var\n                    this.maybeGenerateSharedContextVar(value);\n                    this.maybeRestoreView(value.retrievalLevel);\n                }\n                if (value.declareLocalCallback && !value.declare) {\n                    value.declare = true;\n                }\n                return value.lhs;\n            }\n            current = current.parent;\n        }\n        // If we get to this point, we are looking for a property on the top level component\n        // - If level === 0, we are on the top and don't need to re-declare `ctx`.\n        // - If level > 0, we are in an embedded view. We need to retrieve the name of the\n        // local var we used to store the component context, e.g. const $comp$ = x();\n        return this.bindingLevel === 0 ? null : this.getComponentProperty(name);\n    };\n    /**\n     * Create a local variable for later reference.\n     *\n     * @param retrievalLevel The level from which this value can be retrieved\n     * @param name Name of the variable.\n     * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n     * @param priority The sorting priority of this var\n     * @param declareLocalCallback The callback to invoke when declaring this local var\n     */\n    BindingScope.prototype.set = function (retrievalLevel, name, lhs, priority, declareLocalCallback) {\n        if (priority === void 0) { priority = 0 /* DEFAULT */; }\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declare: false,\n            declareLocalCallback: declareLocalCallback,\n            priority: priority\n        });\n        return this;\n    };\n    BindingScope.prototype.getLocal = function (name) { return this.get(name); };\n    BindingScope.prototype.nestedScope = function (level) {\n        var newScope = new BindingScope(level, this);\n        if (level > 0)\n            newScope.generateSharedContextVar(0);\n        return newScope;\n    };\n    BindingScope.prototype.getSharedContextName = function (retrievalLevel) {\n        var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + retrievalLevel);\n        return sharedCtxObj && sharedCtxObj.declare ? sharedCtxObj.lhs : null;\n    };\n    BindingScope.prototype.maybeGenerateSharedContextVar = function (value) {\n        if (value.priority === 1 /* CONTEXT */) {\n            var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + value.retrievalLevel);\n            if (sharedCtxObj) {\n                sharedCtxObj.declare = true;\n            }\n            else {\n                this.generateSharedContextVar(value.retrievalLevel);\n            }\n        }\n    };\n    BindingScope.prototype.generateSharedContextVar = function (retrievalLevel) {\n        var lhs = o.variable(CONTEXT_NAME + this.freshReferenceName());\n        this.map.set(SHARED_CONTEXT_KEY + retrievalLevel, {\n            retrievalLevel: retrievalLevel,\n            lhs: lhs,\n            declareLocalCallback: function (scope, relativeLevel) {\n                // const ctx_r0 = x(2);\n                return [lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];\n            },\n            declare: false,\n            priority: 2 /* SHARED_CONTEXT */\n        });\n    };\n    BindingScope.prototype.getComponentProperty = function (name) {\n        var componentValue = this.map.get(SHARED_CONTEXT_KEY + 0);\n        componentValue.declare = true;\n        this.maybeRestoreView(0);\n        return componentValue.lhs.prop(name);\n    };\n    BindingScope.prototype.maybeRestoreView = function (retrievalLevel) {\n        if (this.isListenerScope() && retrievalLevel < this.bindingLevel) {\n            if (!this.parent.restoreViewVariable) {\n                // parent saves variable to generate a shared `const $s$ = gV();` instruction\n                this.parent.restoreViewVariable = o.variable(this.parent.freshReferenceName());\n            }\n            this.restoreViewVariable = this.parent.restoreViewVariable;\n        }\n    };\n    BindingScope.prototype.restoreViewStatement = function () {\n        // rV($state$);\n        return this.restoreViewVariable ?\n            [instruction(null, R3.restoreView, [this.restoreViewVariable]).toStmt()] :\n            [];\n    };\n    BindingScope.prototype.viewSnapshotStatements = function () {\n        // const $state$ = gV();\n        var getCurrentViewInstruction = instruction(null, R3.getCurrentView, []);\n        return this.restoreViewVariable ?\n            [this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()] :\n            [];\n    };\n    BindingScope.prototype.isListenerScope = function () { return this.parent && this.parent.bindingLevel === this.bindingLevel; };\n    BindingScope.prototype.variableDeclarations = function () {\n        var _this = this;\n        var currentContextLevel = 0;\n        return Array.from(this.map.values())\n            .filter(function (value) { return value.declare; })\n            .sort(function (a, b) { return b.retrievalLevel - a.retrievalLevel || b.priority - a.priority; })\n            .reduce(function (stmts, value) {\n            var levelDiff = _this.bindingLevel - value.retrievalLevel;\n            var currStmts = value.declareLocalCallback(_this, levelDiff - currentContextLevel);\n            currentContextLevel = levelDiff;\n            return stmts.concat(currStmts);\n        }, []);\n    };\n    BindingScope.prototype.freshReferenceName = function () {\n        var current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        var ref = \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n        return ref;\n    };\n    return BindingScope;\n}());\nexport { BindingScope };\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag, attributes) {\n    var cssSelector = new CssSelector();\n    cssSelector.setElement(tag);\n    Object.getOwnPropertyNames(attributes).forEach(function (name) {\n        var value = attributes[name];\n        cssSelector.addAttribute(name, value);\n        if (name.toLowerCase() === 'class') {\n            var classes = value.trim().split(/\\s+/g);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    });\n    return cssSelector;\n}\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return o.importExpr(R3.interpolation1).callFn(args);\n        case 5:\n            return o.importExpr(R3.interpolation2).callFn(args);\n        case 7:\n            return o.importExpr(R3.interpolation3).callFn(args);\n        case 9:\n            return o.importExpr(R3.interpolation4).callFn(args);\n        case 11:\n            return o.importExpr(R3.interpolation5).callFn(args);\n        case 13:\n            return o.importExpr(R3.interpolation6).callFn(args);\n        case 15:\n            return o.importExpr(R3.interpolation7).callFn(args);\n        case 17:\n            return o.importExpr(R3.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n/**\n * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n *\n * @param template text of the template to parse\n * @param templateUrl URL to use for source mapping of the parsed template\n */\nexport function parseTemplate(template, templateUrl, options, relativeContextFilePath) {\n    if (options === void 0) { options = {}; }\n    var bindingParser = makeBindingParser();\n    var htmlParser = new HtmlParser();\n    var parseResult = htmlParser.parse(template, templateUrl);\n    if (parseResult.errors && parseResult.errors.length > 0) {\n        return {\n            errors: parseResult.errors,\n            nodes: [],\n            hasNgContent: false,\n            ngContentSelectors: [], relativeContextFilePath: relativeContextFilePath\n        };\n    }\n    var rootNodes = parseResult.rootNodes;\n    if (!options.preserveWhitespaces) {\n        rootNodes = html.visitAll(new WhitespaceVisitor(), rootNodes);\n    }\n    var _a = htmlAstToRender3Ast(rootNodes, bindingParser), nodes = _a.nodes, hasNgContent = _a.hasNgContent, ngContentSelectors = _a.ngContentSelectors, errors = _a.errors;\n    if (errors && errors.length > 0) {\n        return {\n            errors: errors,\n            nodes: [],\n            hasNgContent: false,\n            ngContentSelectors: [], relativeContextFilePath: relativeContextFilePath\n        };\n    }\n    return { nodes: nodes, hasNgContent: hasNgContent, ngContentSelectors: ngContentSelectors, relativeContextFilePath: relativeContextFilePath };\n}\n/**\n * Construct a `BindingParser` with a default configuration.\n */\nexport function makeBindingParser() {\n    return new BindingParser(new Parser(new Lexer()), DEFAULT_INTERPOLATION_CONFIG, new DomElementSchemaRegistry(), null, []);\n}\nfunction isClassBinding(input) {\n    return input.name == 'className' || input.name == 'class';\n}\nfunction resolveSanitizationFn(input, context) {\n    switch (context) {\n        case core.SecurityContext.HTML:\n            return o.importExpr(R3.sanitizeHtml);\n        case core.SecurityContext.SCRIPT:\n            return o.importExpr(R3.sanitizeScript);\n        case core.SecurityContext.STYLE:\n            // the compiler does not fill in an instruction for [style.prop?] binding\n            // values because the style algorithm knows internally what props are subject\n            // to sanitization (only [attr.style] values are explicitly sanitized)\n            return input.type === 1 /* Attribute */ ? o.importExpr(R3.sanitizeStyle) : null;\n        case core.SecurityContext.URL:\n            return o.importExpr(R3.sanitizeUrl);\n        case core.SecurityContext.RESOURCE_URL:\n            return o.importExpr(R3.sanitizeResourceUrl);\n        default:\n            return null;\n    }\n}\nfunction isStyleSanitizable(prop) {\n    switch (prop) {\n        case 'background-image':\n        case 'background':\n        case 'border-image':\n        case 'filter':\n        case 'list-style':\n        case 'list-style-image':\n            return true;\n    }\n    return false;\n}\nfunction prepareSyntheticAttributeName(name) {\n    return '@' + name;\n}\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName, sanitizeIdentifier } from '../../compile_metadata';\nimport { BindingForm, convertActionBinding, convertPropertyBinding } from '../../compiler_util/expression_converter';\nimport * as core from '../../core';\nimport { LifecycleHooks } from '../../lifecycle_reflector';\nimport * as o from '../../output/output_ast';\nimport { typeSourceSpan } from '../../parse_util';\nimport { CssSelector, SelectorMatcher } from '../../selector';\nimport { ShadowCss } from '../../shadow_css';\nimport { CONTENT_ATTR, HOST_ATTR } from '../../style_compiler';\nimport { error } from '../../util';\nimport { compileFactoryFunction, dependenciesFromGlobalMetadata } from '../r3_factory';\nimport { Identifiers as R3 } from '../r3_identifiers';\nimport { typeWithParameters } from '../util';\nimport { BindingScope, TemplateDefinitionBuilder, ValueConverter, renderFlagCheckIfStmt } from './template';\nimport { CONTEXT_NAME, DefinitionMap, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, conditionallyCreateMapObjectLiteral, getQueryPredicate, temporaryAllocator } from './util';\nvar EMPTY_ARRAY = [];\n// This regex matches any binding names that contain the \"attr.\" prefix, e.g. \"attr.required\"\n// If there is a match, the first matching group will contain the attribute name to bind.\nvar ATTR_REGEX = /attr\\.([^\\]]+)/;\nfunction baseDirectiveFields(meta, constantPool, bindingParser) {\n    var definitionMap = new DefinitionMap();\n    // e.g. `type: MyDirective`\n    definitionMap.set('type', meta.type);\n    // e.g. `selectors: [['', 'someDir', '']]`\n    definitionMap.set('selectors', createDirectiveSelector(meta.selector));\n    // e.g. `factory: () => new MyApp(directiveInject(ElementRef))`\n    var result = compileFactoryFunction({\n        name: meta.name,\n        type: meta.type,\n        deps: meta.deps,\n        injectFn: R3.directiveInject,\n        extraStatementFn: createFactoryExtraStatementsFn(meta, bindingParser)\n    });\n    definitionMap.set('factory', result.factory);\n    definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n    definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n    // Initialize hostVars to number of bound host properties (interpolations illegal)\n    var hostVars = Object.keys(meta.host.properties).length;\n    // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n    definitionMap.set('hostBindings', createHostBindingsFunction(meta, bindingParser, constantPool, function (slots) {\n        var originalSlots = hostVars;\n        hostVars += slots;\n        return originalSlots;\n    }));\n    if (hostVars) {\n        // e.g. `hostVars: 2\n        definitionMap.set('hostVars', o.literal(hostVars));\n    }\n    // e.g. `attributes: ['role', 'listbox']`\n    definitionMap.set('attributes', createHostAttributesArray(meta));\n    // e.g 'inputs: {a: 'a'}`\n    definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs));\n    // e.g 'outputs: {a: 'a'}`\n    definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n    if (meta.exportAs !== null) {\n        definitionMap.set('exportAs', o.literal(meta.exportAs));\n    }\n    return { definitionMap: definitionMap, statements: result.statements };\n}\n/**\n * Add features to the definition map.\n */\nfunction addFeatures(definitionMap, meta) {\n    // e.g. `features: [NgOnChangesFeature]`\n    var features = [];\n    var providers = meta.providers;\n    var viewProviders = meta.viewProviders;\n    if (providers || viewProviders) {\n        var args = [providers || new o.LiteralArrayExpr([])];\n        if (viewProviders) {\n            args.push(viewProviders);\n        }\n        features.push(o.importExpr(R3.ProvidersFeature).callFn(args));\n    }\n    if (meta.usesInheritance) {\n        features.push(o.importExpr(R3.InheritDefinitionFeature));\n    }\n    if (meta.lifecycle.usesOnChanges) {\n        features.push(o.importExpr(R3.NgOnChangesFeature));\n    }\n    if (features.length) {\n        definitionMap.set('features', o.literalArr(features));\n    }\n}\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(meta, constantPool, bindingParser) {\n    var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n    addFeatures(definitionMap, meta);\n    var expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var type = createTypeForDef(meta, R3.DirectiveDefWithMeta);\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n * @param meta the metadata used for compilation.\n */\nexport function compileBaseDefFromMetadata(meta) {\n    var definitionMap = new DefinitionMap();\n    if (meta.inputs) {\n        var inputs_1 = meta.inputs;\n        var inputsMap = Object.keys(inputs_1).map(function (key) {\n            var v = inputs_1[key];\n            var value = Array.isArray(v) ? o.literalArr(v.map(function (vx) { return o.literal(vx); })) : o.literal(v);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('inputs', o.literalMap(inputsMap));\n    }\n    if (meta.outputs) {\n        var outputs_1 = meta.outputs;\n        var outputsMap = Object.keys(outputs_1).map(function (key) {\n            var value = o.literal(outputs_1[key]);\n            return { key: key, value: value, quoted: false };\n        });\n        definitionMap.set('outputs', o.literalMap(outputsMap));\n    }\n    var expression = o.importExpr(R3.defineBase).callFn([definitionMap.toLiteralMap()]);\n    var type = new o.ExpressionType(o.importExpr(R3.BaseDef));\n    return { expression: expression, type: type };\n}\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(meta, constantPool, bindingParser) {\n    var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n    addFeatures(definitionMap, meta);\n    var selector = meta.selector && CssSelector.parse(meta.selector);\n    var firstSelector = selector && selector[0];\n    // e.g. `attr: [\"class\", \".my.app\"]`\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMap.set('attrs', constantPool.getConstLiteral(o.literalArr(selectorAttributes.map(function (value) { return value != null ? o.literal(value) : o.literal(undefined); })), \n            /* forceShared */ true));\n        }\n    }\n    // Generate the CSS matcher that recognize directive\n    var directiveMatcher = null;\n    if (meta.directives.size) {\n        var matcher_1 = new SelectorMatcher();\n        meta.directives.forEach(function (expression, selector) {\n            matcher_1.addSelectables(CssSelector.parse(selector), expression);\n        });\n        directiveMatcher = matcher_1;\n    }\n    if (meta.viewQueries.length) {\n        definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n    }\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var templateTypeName = meta.name;\n    var templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var directivesUsed = new Set();\n    var pipesUsed = new Set();\n    var template = meta.template;\n    var templateBuilder = new TemplateDefinitionBuilder(constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, null, null, templateName, meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, R3.namespaceHTML, meta.template.relativeContextFilePath);\n    var templateFunctionExpression = templateBuilder.buildTemplateFunction(template.nodes, [], template.hasNgContent, template.ngContentSelectors);\n    // e.g. `consts: 2`\n    definitionMap.set('consts', o.literal(templateBuilder.getConstCount()));\n    // e.g. `vars: 2`\n    definitionMap.set('vars', o.literal(templateBuilder.getVarCount()));\n    definitionMap.set('template', templateFunctionExpression);\n    // e.g. `directives: [MyDirective]`\n    if (directivesUsed.size) {\n        var directivesExpr = o.literalArr(Array.from(directivesUsed));\n        if (meta.wrapDirectivesAndPipesInClosure) {\n            directivesExpr = o.fn([], [new o.ReturnStatement(directivesExpr)]);\n        }\n        definitionMap.set('directives', directivesExpr);\n    }\n    // e.g. `pipes: [MyPipe]`\n    if (pipesUsed.size) {\n        var pipesExpr = o.literalArr(Array.from(pipesUsed));\n        if (meta.wrapDirectivesAndPipesInClosure) {\n            pipesExpr = o.fn([], [new o.ReturnStatement(pipesExpr)]);\n        }\n        definitionMap.set('pipes', pipesExpr);\n    }\n    // e.g. `styles: [str1, str2]`\n    if (meta.styles && meta.styles.length) {\n        var styleValues = meta.encapsulation == core.ViewEncapsulation.Emulated ?\n            compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n            meta.styles;\n        var strings = styleValues.map(function (str) { return o.literal(str); });\n        definitionMap.set('styles', o.literalArr(strings));\n    }\n    // e.g. `animations: [trigger('123', [])]`\n    if (meta.animations !== null) {\n        definitionMap.set('data', o.literalMap([{ key: 'animations', value: meta.animations, quoted: false }]));\n    }\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    var expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n    var type = createTypeForDef(meta, R3.ComponentDefWithMeta);\n    return { expression: expression, type: type, statements: statements };\n}\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileDirectiveFromRender2(outputCtx, directive, reflector, bindingParser) {\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(1 /* Directive */);\n    var meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n    var res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileComponentFromRender2(outputCtx, component, render3Ast, reflector, bindingParser, directiveTypeBySel, pipeTypeByName) {\n    var name = identifierName(component.type);\n    name || error(\"Cannot resolver the name of \" + component.type);\n    var definitionField = outputCtx.constantPool.propertyNameOf(2 /* Component */);\n    var summary = component.toSummary();\n    // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n    var meta = tslib_1.__assign({}, directiveMetadataFromGlobalMetadata(component, outputCtx, reflector), { selector: component.selector, template: {\n            nodes: render3Ast.nodes,\n            hasNgContent: render3Ast.hasNgContent,\n            ngContentSelectors: render3Ast.ngContentSelectors,\n            relativeContextFilePath: '',\n        }, directives: typeMapToExpressionMap(directiveTypeBySel, outputCtx), pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx), viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx), wrapDirectivesAndPipesInClosure: false, styles: (summary.template && summary.template.styles) || EMPTY_ARRAY, encapsulation: (summary.template && summary.template.encapsulation) || core.ViewEncapsulation.Emulated, animations: null, viewProviders: component.viewProviders.length > 0 ? new o.WrappedNodeExpr(component.viewProviders) : null });\n    var res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(name, null, [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)], [], new o.ClassMethod(null, [], []), []));\n}\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector) {\n    var summary = directive.toSummary();\n    var name = identifierName(directive.type);\n    name || error(\"Cannot resolver the name of \" + directive.type);\n    return {\n        name: name,\n        type: outputCtx.importExpr(directive.type.reference),\n        typeArgumentCount: 0,\n        typeSourceSpan: typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n        selector: directive.selector,\n        deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n        queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n        lifecycle: {\n            usesOnChanges: directive.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; }),\n        },\n        host: {\n            attributes: directive.hostAttributes,\n            listeners: summary.hostListeners,\n            properties: summary.hostProperties,\n        },\n        inputs: directive.inputs,\n        outputs: directive.outputs,\n        usesInheritance: false,\n        exportAs: null,\n        providers: directive.providers.length > 0 ? new o.WrappedNodeExpr(directive.providers) : null\n    };\n}\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(queries, outputCtx) {\n    return queries.map(function (query) {\n        var read = null;\n        if (query.read && query.read.identifier) {\n            read = outputCtx.importExpr(query.read.identifier.reference);\n        }\n        return {\n            propertyName: query.propertyName,\n            first: query.first,\n            predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n            descendants: query.descendants, read: read,\n        };\n    });\n}\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(selectors, outputCtx) {\n    if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n        var selectorStrings = selectors.map(function (value) { return value.value; });\n        selectorStrings.some(function (value) { return !value; }) &&\n            error('Found a type among the string selectors expected');\n        return outputCtx.constantPool.getConstLiteral(o.literalArr(selectorStrings.map(function (value) { return o.literal(value); })));\n    }\n    if (selectors.length == 1) {\n        var first = selectors[0];\n        if (first.identifier) {\n            return outputCtx.importExpr(first.identifier.reference);\n        }\n    }\n    error('Unexpected query form');\n    return o.NULL_EXPR;\n}\nfunction createQueryDefinition(query, constantPool, idx) {\n    var predicate = getQueryPredicate(query, constantPool);\n    // e.g. r3.Q(null, somePredicate, false) or r3.Q(0, ['div'], false)\n    var parameters = [\n        o.literal(idx, o.INFERRED_TYPE),\n        predicate,\n        o.literal(query.descendants),\n    ];\n    if (query.read) {\n        parameters.push(query.read);\n    }\n    return o.importExpr(R3.query).callFn(parameters);\n}\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector) {\n    return asLiteral(core.parseSelectorToR3Selector(selector));\n}\nfunction createHostAttributesArray(meta) {\n    var values = [];\n    var attributes = meta.host.attributes;\n    for (var _i = 0, _a = Object.getOwnPropertyNames(attributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var value = attributes[key];\n        values.push(o.literal(key), o.literal(value));\n    }\n    if (values.length > 0) {\n        return o.literalArr(values);\n    }\n    return null;\n}\n// Return a contentQueries function or null if one is not necessary.\nfunction createContentQueriesFunction(meta, constantPool) {\n    if (meta.queries.length) {\n        var statements = meta.queries.map(function (query) {\n            var queryDefinition = createQueryDefinition(query, constantPool, null);\n            return o.importExpr(R3.registerContentQuery)\n                .callFn([queryDefinition, o.variable('dirIndex')])\n                .toStmt();\n        });\n        var typeName = meta.name;\n        var parameters = [new o.FnParam('dirIndex', o.NUMBER_TYPE)];\n        return o.fn(parameters, statements, o.INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueries\" : null);\n    }\n    return null;\n}\n// Return a contentQueriesRefresh function or null if one is not necessary.\nfunction createContentQueriesRefreshFunction(meta) {\n    if (meta.queries.length > 0) {\n        var statements_1 = [];\n        var typeName = meta.name;\n        var parameters = [\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('queryStartIndex', o.NUMBER_TYPE),\n        ];\n        var directiveInstanceVar_1 = o.variable('instance');\n        // var $tmp$: any;\n        var temporary_1 = temporaryAllocator(statements_1, TEMPORARY_NAME);\n        // const $instance$ = $r3$.ɵload(dirIndex);\n        statements_1.push(directiveInstanceVar_1.set(o.importExpr(R3.load).callFn([o.variable('dirIndex')]))\n            .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        meta.queries.forEach(function (query, idx) {\n            var loadQLArg = o.variable('queryStartIndex');\n            var getQueryList = o.importExpr(R3.loadQueryList).callFn([\n                idx > 0 ? loadQLArg.plus(o.literal(idx)) : loadQLArg\n            ]);\n            var assignToTemporary = temporary_1().set(getQueryList);\n            var callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n            var updateDirective = directiveInstanceVar_1.prop(query.propertyName)\n                .set(query.first ? temporary_1().prop('first') : temporary_1());\n            var refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n            statements_1.push(refreshQueryAndUpdateDirective.toStmt());\n        });\n        return o.fn(parameters, statements_1, o.INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueriesRefresh\" : null);\n    }\n    return null;\n}\nfunction stringAsType(str) {\n    return o.expressionType(o.literal(str));\n}\nfunction stringMapAsType(map) {\n    var mapValues = Object.keys(map).map(function (key) {\n        var value = Array.isArray(map[key]) ? map[key][0] : map[key];\n        return {\n            key: key,\n            value: o.literal(value),\n            quoted: true,\n        };\n    });\n    return o.expressionType(o.literalMap(mapValues));\n}\nfunction stringArrayAsType(arr) {\n    return arr.length > 0 ? o.expressionType(o.literalArr(arr.map(function (value) { return o.literal(value); }))) :\n        o.NONE_TYPE;\n}\nfunction createTypeForDef(meta, typeBase) {\n    // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n    // string literal, which must be on one line.\n    var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n    return o.expressionType(o.importExpr(typeBase, [\n        typeWithParameters(meta.type, meta.typeArgumentCount),\n        stringAsType(selectorForType),\n        meta.exportAs !== null ? stringAsType(meta.exportAs) : o.NONE_TYPE,\n        stringMapAsType(meta.inputs),\n        stringMapAsType(meta.outputs),\n        stringArrayAsType(meta.queries.map(function (q) { return q.propertyName; })),\n    ]));\n}\n// Define and update any view queries\nfunction createViewQueriesFunction(meta, constantPool) {\n    var createStatements = [];\n    var updateStatements = [];\n    var tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n    for (var i = 0; i < meta.viewQueries.length; i++) {\n        var query = meta.viewQueries[i];\n        // creation, e.g. r3.Q(0, somePredicate, true);\n        var queryDefinition = createQueryDefinition(query, constantPool, i);\n        createStatements.push(queryDefinition.toStmt());\n        // update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));\n        var temporary = tempAllocator();\n        var getQueryList = o.importExpr(R3.load).callFn([o.literal(i)]);\n        var refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n        var updateDirective = o.variable(CONTEXT_NAME)\n            .prop(query.propertyName)\n            .set(query.first ? temporary.prop('first') : temporary);\n        updateStatements.push(refresh.and(updateDirective).toStmt());\n    }\n    var viewQueryFnName = meta.name ? meta.name + \"_Query\" : null;\n    return o.fn([new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)], [\n        renderFlagCheckIfStmt(1 /* Create */, createStatements),\n        renderFlagCheckIfStmt(2 /* Update */, updateStatements)\n    ], o.INFERRED_TYPE, null, viewQueryFnName);\n}\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(meta, bindingParser, constantPool, allocatePureFunctionSlots) {\n    var statements = [];\n    var hostBindingSourceSpan = meta.typeSourceSpan;\n    var directiveSummary = metadataAsSummary(meta);\n    // Calculate the host property bindings\n    var bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n    var bindingContext = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n    if (bindings) {\n        var valueConverter = new ValueConverter(constantPool, \n        /* new nodes are illegal here */ function () { return error('Unexpected node'); }, allocatePureFunctionSlots, \n        /* pipes are illegal here */ function () { return error('Unexpected pipe'); });\n        for (var _i = 0, bindings_1 = bindings; _i < bindings_1.length; _i++) {\n            var binding = bindings_1[_i];\n            // resolve literal arrays and literal objects\n            var value = binding.expression.visit(valueConverter);\n            var bindingExpr = convertPropertyBinding(null, bindingContext, value, 'b', BindingForm.TrySimple, function () { return error('Unexpected interpolation'); });\n            var _a = getBindingNameAndInstruction(binding.name), bindingName = _a.bindingName, instruction = _a.instruction;\n            statements.push.apply(statements, bindingExpr.stmts);\n            statements.push(o.importExpr(instruction)\n                .callFn([\n                o.variable('elIndex'),\n                o.literal(bindingName),\n                o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n            ])\n                .toStmt());\n        }\n    }\n    if (statements.length > 0) {\n        var typeName = meta.name;\n        return o.fn([\n            new o.FnParam('dirIndex', o.NUMBER_TYPE),\n            new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ], statements, o.INFERRED_TYPE, null, typeName ? typeName + \"_HostBindings\" : null);\n    }\n    return null;\n}\nfunction getBindingNameAndInstruction(bindingName) {\n    var instruction;\n    // Check to see if this is an attr binding or a property binding\n    var attrMatches = bindingName.match(ATTR_REGEX);\n    if (attrMatches) {\n        bindingName = attrMatches[1];\n        instruction = R3.elementAttribute;\n    }\n    else {\n        instruction = R3.elementProperty;\n    }\n    return { bindingName: bindingName, instruction: instruction };\n}\nfunction createFactoryExtraStatementsFn(meta, bindingParser) {\n    var eventBindings = bindingParser.createDirectiveHostEventAsts(metadataAsSummary(meta), meta.typeSourceSpan);\n    return eventBindings && eventBindings.length ?\n        function (instance) { return createHostListeners(instance, eventBindings, meta); } :\n        null;\n}\nfunction createHostListeners(bindingContext, eventBindings, meta) {\n    return eventBindings.map(function (binding) {\n        var bindingExpr = convertActionBinding(null, bindingContext, binding.handler, 'b', function () { return error('Unexpected interpolation'); });\n        var bindingName = binding.name && sanitizeIdentifier(binding.name);\n        var typeName = meta.name;\n        var functionName = typeName && bindingName ? typeName + \"_\" + bindingName + \"_HostBindingHandler\" : null;\n        var handler = o.fn([new o.FnParam('$event', o.DYNAMIC_TYPE)], bindingExpr.render3Stmts.slice(), o.INFERRED_TYPE, null, functionName);\n        return o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt();\n    });\n}\nfunction metadataAsSummary(meta) {\n    // clang-format off\n    return {\n        hostAttributes: meta.host.attributes,\n        hostListeners: meta.host.listeners,\n        hostProperties: meta.host.properties,\n    };\n    // clang-format on\n}\nfunction typeMapToExpressionMap(map, outputCtx) {\n    // Convert each map entry into another entry where the value is an expression importing the type.\n    var entries = Array.from(map).map(function (_a) {\n        var key = _a[0], type = _a[1];\n        return [key, outputCtx.importExpr(type)];\n    });\n    return new Map(entries);\n}\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nexport function parseHostBindings(host) {\n    var attributes = {};\n    var listeners = {};\n    var properties = {};\n    var animations = {};\n    Object.keys(host).forEach(function (key) {\n        var value = host[key];\n        var matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n            attributes[key] = value;\n        }\n        else if (matches[1 /* Binding */] != null) {\n            properties[matches[1 /* Binding */]] = value;\n        }\n        else if (matches[2 /* Event */] != null) {\n            listeners[matches[2 /* Event */]] = value;\n        }\n        else if (matches[3 /* Animation */] != null) {\n            animations[matches[3 /* Animation */]] = value;\n        }\n    });\n    return { attributes: attributes, listeners: listeners, properties: properties, animations: animations };\n}\nfunction compileStyles(styles, selector, hostSelector) {\n    var shadowCss = new ShadowCss();\n    return styles.map(function (style) { return shadowCss.shimCssText(style, selector, hostSelector); });\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ConstantPool } from './constant_pool';\nimport { compileInjectable } from './injectable_compiler_2';\nimport { LiteralExpr, WrappedNodeExpr } from './output/output_ast';\nimport { R3ResolvedDependencyType } from './render3/r3_factory';\nimport { jitExpression } from './render3/r3_jit';\nimport { compileInjector, compileNgModule } from './render3/r3_module_compiler';\nimport { compilePipeFromMetadata } from './render3/r3_pipe_compiler';\nimport { compileComponentFromMetadata, compileDirectiveFromMetadata, parseHostBindings } from './render3/view/compiler';\nimport { makeBindingParser, parseTemplate } from './render3/view/template';\nvar CompilerFacadeImpl = /** @class */ (function () {\n    function CompilerFacadeImpl() {\n        this.R3ResolvedDependencyType = R3ResolvedDependencyType;\n    }\n    CompilerFacadeImpl.prototype.compilePipe = function (angularCoreEnv, sourceMapUrl, facade) {\n        var res = compilePipeFromMetadata({\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            deps: convertR3DependencyMetadataArray(facade.deps),\n            pipeName: facade.pipeName,\n            pure: facade.pure,\n        });\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n    };\n    CompilerFacadeImpl.prototype.compileInjectable = function (angularCoreEnv, sourceMapUrl, facade) {\n        var _a = compileInjectable({\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            providedIn: computeProvidedIn(facade.providedIn),\n            useClass: wrapExpression(facade, USE_CLASS),\n            useFactory: wrapExpression(facade, USE_FACTORY),\n            useValue: wrapExpression(facade, USE_VALUE),\n            useExisting: wrapExpression(facade, USE_EXISTING),\n            ctorDeps: convertR3DependencyMetadataArray(facade.ctorDeps),\n            userDeps: convertR3DependencyMetadataArray(facade.userDeps) || undefined,\n        }), expression = _a.expression, statements = _a.statements;\n        return jitExpression(expression, angularCoreEnv, sourceMapUrl, statements);\n    };\n    CompilerFacadeImpl.prototype.compileInjector = function (angularCoreEnv, sourceMapUrl, facade) {\n        var meta = {\n            name: facade.name,\n            type: new WrappedNodeExpr(facade.type),\n            deps: convertR3DependencyMetadataArray(facade.deps),\n            providers: new WrappedNodeExpr(facade.providers),\n            imports: new WrappedNodeExpr(facade.imports),\n        };\n        var res = compileInjector(meta);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n    };\n    CompilerFacadeImpl.prototype.compileNgModule = function (angularCoreEnv, sourceMapUrl, facade) {\n        var meta = {\n            type: new WrappedNodeExpr(facade.type),\n            bootstrap: facade.bootstrap.map(wrapReference),\n            declarations: facade.declarations.map(wrapReference),\n            imports: facade.imports.map(wrapReference),\n            exports: facade.exports.map(wrapReference),\n            emitInline: true,\n        };\n        var res = compileNgModule(meta);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, []);\n    };\n    CompilerFacadeImpl.prototype.compileDirective = function (angularCoreEnv, sourceMapUrl, facade) {\n        var constantPool = new ConstantPool();\n        var bindingParser = makeBindingParser();\n        var meta = convertDirectiveFacadeToMetadata(facade);\n        var res = compileDirectiveFromMetadata(meta, constantPool, bindingParser);\n        var preStatements = constantPool.statements.concat(res.statements);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n    };\n    CompilerFacadeImpl.prototype.compileComponent = function (angularCoreEnv, sourceMapUrl, facade) {\n        // The ConstantPool is a requirement of the JIT'er.\n        var constantPool = new ConstantPool();\n        // Parse the template and check for errors.\n        var template = parseTemplate(facade.template, sourceMapUrl, {\n            preserveWhitespaces: facade.preserveWhitespaces || false,\n        }, '');\n        if (template.errors !== undefined) {\n            var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n            throw new Error(\"Errors during JIT compilation of template for \" + facade.name + \": \" + errors);\n        }\n        // Compile the component metadata, including template, into an expression.\n        // TODO(alxhub): implement inputs, outputs, queries, etc.\n        var res = compileComponentFromMetadata(tslib_1.__assign({}, facade, convertDirectiveFacadeToMetadata(facade), { template: template, viewQueries: facade.viewQueries.map(convertToR3QueryMetadata), wrapDirectivesAndPipesInClosure: false, styles: facade.styles || [], encapsulation: facade.encapsulation, animations: facade.animations != null ? new WrappedNodeExpr(facade.animations) : null, viewProviders: facade.viewProviders != null ? new WrappedNodeExpr(facade.viewProviders) :\n                null }), constantPool, makeBindingParser());\n        var preStatements = constantPool.statements.concat(res.statements);\n        return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n    };\n    return CompilerFacadeImpl;\n}());\nexport { CompilerFacadeImpl };\nvar USE_CLASS = Object.keys({ useClass: null })[0];\nvar USE_FACTORY = Object.keys({ useFactory: null })[0];\nvar USE_VALUE = Object.keys({ useValue: null })[0];\nvar USE_EXISTING = Object.keys({ useExisting: null })[0];\nvar wrapReference = function (value) {\n    var wrapped = new WrappedNodeExpr(value);\n    return { value: wrapped, type: wrapped };\n};\nfunction convertToR3QueryMetadata(facade) {\n    return tslib_1.__assign({}, facade, { predicate: Array.isArray(facade.predicate) ? facade.predicate :\n            new WrappedNodeExpr(facade.predicate), read: facade.read ? new WrappedNodeExpr(facade.read) : null });\n}\nfunction convertDirectiveFacadeToMetadata(facade) {\n    var inputsFromMetadata = parseInputOutputs(facade.inputs || []);\n    var outputsFromMetadata = parseInputOutputs(facade.outputs || []);\n    var propMetadata = facade.propMetadata;\n    var inputsFromType = {};\n    var outputsFromType = {};\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isInput(ann)) {\n                    inputsFromType[field] =\n                        ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (isOutput(ann)) {\n                    outputsFromType[field] = ann.bindingPropertyName || field;\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return tslib_1.__assign({}, facade, { typeSourceSpan: null, type: new WrappedNodeExpr(facade.type), deps: convertR3DependencyMetadataArray(facade.deps), host: extractHostBindings(facade.host, facade.propMetadata), inputs: tslib_1.__assign({}, inputsFromMetadata, inputsFromType), outputs: tslib_1.__assign({}, outputsFromMetadata, outputsFromType), providers: facade.providers != null ? new WrappedNodeExpr(facade.providers) : null });\n}\nfunction wrapExpression(obj, property) {\n    if (obj.hasOwnProperty(property)) {\n        return new WrappedNodeExpr(obj[property]);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new LiteralExpr(providedIn);\n    }\n    else {\n        return new WrappedNodeExpr(providedIn);\n    }\n}\nfunction convertR3DependencyMetadata(facade) {\n    var tokenExpr;\n    if (facade.token === null) {\n        tokenExpr = new LiteralExpr(null);\n    }\n    else if (facade.resolved === R3ResolvedDependencyType.Attribute) {\n        tokenExpr = new LiteralExpr(facade.token);\n    }\n    else {\n        tokenExpr = new WrappedNodeExpr(facade.token);\n    }\n    return {\n        token: tokenExpr,\n        resolved: facade.resolved,\n        host: facade.host,\n        optional: facade.optional,\n        self: facade.self,\n        skipSelf: facade.skipSelf\n    };\n}\nfunction convertR3DependencyMetadataArray(facades) {\n    return facades == null ? null : facades.map(convertR3DependencyMetadata);\n}\nfunction extractHostBindings(host, propMetadata) {\n    // First parse the declarations from the metadata.\n    var _a = parseHostBindings(host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n    if (Object.keys(animations).length > 0) {\n        throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n    }\n    var _loop_2 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isHostBinding(ann)) {\n                    properties[ann.hostPropertyName || field] = field;\n                }\n                else if (isHostListener(ann)) {\n                    listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                }\n            });\n        }\n    };\n    // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n    for (var field in propMetadata) {\n        _loop_2(field);\n    }\n    return { attributes: attributes, listeners: listeners, properties: properties };\n}\nfunction isHostBinding(value) {\n    return value.ngMetadataName === 'HostBinding';\n}\nfunction isHostListener(value) {\n    return value.ngMetadataName === 'HostListener';\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\nfunction parseInputOutputs(values) {\n    return values.reduce(function (map, value) {\n        var _a = value.split(',').map(function (piece) { return piece.trim(); }), field = _a[0], property = _a[1];\n        map[field] = property || field;\n        return map;\n    }, {});\n}\nexport function publishFacade(global) {\n    var ng = global.ng || (global.ng = {});\n    ng.ɵcompilerFacade = new CompilerFacadeImpl();\n}\n//# sourceMappingURL=jit_compiler_facade.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar _a;\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\nexport { TextAst };\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\nexport { BoundTextAst };\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\nexport { AttrAst };\nvar BoundPropertyMapping = (_a = {},\n    _a[4 /* Animation */] = 4 /* Animation */,\n    _a[1 /* Attribute */] = 1 /* Attribute */,\n    _a[2 /* Class */] = 2 /* Class */,\n    _a[0 /* Property */] = 0 /* Property */,\n    _a[3 /* Style */] = 3 /* Style */,\n    _a);\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === 4 /* Animation */;\n    }\n    BoundElementPropertyAst.fromBoundProperty = function (prop) {\n        var type = BoundPropertyMapping[prop.type];\n        return new BoundElementPropertyAst(prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n    };\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\nexport { BoundElementPropertyAst };\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        return name;\n    };\n    BoundEventAst.fromParsedEvent = function (event) {\n        var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n        var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n        return new BoundEventAst(event.name, target, phase, event.handler, event.sourceSpan);\n    };\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\nexport { BoundEventAst };\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\nexport { ReferenceAst };\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    VariableAst.fromParsedVariable = function (v) {\n        return new VariableAst(v.name, v.value, v.sourceSpan);\n    };\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\nexport { VariableAst };\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\nexport { ElementAst };\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\nexport { EmbeddedTemplateAst };\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\nexport { BoundDirectivePropertyAst };\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\nexport { DirectiveAst };\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nexport { ProviderAst };\nexport var ProviderAstType;\n(function (ProviderAstType) {\n    ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n    ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n    ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n    ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n    ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n})(ProviderAstType || (ProviderAstType = {}));\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nexport { NgContentAst };\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\nexport { NullTemplateVisitor };\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var results = [];\n        var t = this;\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\nexport { RecursiveTemplateAstVisitor };\n/**\n * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n */\nexport function templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var result = [];\n    var visit = visitor.visit ?\n        function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n//# sourceMappingURL=template_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from './core';\nimport { noUndefined } from './util';\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\nexport { CompilerConfig };\nexport function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = false; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n//# sourceMappingURL=config.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl } from './compile_metadata';\nimport { preserveWhitespacesDefault } from './config';\nimport { ViewEncapsulation } from './core';\nimport * as html from './ml_parser/ast';\nimport { InterpolationConfig } from './ml_parser/interpolation_config';\nimport { extractStyleUrls, isStyleUrlResolvable } from './style_url_resolver';\nimport { PreparsedElementType, preparseElement } from './template_parser/template_preparser';\nimport { SyncAsync, isDefined, stringify, syntaxError } from './util';\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var template = normalizedDirective.template;\n        this._resourceLoaderCache.delete(template.templateUrl);\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n    };\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    DirectiveNormalizer.prototype._preParseTemplate = function (prenomData) {\n        var _this = this;\n        var template;\n        var templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var isInline = !!prenormData.template;\n        var interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n        var rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var visitor = new TemplatePreparseVisitor();\n        html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) { return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets); });\n    };\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = function (prenormData, preparsedTemplate, stylesheets) {\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets with all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resource loading may be async)\n        var _this = this;\n        var styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var styleUrls = preparsedTemplate.styleUrls;\n        var externalStylesheets = styleUrls.map(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            var styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    DirectiveNormalizer.prototype._inlineStyles = function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var stylesheet = stylesheets.get(styleUrl);\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return loadedStylesheets; });\n    };\n    DirectiveNormalizer.prototype._normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var moduleUrl = stylesheet.moduleUrl;\n        var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var allStyles = stylesheet.styles.map(function (style) {\n            var styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nexport { DirectiveNormalizer };\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof html.Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        html.visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { html.visitAll(this, ast.cases); };\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        html.visitAll(this, ast.expression);\n    };\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n//# sourceMappingURL=directive_normalizer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { createComponent, createContentChild, createContentChildren, createDirective, createHostBinding, createHostListener, createInput, createOutput, createViewChild, createViewChildren } from './core';\nimport { resolveForwardRef, splitAtColon, stringify } from './util';\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\n/*\n * Resolve a `Type` for {@link Directive}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var propertyMetadata = this._reflector.propMetadata(type);\n                var guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, guards, directiveType) {\n        var inputs = [];\n        var outputs = [];\n        var host = {};\n        var queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var names = new Set();\n        var publicNames = new Set();\n        var reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var i = bindings.length - 1; i >= 0; i--) {\n            var binding = bindings[i];\n            var name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var mergedHost = directive.host ? tslib_1.__assign({}, directive.host, host) : host;\n        var mergedQueries = directive.queries ? tslib_1.__assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var comp = directive;\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nexport { DirectiveResolver };\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\nexport function findLast(arr, condition) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=directive_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { utf8Encode } from '../util';\nexport function digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\nexport function decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var visitor = new _SerializerIgnoreIcuExpVisitor();\n    var parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\nexport function serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nexport function sha1(str) {\n    var _a, _b;\n    var utf8 = utf8Encode(str);\n    var words32 = stringToWords32(utf8, Endian.Big);\n    var len = utf8.length * 8;\n    var w = new Array(80);\n    var _c = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _c[0], b = _c[1], c = _c[2], d = _c[3], e = _c[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var i = 0; i < words32.length; i += 16) {\n        var _d = [a, b, c, d, e], h0 = _d[0], h1 = _d[1], h2 = _d[2], h3 = _d[3], h4 = _d[4];\n        for (var j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _e = fk(j, b, c, d), f = _e[0], k = _e[1];\n            var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _a = [d, c, rol32(b, 30), a, temp], e = _a[0], d = _a[1], c = _a[2], b = _a[3], a = _a[4];\n        }\n        _b = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _b[0], b = _b[1], c = _b[2], d = _b[3], e = _b[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nexport function fingerprint(str) {\n    var utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nexport function computeMsgId(msg, meaning) {\n    var _a;\n    var _b = fingerprint(msg), hi = _b[0], lo = _b[1];\n    if (meaning) {\n        var _c = fingerprint(meaning), him = _c[0], lom = _c[1];\n        _a = add64(rol64([hi, lo], 1), [him, lom]), hi = _a[0], lo = _a[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\nfunction hash32(str, c) {\n    var _a;\n    var _b = [0x9e3779b9, 0x9e3779b9], a = _b[0], b = _b[1];\n    var i;\n    var len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _a = mix([a, b, c]), a = _a[0], b = _a[1], c = _a[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n}\n// clang-format off\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    var low = (a & 0xffff) + (b & 0xffff);\n    var high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\nfunction sub32(a, b) {\n    var low = (a & 0xffff) - (b & 0xffff);\n    var high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var h = (hi << count) | (lo >>> (32 - count));\n    var l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction stringToWords32(str, endian) {\n    var words32 = Array((str.length + 3) >>> 2);\n    for (var i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\nfunction wordAt(str, index, endian) {\n    var word = 0;\n    if (endian === Endian.Big) {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\nfunction word32ToByteString(word) {\n    var str = '';\n    for (var i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\nfunction byteStringToHexString(str) {\n    var hex = '';\n    for (var i = 0; i < str.length; i++) {\n        var b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n// based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\nfunction byteStringToDecString(str) {\n    var decimal = '';\n    var toThePower = '1';\n    for (var i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n// x and y decimal, lowest significant digit first\nfunction addBigInt(x, y) {\n    var sum = '';\n    var len = Math.max(x.length, y.length);\n    for (var i = 0, carry = 0; i < len || carry; i++) {\n        var tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\nfunction numberTimesBigInt(num, b) {\n    var product = '';\n    var bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n//# sourceMappingURL=digest.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nexport { Message };\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nexport { Text };\n// TODO(vicb): do we really need this node (vs an array) ?\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nexport { Container };\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nexport { Icu };\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nexport { TagPlaceholder };\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nexport { Placeholder };\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nexport { IcuPlaceholder };\n// Clone the AST\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nexport { CloneVisitor };\n// Visit all the nodes recursively\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    return RecurseVisitor;\n}());\nexport { RecurseVisitor };\n//# sourceMappingURL=i18n_ast.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        // Count the occurrence of the base name top generate a unique name\n        this._placeHolderNameCounts = {};\n        // Maps signature to placeholder names\n        this._signatureToName = {};\n    }\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var upperTag = tag.toUpperCase();\n        var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var upperName = name.toUpperCase();\n        var signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    // Generate a hash for a tag - does not take attribute order into account\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var start = \"<\" + tag;\n        var strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\nexport { PlaceholderRegistry };\n//# sourceMappingURL=placeholder.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Lexer as ExpressionLexer } from '../expression_parser/lexer';\nimport { Parser as ExpressionParser } from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport { getHtmlTagDefinition } from '../ml_parser/html_tags';\nimport * as i18n from './i18n_ast';\nimport { PlaceholderRegistry } from './serializers/placeholder';\nvar _expParser = new ExpressionParser(new ExpressionLexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n */\nexport function createI18nMessageFactory(interpolationConfig) {\n    var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var i18nodes = html.visitAll(this, nodes, {});\n        return new i18n.Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var children = html.visitAll(this, el.children);\n        var attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n        var closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new i18n.TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, text.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var i18nIcuCases = {};\n        var i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new i18n.Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new i18n.Text(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var nodes = [];\n        var container = new i18n.Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var expression = splitInterpolation.expressions[i];\n            var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n//# sourceMappingURL=i18n_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError } from '../parse_util';\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    tslib_1.__extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\nexport { I18nError };\n//# sourceMappingURL=parse_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport * as i18n from './i18n_ast';\nimport { createI18nMessageFactory } from './i18n_parser';\nimport { I18nError } from './parse_util';\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n */\nexport function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\nexport function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nexport { ExtractionResult };\nvar _VisitorMode;\n(function (_VisitorMode) {\n    _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n    _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n})(_VisitorMode || (_VisitorMode = {}));\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * @internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var wrapper = new html.Element('wrapper', [], nodes, undefined, undefined, undefined);\n        var translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var expression = html.visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new html.ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var cases = html.visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new html.Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && console && console.warn) {\n                        i18nCommentsWarned = true;\n                        var details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc =\n                        comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                        // merge attributes in sections\n                        var nodes = this._translateMessage(comment, message);\n                        return html.visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var wasInI18nNode = this._inI18nNode;\n        var wasInImplicitNode = this._inImplicitNode;\n        var childNodes = [];\n        var translatedChildNodes = undefined;\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var i18nAttr = _getI18nAttr(el);\n        var i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var message = this._addMessage(el.children, i18nMeta);\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                html.visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                html.visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var translatedAttrs = this._translateAttributes(el);\n            return new html.Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    // looks for translatable attributes\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var explicitAttrNameToValue = {};\n        var implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    // add a translatable message\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof html.Attribute && !ast[0].value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    // Translates the given message given the `TranslationBundle`\n    // This is used for translating elements / blocks - see `_translateAttributes` for attributes\n    // no-op when called in extraction mode (returns [])\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    // translate the attributes of an element and remove i18n specific attributes\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var attributes = el.attrs;\n        var i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var message = _this._createI18nMessage([attr], meaning, description, id);\n                var nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof html.Text) {\n                        var value = nodes[0].value;\n                        translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var startIndex = this._msgCountAtSectionStart;\n        var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof html.Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                var ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(node.sourceSpan, msg));\n    };\n    return _Visitor;\n}());\nfunction _isOpeningComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\nfunction _isClosingComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var idIndex = i18n.indexOf(ID_SEPARATOR);\n    var descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n//# sourceMappingURL=extractor_merger.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nexport { XmlTagDefinition };\nvar _TAG_DEFINITION = new XmlTagDefinition();\nexport function getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n//# sourceMappingURL=xml_tags.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Parser } from './parser';\nimport { getXmlTagDefinition } from './xml_tags';\nexport { ParseTreeResult, TreeError } from './parser';\nvar XmlParser = /** @class */ (function (_super) {\n    tslib_1.__extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser));\nexport { XmlParser };\n//# sourceMappingURL=xml_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as i18n from '../i18n_ast';\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\nexport { Serializer };\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    tslib_1.__extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    // XMB placeholders could only contains A-Z, 0-9 and _\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(i18n.RecurseVisitor));\nexport { SimplePlaceholderMapper };\n//# sourceMappingURL=serializer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nvar _Visitor = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        var strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    _Visitor.prototype.visitText = function (text) { return text.value; };\n    _Visitor.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    _Visitor.prototype._serializeAttributes = function (attrs) {\n        var strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    _Visitor.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor();\nexport function serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nexport { Declaration };\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nexport { Doctype };\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n        });\n    }\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nexport { Tag };\nvar Text = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = escapeXml(unescapedValue);\n    }\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nexport { Text };\nvar CR = /** @class */ (function (_super) {\n    tslib_1.__extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text));\nexport { CR };\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n// Escape `_ESCAPED_CHARS` characters in the given text with encoded entities\nexport function escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n//# sourceMappingURL=xml_helper.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { digest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\n// http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n// http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\nvar Xliff = /** @class */ (function (_super) {\n    tslib_1.__extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor();\n        var transUnits = [];\n        messages.forEach(function (message) {\n            var _a;\n            var contextTags = [];\n            message.sources.forEach(function (source) {\n                var contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new xml.Text(source.filePath)]), new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new xml.Text(\"\" + source.startLine)]), new xml.CR(8));\n                contextTags.push(new xml.CR(8), contextGroupTag);\n            });\n            var transUnit = new xml.Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'description' }, [new xml.Text(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'meaning' }, [new xml.Text(message.meaning)]));\n            }\n            transUnit.children.push(new xml.CR(6));\n            transUnits.push(new xml.CR(6), transUnit);\n        });\n        var body = new xml.Tag('body', {}, transUnits.concat([new xml.CR(4)]));\n        var file = new xml.Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new xml.CR(4), body, new xml.CR(2)]);\n        var xliff = new xml.Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    };\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nexport { Xliff };\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\n// TODO(vicb): add error management (structure)\n// Extract messages as xml nodes from the xliff file\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                ml.visitAll(this, element.children, null);\n        }\n    };\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    XliffParser.prototype.visitText = function (text, context) { };\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XliffParser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], ml.visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n//# sourceMappingURL=xliff.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { decimalDigest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nvar _VERSION = '2.0';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'unit';\n// http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\nvar Xliff2 = /** @class */ (function (_super) {\n    tslib_1.__extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xliff2.prototype.write = function (messages, locale) {\n        var visitor = new _WriteVisitor();\n        var units = [];\n        messages.forEach(function (message) {\n            var unit = new xml.Tag(_UNIT_TAG, { id: message.id });\n            var notes = new xml.Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'description' }, [new xml.Text(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'meaning' }, [new xml.Text(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'location' }, [\n                    new xml.Text(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new xml.CR(6));\n            unit.children.push(new xml.CR(6), notes);\n            var segment = new xml.Tag('segment');\n            segment.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new xml.CR(6));\n            unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n            units.push(new xml.CR(4), unit);\n        });\n        var file = new xml.Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new xml.CR(2)]));\n        var xliff = new xml.Tag(_XLIFF_TAG, { version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    };\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nexport { Xliff2 };\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new xml.Text(''));\n        }\n        return [tagPc];\n    };\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\n// Extract messages as xml nodes from the xliff file\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var innerTextStart = element.startSourceSpan.end.offset;\n                var innerTextEnd = element.endSourceSpan.start.offset;\n                var content = element.startSourceSpan.start.file.content;\n                var innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                ml.visitAll(this, element.children, null);\n        }\n    };\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\n// Convert ml nodes (xliff syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG:\n                var nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var startId = startAttr.value;\n                    var endId = endAttr.value;\n                    var nodes = [];\n                    return nodes.concat.apply(nodes, [new i18n.Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new i18n.Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG:\n                return [].concat.apply([], ml.visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], ml.visitAll(this, icuCase.expression)),\n        };\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n//# sourceMappingURL=xliff2.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { decimalDigest } from '../digest';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport * as xml from './xml_helper';\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG = 'ph';\nvar _EXAMPLE_TAG = 'ex';\nvar _SOURCE_TAG = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    tslib_1.__extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xmb.prototype.write = function (messages, locale) {\n        var exampleVisitor = new ExampleVisitor();\n        var visitor = new _Visitor();\n        var rootNode = new xml.Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n                    new xml.Text(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new xml.CR(2), new xml.Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new xml.CR());\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new xml.CR(),\n            new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new xml.CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new xml.CR(),\n        ]);\n    };\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    Xmb.prototype.digest = function (message) { return digest(message); };\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nexport { Xmb };\nvar _Visitor = /** @class */ (function () {\n    function _Visitor() {\n    }\n    _Visitor.prototype.visitText = function (text, context) { return [new xml.Text(text.value)]; };\n    _Visitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    _Visitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var nodes = [new xml.Text(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new xml.Text(c + \" {\")].concat(icu.cases[c].visit(_this), [new xml.Text(\"} \")]));\n        });\n        nodes.push(new xml.Text(\"}\"));\n        return nodes;\n    };\n    _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var startTagAsText = new xml.Text(\"<\" + ph.tag + \">\");\n        var startEx = new xml.Tag(_EXAMPLE_TAG, {}, [startTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx, startTagAsText]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var closeTagAsText = new xml.Text(\"</\" + ph.tag + \">\");\n        var closeEx = new xml.Tag(_EXAMPLE_TAG, {}, [closeTagAsText]);\n        // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n        var closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx, closeTagAsText]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    _Visitor.prototype.visitPlaceholder = function (ph, context) {\n        var interpolationAsText = new xml.Text(\"{{\" + ph.value + \"}}\");\n        // Example tag needs to be not-empty for TC.\n        var exTag = new xml.Tag(_EXAMPLE_TAG, {}, [interpolationAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, interpolationAsText])\n        ];\n    };\n    _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var icuExpression = ph.value.expression;\n        var icuType = ph.value.type;\n        var icuCases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var icuAsText = new xml.Text(\"{\" + icuExpression + \", \" + icuType + \", \" + icuCases + \"}\");\n        var exTag = new xml.Tag(_EXAMPLE_TAG, {}, [icuAsText]);\n        return [\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, icuAsText])\n        ];\n    };\n    _Visitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\nexport function digest(message) {\n    return decimalDigest(message);\n}\n// TC requires at least one non-empty example on placeholders\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG) {\n            if (!tag.children || tag.children.length == 0) {\n                var exText = new xml.Text(tag.attrs['name'] || '...');\n                tag.children = [new xml.Tag(_EXAMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    ExampleVisitor.prototype.visitText = function (text) { };\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n// XMB/XTB placeholders can only contain A-Z, 0-9 and _\nexport function toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n//# sourceMappingURL=xmb.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport { digest, toPublicName } from './xmb';\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    tslib_1.__extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var i18nNodesByMsgId = {};\n        var converter = new XmlToI18n();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    Xtb.prototype.digest = function (message) { return digest(message); };\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\nexport { Xtb };\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\n// Extract messages as xml nodes from the xtb file\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var innerTextStart = element.startSourceSpan.end.offset;\n                        var innerTextEnd = element.endSourceSpan.start.offset;\n                        var content = element.startSourceSpan.start.file.content;\n                        var innerText = content.slice(innerTextStart, innerTextEnd);\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    XtbParser.prototype.visitText = function (text, context) { };\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XtbParser;\n}());\n// Convert ml nodes (xtb syntax) to i18n nodes\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    XmlToI18n.prototype.convert = function (message, url) {\n        var xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            ml.visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    XmlToI18n.prototype.visitText = function (text, context) { return new i18n.Text(text.value, text.sourceSpan); };\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    };\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, el.sourceSpan);\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n//# sourceMappingURL=xtb.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { I18nError } from './parse_util';\nimport { escapeXml } from './serializers/xml_helper';\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var digestFn = function (m) { return serializer.digest(m); };\n        var mapperFactory = function (m) { return serializer.createNameMapper(m); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nexport { TranslationBundle };\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var text = this._convertToText(srcMsg);\n        // text to html\n        var url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) {\n        // `convert()` uses an `HtmlParser` to return `html.Node`s\n        // we should then make sure that any special characters are escaped\n        return escapeXml(text.value);\n    };\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var tag = \"\" + ph.tag;\n        var attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var id = this._digest(srcMsg);\n        var mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var context = this._contextStack.pop();\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n//# sourceMappingURL=translation_bundle.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '../core';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport { digest } from './digest';\nimport { mergeTranslations } from './extractor_merger';\nimport { Xliff } from './serializers/xliff';\nimport { Xliff2 } from './serializers/xliff2';\nimport { Xmb } from './serializers/xmb';\nimport { Xtb } from './serializers/xtb';\nimport { TranslationBundle } from './translation_bundle';\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\nexport { I18NHtmlParser };\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n//# sourceMappingURL=i18n_html_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { visitValue } from '../util';\nimport * as o from './output_ast';\nexport var QUOTED_KEYS = '$quoted$';\nexport function convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return o.literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var entries = [];\n        var quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new o.LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new o.LiteralMapExpr(entries, type);\n    };\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return o.literal(value, type); };\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof o.Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n//# sourceMappingURL=value_util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { convertValueToOutputAst } from './output/value_util';\nfunction mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector, alwaysGenerateDef) {\n        this.reflector = reflector;\n        this.alwaysGenerateDef = alwaysGenerateDef;\n        this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n    }\n    InjectableCompiler.prototype.depsArray = function (deps, ctx) {\n        var _this = this;\n        return deps.map(function (dep) {\n            var token = dep;\n            var args = [token];\n            var flags = 0 /* Default */;\n            if (Array.isArray(dep)) {\n                for (var i = 0; i < dep.length; i++) {\n                    var v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            flags |= 8 /* Optional */;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 4 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            var tokenExpr;\n            if (typeof token === 'string') {\n                tokenExpr = o.literal(token);\n            }\n            else if (token === _this.tokenInjector) {\n                tokenExpr = o.importExpr(Identifiers.INJECTOR);\n            }\n            else {\n                tokenExpr = ctx.importExpr(token);\n            }\n            if (flags !== 0 /* Default */) {\n                args = [tokenExpr, o.literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return o.importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    InjectableCompiler.prototype.factoryFor = function (injectable, ctx) {\n        var retValue;\n        if (injectable.useExisting) {\n            retValue = o.importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var clazz = injectable.useClass || injectable.symbol;\n            var depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new o.InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return o.fn([], [new o.ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    InjectableCompiler.prototype.injectableDef = function (injectable, ctx) {\n        var providedIn = o.NULL_EXPR;\n        if (injectable.providedIn !== undefined) {\n            if (injectable.providedIn === null) {\n                providedIn = o.NULL_EXPR;\n            }\n            else if (typeof injectable.providedIn === 'string') {\n                providedIn = o.literal(injectable.providedIn);\n            }\n            else {\n                providedIn = ctx.importExpr(injectable.providedIn);\n            }\n        }\n        var def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('providedIn', providedIn),\n        ];\n        return o.importExpr(Identifiers.defineInjectable).callFn([o.literalMap(def)]);\n    };\n    InjectableCompiler.prototype.compile = function (injectable, ctx) {\n        if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n            var className = identifierName(injectable.type);\n            var clazz = new o.ClassStmt(className, null, [\n                new o.ClassField('ngInjectableDef', o.INFERRED_TYPE, [o.StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new o.ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\nexport { InjectableCompiler };\n//# sourceMappingURL=injectable_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\nexport function ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\nexport function stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\nexport function isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\nexport function splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\nexport function normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\nexport function summaryFileName(fileName) {\n    var fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\nexport function summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\nexport function stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\nexport function summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\nexport function stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\nexport function isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\nexport function createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { StaticSymbol } from './aot/static_symbol';\nimport { ngfactoryFilePath } from './aot/util';\nimport { assertArrayOfStrings, assertInterpolationSymbols } from './assertions';\nimport * as cpl from './compile_metadata';\nimport { ChangeDetectionStrategy, Type, ViewEncapsulation, createAttribute, createComponent, createHost, createInject, createInjectable, createInjectionToken, createNgModule, createOptional, createSelf, createSkipSelf } from './core';\nimport { findLast } from './directive_resolver';\nimport { Identifiers } from './identifiers';\nimport { getAllLifecycleHooks } from './lifecycle_reflector';\nimport { CssSelector } from './selector';\nimport { SyncAsync, ValueTransformer, isPromise, noUndefined, resolveForwardRef, stringify, syntaxError, visitValue } from './util';\nexport var ERROR_COMPONENT_TYPE = 'ngComponentType';\n// Design notes:\n// - don't lazily create metadata:\n//   For some metadata, we need to do async work sometimes,\n//   so the user has to kick off this loading.\n//   But we want to report errors even when the async work is\n//   not required to check that the user would have been able\n//   to wait correctly.\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n        this._shallowModuleCache = new Map();\n    }\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var delegate = null;\n        var proxyClass = function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        };\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            proxyClass.prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        proxyClass.overriddenName = name;\n        return proxyClass;\n    };\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n    };\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n    };\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var name = cpl.identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        return this._createProxyClass(dirType, name);\n    };\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return {};\n        }\n    };\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n        }\n        else {\n            var hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, hostView, inputs, outputs, []);\n        }\n    };\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        var _a;\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n    };\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    CompileMetadataResolver.prototype.getHostComponentMetadata = function (compMeta, hostViewType) {\n        var hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n        var templateUrl = '';\n        var htmlAst = this._htmlParser.parse(template, templateUrl);\n        return cpl.CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new cpl.CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: { id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} },\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n        var createDirectiveMetadata = function (templateMetadata) {\n            var normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(metadata.componentFactory, templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var template = metadata.template;\n            var templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var nonNormalizedTemplateMetadata = undefined;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var compMeta = dirMeta;\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var changeDetectionStrategy = null;\n        var viewProviders = [];\n        var entryComponentMetadata = [];\n        var selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var compMeta = dirMeta;\n            changeDetectionStrategy = compMeta.changeDetection;\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var queries = [];\n        var viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var metadata = cpl.CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var dirMeta = this._directiveCache.get(directiveType);\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var dirSummary = this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var moduleSummary = this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule);\n        if (!moduleSummary) {\n            var moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    CompileMetadataResolver.prototype.getShallowModuleMetadata = function (moduleType) {\n        var compileMeta = this._shallowModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var ngModuleMeta = findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n        compileMeta = {\n            type: this._getTypeMetadata(moduleType),\n            rawExports: ngModuleMeta.exports,\n            rawImports: ngModuleMeta.imports,\n            rawProviders: ngModuleMeta.providers,\n        };\n        this._shallowModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var declaredDirectives = [];\n        var exportedNonModuleIdentifiers = [];\n        var declaredPipes = [];\n        var importedModules = [];\n        var exportedModules = [];\n        var providers = [];\n        var entryComponents = [];\n        var bootstrapComponents = [];\n        var schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var importedModuleType = undefined;\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var exportedDirectives = [];\n        var exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return _this._getEntryComponentMetadata(type); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new cpl.CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if (type.provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var result = new cpl.TransitiveCompileNgModuleMetadata();\n        var modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var tokenRef = cpl.tokenReference(entry.provider.token);\n                var prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: cpl.CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    CompileMetadataResolver.prototype.getInjectableMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        var typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            providedIn: meta.providedIn,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var pipeSummary = this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe);\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n        var pipeMeta = new cpl.CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var hasUnknownDeps = false;\n        var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var dependenciesMetadata = params.map(function (param) {\n            var isAttribute = false;\n            var isHost = false;\n            var isSelf = false;\n            var isSkipSelf = false;\n            var isOptional = false;\n            var token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return null;\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = resolveForwardRef(token);\n        var compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var providerMeta = undefined;\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new cpl.ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var components = [];\n        var collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n        }\n        var dirSummary = this._loadSummary(dirType, cpl.CompileSummaryKind.Directive);\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var compileDeps = undefined;\n        var compileTypeMetadata = null;\n        var compileFactoryMetadata = null;\n        var token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : null\n        };\n    };\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nexport { CompileMetadataResolver };\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var i = 0; i < tree.length; i++) {\n            var item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    tslib_1.__extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n */\nfunction componentStillLoadingError(compType) {\n    var error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    error[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n//# sourceMappingURL=metadata_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { tokenName, tokenReference } from './compile_metadata';\nimport { Identifiers, createTokenForExternalReference } from './identifiers';\nimport { ParseError } from './parse_util';\nimport { ProviderAst, ProviderAstType } from './template_parser/template_ast';\nvar ProviderError = /** @class */ (function (_super) {\n    tslib_1.__extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nexport { ProviderError };\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nexport { ProviderViewContext };\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var lazyProviders = [];\n            var eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: function () {\n            var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: function () {\n            var allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var queryValue = query.meta.read || defaultValue;\n            var tokenRef = tokenReference(queryValue);\n            var queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var result = [];\n        var currentEl = this;\n        var distance = 0;\n        var queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var attrValue = this._attrs[dep.token.value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this.transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var currElement = this;\n        var currEager = eager;\n        var result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                    this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nexport { ProviderElementContext };\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, \n        /* isModule */ false);\n    }\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var lazyProviders = [];\n        var eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var transformedUseValue = provider.useValue;\n            var transformedUseExisting = provider.useExisting;\n            var transformedDeps = undefined;\n            if (provider.useExisting != null) {\n                var existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = null;\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\nexport { NgModuleProviderAnalyzer };\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n    });\n    return providersByToken;\n}\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var lifecycleHooks = provider.token.identifier &&\n                provider.token.identifier.lifecycleHooks ?\n                provider.token.identifier.lifecycleHooks :\n                [];\n            var isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var viewQueryId = 1;\n    var viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var contentQueryId = contentQueryStartId;\n    var contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n//# sourceMappingURL=provider_analyzer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ProviderAstType } from '../template_parser/template_ast';\nexport function providerDef(ctx, providerAst) {\n    var flags = 0 /* None */;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\nfunction multiProviderDef(ctx, flags, providers) {\n    var allDepDefs = [];\n    var allParams = [];\n    var exprs = providers.map(function (provider, providerIndex) {\n        var expr;\n        if (provider.useClass) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: o.literalArr(allDepDefs)\n    };\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return o.variable(paramName);\n        });\n    }\n}\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var providerExpr;\n    var deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = o.NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var depsExpr = o.literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        o.literal(tokenMeta.value);\n}\nexport function depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, dep.token);\n    var flags = 0 /* None */;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : o.literalArr([o.literal(flags), expr]);\n}\nexport function lifecycleHookToNodeFlag(lifecycleHook) {\n    var nodeFlag = 0 /* None */;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\nexport function componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var classMeta = {\n        diDeps: [\n            { isValue: true, value: o.literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n//# sourceMappingURL=provider_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { Identifiers } from './identifiers';\nimport * as o from './output/output_ast';\nimport { typeSourceSpan } from './parse_util';\nimport { NgModuleProviderAnalyzer } from './provider_analyzer';\nimport { componentFactoryResolverProviderDef, providerDef } from './view_compiler/provider_compiler';\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nexport { NgModuleCompileResult };\nvar LOG_VAR = o.variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n        var ngModuleDefFactory = o.fn([new o.FnParam(LOG_VAR.name)], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n        var ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            o.literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var id = typeof ngModuleMeta.id === 'string' ? o.literal(ngModuleMeta.id) :\n                ctx.importExpr(ngModuleMeta.id);\n            var registerFactoryStmt = o.importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([id, o.variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n    };\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var ngModuleFactoryStmt = o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(o.importType(Identifiers.NgModuleFactory, [o.expressionType(ctx.importExpr(reference))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nexport { NgModuleCompiler };\n//# sourceMappingURL=ng_module_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createNgModule } from './core';\nimport { findLast } from './directive_resolver';\nimport { stringify } from './util';\n/**\n * Resolves types to {@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nexport { NgModuleResolver };\n//# sourceMappingURL=ng_module_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext } from './abstract_emitter';\nimport * as o from './output_ast';\nvar _debugFilePath = '/debug/lib';\nexport function debugOutputAstAsTypeScript(ast) {\n    var converter = new _TsEmitterVisitor();\n    var ctx = EmitterVisitorContext.createRoot();\n    var asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof o.Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof o.Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof o.Type) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    TypeScriptEmitter.prototype.emitStatements = function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nexport { TypeScriptEmitter };\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    tslib_1.__extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var value = ast.value;\n        if (value == null && ast.type != o.INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: name_1, as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(o.StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        if (stmt.value) {\n            ctx.print(stmt, \" = \");\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n    };\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\");\n        ast.type.visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(o.StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(o.StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR.name + \") {\");\n        ctx.incIndent();\n        var catchStmts = [CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ])].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitBuiltinType = function (type, ctx) {\n        var typeStr;\n        switch (type.name) {\n            case o.BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case o.BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case o.BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case o.BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            case o.BuiltinTypeName.None:\n                typeStr = 'never';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        var _this = this;\n        ast.value.visitExpression(this, ctx);\n        if (ast.typeParams !== null) {\n            ctx.print(null, '<');\n            this.visitAllObjects(function (type) { return _this.visitType(type, ctx); }, ast.typeParams, ctx, ',');\n            ctx.print(null, '>');\n        }\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, name);\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== o.INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n//# sourceMappingURL=ts_emitter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { createPipe } from './core';\nimport { findLast } from './directive_resolver';\nimport { resolveForwardRef, stringify } from './util';\n/**\n * Resolve a `Type` for {@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    PipeResolver.prototype.isPipe = function (type) {\n        var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nexport { PipeResolver };\n//# sourceMappingURL=pipe_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ParseError } from '../parse_util';\nimport * as html from './ast';\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n */\nexport function expandNodes(nodes) {\n    var expander = new _Expander();\n    return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nexport { ExpansionResult };\nvar ExpansionError = /** @class */ (function (_super) {\n    tslib_1.__extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\nexport { ExpansionError };\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * @internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    _Expander.prototype.visitElement = function (element, context) {\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n// Plural forms are expanded to `NgPlural` and `NgPluralCase`s\nfunction _expandPluralForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new html.Element(\"ng-template\", [new html.Attribute('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n// ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s\nfunction _expandDefaultForm(ast, errors) {\n    var children = ast.cases.map(function (c) {\n        var expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new html.Element(\"ng-template\", [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new html.Element(\"ng-template\", [new html.Attribute('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n//# sourceMappingURL=icu_ast_expander.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { identifierName } from '../compile_metadata';\nimport { ASTWithSource, EmptyExpr } from '../expression_parser/ast';\nimport { Identifiers, createTokenForExternalReference, createTokenForReference } from '../identifiers';\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/html_parser';\nimport { removeWhitespaces, replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { expandNodes } from '../ml_parser/icu_ast_expander';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { isNgTemplate, splitNsName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { ProviderElementContext, ProviderViewContext } from '../provider_analyzer';\nimport { CssSelector, SelectorMatcher } from '../selector';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { syntaxError } from '../util';\nimport { BindingParser } from './binding_parser';\nimport * as t from './template_ast';\nimport { PreparsedElementType, preparseElement } from './template_preparser';\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar _TEXT_CSS_SELECTOR;\nfunction TEXT_CSS_SELECTOR() {\n    if (!_TEXT_CSS_SELECTOR) {\n        _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n    }\n    return _TEXT_CSS_SELECTOR;\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nexport { TemplateParseError };\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nexport { TemplateParseResult };\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    Object.defineProperty(TemplateParser.prototype, \"expressionParser\", {\n        get: function () { return this._exprParser; },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var warnings = result.errors.filter(function (error) { return error.level === ParseErrorLevel.WARNING; });\n        var errors = result.errors.filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: result.templateAst, pipes: result.usedPipes };\n    };\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var htmlParseResult = typeof template === 'string' ?\n            this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var result;\n        var errors = htmlAstWithErrors.errors;\n        var usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var uniqDirectives = removeSummaryDuplicates(directives);\n            var uniqPipes = removeSummaryDuplicates(pipes);\n            var providerViewContext = new ProviderViewContext(this._reflector, component);\n            var interpolationConfig = undefined;\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n            var parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = t.templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var existingReferences = [];\n        result.filter(function (element) { return !!element.references; })\n            .forEach(function (element) { return element.references.forEach(function (reference) {\n            var name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nexport { TemplateParser };\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        var valueNoNgsp = replaceNgsp(text.value);\n        var expr = this._bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n        return expr ? new t.BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n            new t.TextAst(valueNoNgsp, ngContentIndex, text.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var queryStartIndex = this.contentQueryStartId;\n        var elName = element.name;\n        var preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var matchableAttrs = [];\n        var elementOrDirectiveProps = [];\n        var elementOrDirectiveRefs = [];\n        var elementVars = [];\n        var events = [];\n        var templateElementOrDirectiveProps = [];\n        var templateMatchableAttrs = [];\n        var templateElementVars = [];\n        var hasInlineTemplates = false;\n        var attrs = [];\n        var isTemplateElement = isNgTemplate(element.name);\n        element.attrs.forEach(function (attr) {\n            var parsedVariables = [];\n            var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            elementVars.push.apply(elementVars, parsedVariables.map(function (v) { return t.VariableAst.fromParsedVariable(v); }));\n            var templateValue;\n            var templateKey;\n            var normalizedName = _this._normalizeAttributeName(attr.name);\n            if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateValue = attr.value;\n                templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n            }\n            var hasTemplateBinding = templateValue != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                var parsedVariables_1 = [];\n                _this._bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables_1);\n                templateElementVars.push.apply(templateElementVars, parsedVariables_1.map(function (v) { return t.VariableAst.fromParsedVariable(v); }));\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var references = [];\n        var boundDirectivePropNames = new Set();\n        var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n        var children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var projectionSelector = preparsedElement.projectAs != '' ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n        var parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            // `<ng-content>` element\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n            }\n            parsedElement = new t.NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else if (isTemplateElement) {\n            // `<ng-template>` element\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n            parsedElement = new t.EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n        }\n        else {\n            // element other than `<ng-content>` and `<ng-template>`\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n            var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new t.ElementAst(elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            // The element as a *-attribute\n            var templateQueryStartIndex = this.contentQueryStartId;\n            var templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n            var directives = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var templateBoundDirectivePropNames = new Set();\n            var templateDirectiveAsts = this._createDirectiveAsts(true, elName, directives, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n            var templateElementProps = this._createElementPropertyAsts(elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n            var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n            templateProviderContext.afterElement();\n            parsedElement = new t.EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n        }\n        return parsedElement;\n    };\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var name = this._normalizeAttributeName(attr.name);\n        var value = attr.value;\n        var srcSpan = attr.sourceSpan;\n        var boundEvents = [];\n        var bindParts = name.match(BIND_NAME_REGEXP);\n        var hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, boundEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        targetEvents.push.apply(targetEvents, boundEvents.map(function (e) { return t.BoundEventAst.fromParsedEvent(e); }));\n        return hasBinding;\n    };\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new t.VariableAst(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[_this.directivesIndex.get(directive)] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var matchedReferences = new Set();\n        var component = null;\n        var directiveAsts = directives.map(function (directive) {\n            var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var directiveProperties = [];\n            var boundProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n            var hostProperties = boundProperties.map(function (prop) { return t.BoundElementPropertyAst.fromBoundProperty(prop); });\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var parsedEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new t.ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var hostEvents = parsedEvents.map(function (e) { return t.BoundEventAst.fromParsedEvent(e); });\n            var contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new t.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var refToken = null;\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new t.ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var elProp = directiveProperties[dirProp];\n                var boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new t.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                var boundProp = _this._bindingParser.createBoundElementProperty(elementName, prop);\n                boundElementProps.push(t.BoundElementPropertyAst.fromBoundProperty(boundProp));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return identifierName(directive.directive.type); });\n    };\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param matchElement Whether any directive has matched on the tag name\n     * @param element the html element\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, element.sourceSpan);\n        }\n    };\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === 0 /* Property */ &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var ngContentIndex = parent.findNgContentIndex(selector);\n        var children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new t.ElementAst(ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new t.AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n        return new t.TextAst(text.value, ngContentIndex, text.sourceSpan);\n    };\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\nexport function splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var matcher = new SelectorMatcher();\n        var wildcardNgContentIndex = null;\n        var component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var ngContentSelectors = component.directive.template.ngContentSelectors;\n            for (var i = 0; i < ngContentSelectors.length; i++) {\n                var selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\nexport function createElementCssSelector(elementName, attributes) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var i = 0; i < attributes.length; i++) {\n        var attrName = attributes[i][0];\n        var attrNameNoNs = splitNsName(attrName)[1];\n        var attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\nfunction _isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\nexport function removeSummaryDuplicates(items) {\n    var map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n//# sourceMappingURL=template_parser.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { StaticSymbol } from '../aot/static_symbol';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport * as o from '../output/output_ast';\nimport { templateVisitAll } from '../template_parser/template_ast';\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    TypeCheckCompiler.prototype.compileComponent = function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var embeddedViewCount = 0;\n        var viewBuilderFactory = function (parent, guards) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nexport { TypeCheckCompiler };\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    TypeCheckLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return o.variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    ViewBuilder.prototype.getOutputVar = function (type) {\n        var varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    ViewBuilder.prototype.getTypeGuardExpressions = function (ast) {\n        var result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: { context: this.component, value: input.value }\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    ViewBuilder.prototype.build = function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var viewStmts = [o.variable(DYNAMIC_VAR_NAME).set(o.NULL_EXPR).toDeclStmt(o.DYNAMIC_TYPE)];\n        var bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, o.variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new o.ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var bindingId = \"\" + bindingCount++;\n            var nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, o.variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var bindingId = \"\" + bindingCount++;\n                var nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, o.variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new o.IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var viewFactory = new o.DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var guards = this.getTypeGuardExpressions(ast);\n            var childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var inputDefs = [];\n        var updateRendererExpressions = [];\n        var outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    ViewBuilder.prototype.visitElementOrTemplate = function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var outputVarType = null;\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = o.BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    ViewBuilder.prototype.visitDirective = function (dirAst) {\n        var _this = this;\n        var dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) { return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan }); });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) { return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan }); });\n            dirAst.hostEvents.forEach(function (hostEventAst) { return _this.actions.push({\n                context: dirType,\n                value: hostEventAst.handler,\n                sourceSpan: hostEventAst.sourceSpan\n            }); });\n        }\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return o.variable(this.getOutputVar(o.BuiltinTypeName.Dynamic));\n        }\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = o.BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return o.variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype.pipeOutputVar = function (name) {\n        var pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    ViewBuilder.prototype.preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return function (args) {\n                    var arr = o.literalArr(args);\n                    // Note: The old view compiler used to use an `any` type\n                    // for arrays.\n                    return _this.options.fullTemplateTypeCheck ? arr : arr.cast(o.DYNAMIC_TYPE);\n                }; },\n                createLiteralMapConverter: function (keys) { return function (values) {\n                    var entries = keys.map(function (k, i) { return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    }); });\n                    var map = o.literalMap(entries);\n                    // Note: The old view compiler used to use an `any` type\n                    // for maps.\n                    return _this.options.fullTemplateTypeCheck ? map : map.cast(o.DYNAMIC_TYPE);\n                }; },\n                createPipeConverter: function (name, argCount) { return function (args) {\n                    // Note: The old view compiler used to use an `any` type\n                    // for pipes.\n                    var pipeExpr = _this.options.fullTemplateTypeCheck ?\n                        o.variable(_this.pipeOutputVar(name)) :\n                        o.variable(_this.getOutputVar(o.BuiltinTypeName.Dynamic));\n                    return pipeExpr.callMethod('transform', args);\n                }; },\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) { };\n    ViewBuilder.prototype.visitText = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n//# sourceMappingURL=type_check_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { rendererTypeName, tokenReference, viewClassName } from '../compile_metadata';\nimport { BindingForm, EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport { ChangeDetectionStrategy } from '../core';\nimport { Identifiers } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport { isNgContainer } from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ElementAst, EmbeddedTemplateAst, NgContentAst, templateVisitAll } from '../template_parser/template_ast';\nimport { componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef } from './provider_compiler';\nvar CLASS_ATTR = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nexport { ViewCompileResult };\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var _a;\n        var embeddedViewCount = 0;\n        var staticQueryIds = findStaticQueryIds(template);\n        var renderComponentVarName = undefined;\n        if (!component.isHost) {\n            var template_1 = component.template;\n            var customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new o.LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = renderComponentVar.name;\n            outputCtx.statements.push(renderComponentVar\n                .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                    new o.LiteralMapEntry('encapsulation', o.literal(template_1.encapsulation), false),\n                    new o.LiteralMapEntry('styles', styles, false),\n                    new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(o.importType(Identifiers.RendererType2), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n        }\n        var viewBuilderFactory = function (parent) {\n            var embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n    };\n    return ViewCompiler;\n}());\nexport { ViewCompiler };\nvar LOG_VAR = o.variable('_l');\nvar VIEW_VAR = o.variable('_v');\nvar CHECK_VAR = o.variable('_ck');\nvar COMP_VAR = o.variable('_co');\nvar EVENT_NAME_VAR = o.variable('en');\nvar ALLOW_DEFAULT_VAR = o.variable(\"ad\");\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        // Need Object.create so that we don't have builtin values...\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            o.DYNAMIC_TYPE :\n            o.expressionType(outputCtx.importExpr(this.component.type.reference));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var queryId = queryIndex + 1;\n                var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                var flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                        o.literal(flags), o.literal(queryId),\n                        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                    o.literal(0 /* None */), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                ])\n            }); });\n        }\n    };\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var viewFlags = 0 /* None */;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var viewFactory = new o.DeclareFunctionStmt(this.viewName, [new o.FnParam(LOG_VAR.name)], [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n                o.literal(viewFlags),\n                o.literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], o.importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var updateFn;\n        if (updateStmts.length > 0) {\n            var preStmts = [];\n            if (!this.component.isHost && o.findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = o.fn([\n                new o.FnParam(CHECK_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(VIEW_VAR.name, o.INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), o.INFERRED_TYPE);\n        }\n        else {\n            updateFn = o.NULL_EXPR;\n        }\n        return updateFn;\n    };\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                o.literal(ast.ngContentIndex), o.literal(ast.index)\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // Static text nodes have no check function\n        var checkIndex = -1;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr([o.literal(ast.value)]),\n            ])\n        }); });\n    };\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var astWithSource = ast.value;\n        var inter = astWithSource.ast;\n        var updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr(inter.strings.map(function (s) { return o.literal(s); })),\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(null);\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                o.variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        // Using a null element name creates an anchor.\n        var elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var inputDefs = [];\n        var updateRendererExpressions = [];\n        var outputDefs = [];\n        if (elName) {\n            var hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: COMP_VAR,\n                inputAst: inputAst,\n                dirAst: null,\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return o.literalArr([o.literal(target), o.literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var compRendererType = o.NULL_EXPR;\n        var compView = o.NULL_EXPR;\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                o.literal(elName),\n                elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n                inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var flags = 0 /* None */;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var hostBindings = [];\n        var hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var dirAst = undefined;\n            var dirIndex = undefined;\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(ast)), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var valueType = undefined;\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var valueType = undefined;\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(null);\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var queryId = dirAst.contentQueryStartId + queryIndex;\n            var flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                    o.literal(flags), o.literal(queryId),\n                    new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var outputDefs = [];\n        var dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n            }\n        });\n        var updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var dirContextExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n        var hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n                o.literal(childCount),\n                providerExpr,\n                depsExpr,\n                inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n                o.literal(data.flags),\n                data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var flags = 0 /* None */;\n        var queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var currViewExpr = VIEW_VAR;\n        for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n            // check references\n            var refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n            }\n            // check variables\n            var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    ViewBuilder.prototype._createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var valueExpr_1 = o.importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                o.literal(checkIndex),\n                o.literal(argCount),\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var valueExpr_2 = o.importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var map = o.literalMap(keys.map(function (e, i) { return (tslib_1.__assign({}, e, { value: o.literal(i) })); }));\n        var checkIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                o.literal(checkIndex),\n                map,\n            ])\n        }); });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    ViewBuilder.prototype._createPipeConverter = function (expression, name, argCount) {\n        var pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n        if (pipe.pure) {\n            var checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                    o.literal(checkIndex_1),\n                    o.literal(argCount),\n                ])\n            }); });\n            // find underlying pipe in the component view\n            var compViewExpr = VIEW_VAR;\n            var compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n            }\n            var pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var pipeValueExpr_1 = o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var nodeValueExpr_1 = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var nodeIndex = this.nodes.length;\n        var flags = 0 /* None */;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n                o.literal(flags), _this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this._createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var self = this;\n        var updateBindingCount = 0;\n        var updateRendererStmts = [];\n        var updateDirectivesStmts = [];\n        var nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var updateStmts = [];\n            var exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var bindingId = \"\" + updateBindingCount++;\n                var nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(o.applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var handleEventStmts = [];\n        var handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var bindingId = \"\" + handleEventBindingCount++;\n            var nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var preStmts = [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n            if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = o.fn([\n                new o.FnParam(VIEW_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(EVENT_NAME_VAR.name, o.INFERRED_TYPE),\n                new o.FnParam(EventHandlerVars.event.name, o.INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new o.ReturnStatement(ALLOW_DEFAULT_VAR)]), o.INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = o.NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\nfunction needsAdditionalRootNode(astNodes) {\n    var lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\nfunction elementBindingDef(inputAst, dirAst) {\n    var inputType = inputAst.type;\n    switch (inputType) {\n        case 1 /* Attribute */:\n            return o.literalArr([\n                o.literal(1 /* TypeElementAttribute */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 0 /* Property */:\n            return o.literalArr([\n                o.literal(8 /* TypeProperty */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case 4 /* Animation */:\n            var bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return o.literalArr([\n                o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n            ]);\n        case 2 /* Class */:\n            return o.literalArr([o.literal(2 /* TypeElementClass */), o.literal(inputAst.name), o.NULL_EXPR]);\n        case 3 /* Style */:\n            return o.literalArr([\n                o.literal(4 /* TypeElementStyle */), o.literal(inputAst.name), o.literal(inputAst.unit)\n            ]);\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = inputType;\n            throw new Error(\"unexpected \" + unexpected);\n    }\n}\nfunction fixedAttrsDef(elementAst) {\n    var mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var value = dirAst.directive.hostAttributes[name];\n            var prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return o.literalArr(Object.keys(mapResult).sort().map(function (attrName) { return o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])]); }));\n}\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(1 /* Dynamic */), o.literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(0 /* Inline */)].concat(exprs));\n    }\n}\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return o.importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n    ]);\n}\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var staticQueryIds = new Set();\n        var dynamicQueryIds = new Set();\n        var queryMatches = undefined;\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var childData = result.get(child);\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var staticQueryIds = new Set();\n    var dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var flags = 0 /* None */;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\nexport function elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n//# sourceMappingURL=view_compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { extractMessages } from './extractor_merger';\nimport * as i18n from './i18n_ast';\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var _a;\n        var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var messages = {};\n        var mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var _a;\n            var id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n        });\n        // Transform placeholder names using the serializer mapping\n        var msgList = Object.keys(messages).map(function (id) {\n            var mapper = serializer.createNameMapper(messages[id]);\n            var src = messages[id];\n            var nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nexport { MessageBundle };\n// Transform an i18n AST by renaming the placeholder nodes with the given mapper\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    tslib_1.__extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var startName = mapper.toPublicName(ph.startName);\n        var closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n        var children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new i18n.TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new i18n.Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new i18n.IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(i18n.CloneVisitor));\n//# sourceMappingURL=message_bundle.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { areAllEquivalent } from '../output/output_ast';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    GeneratedFile.prototype.isEquivalent = function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(this.stmts, other.stmts);\n    };\n    return GeneratedFile;\n}());\nexport { GeneratedFile };\nexport function toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n//# sourceMappingURL=generated_file.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { tokenReference } from '../compile_metadata';\nexport function listLazyRoutes(moduleMeta, reflector) {\n    var allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\nexport function parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n//# sourceMappingURL=lazy_routes.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName } from './util';\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nexport { ResolvedStaticSymbol };\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return this._resolveSymbolMembers(staticSymbol);\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var resultFromSummary = this._resolveSymbolFromSummary(staticSymbol);\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return this.resolvedSymbols.get(staticSymbol);\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = this.importAs.get(staticSymbol);\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    StaticSymbolResolver.prototype.getKnownModuleName = function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /** @internal */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var members = staticSymbol.members;\n        var baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var value = baseMetadata;\n            for (var i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = function (filePath) {\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        var summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var resolvedSymbols = [];\n        var metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there might be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var symbolMeta = metadata['metadata'][metadataKey];\n                var name = unescapeIdentifier(metadataKey);\n                var symbol = _this.getStaticSymbol(filePath, name);\n                var origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + _this.host.getOutputName(filePath)));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var _originalFileMemo;\n        var getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            tslib_1.__extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var module = map['module'];\n                    var name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var filePath = void 0;\n                    if (module) {\n                        filePath = self.resolveModule(module, sourceSymbol.filePath);\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + self.host.getMetadataFor(sourceSymbol.filePath) + \".\",\n                                line: map.line,\n                                character: map.character,\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map.line,\n                            character: map.character,\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return tslib_1.__assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param module an absolute path to a module file.\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + this.host.getOutputName(module) + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                this.host.getOutputName(containingFile) : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\nexport { StaticSymbolResolver };\n// Remove extra underscore from escaped identifier.\n// See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts\nexport function unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\nexport function unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n//# sourceMappingURL=static_symbol_resolver.js.map","import * as tslib_1 from \"tslib\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileNgModuleMetadata, CompileSummaryKind } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { unwrapResolvedMetadata } from './static_symbol_resolver';\nimport { isLoweredSymbol, ngfactoryFilePath, summaryForJitFileName, summaryForJitName } from './util';\nexport function serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\nexport function deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\nexport function createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    tslib_1.__extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        // This now contains a `__symbol: number` in the place of\n        // StaticSymbols, but otherwise has the same shape as the original objects.\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    ToJsonSerializer.prototype.addSummary = function (summary) {\n        var _this = this;\n        var unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var declarationSymbol = this.symbols[this.indexBySymbol.get(metadata_1)];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var ngModuleSummary = summary.type;\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var exportAs = [];\n        var json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var importAs = undefined;\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = _this.indexBySymbol.get(reexportSymbol);\n                    }\n                    else {\n                        var summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    ToJsonSerializer.prototype.processValue = function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Strip line and character numbers from ngsummaries.\n     * Emitting them causes white spaces changes to retrigger upstream\n     * recompilations in bazel.\n     * TODO: find out a way to have line and character numbers in errors without\n     * excessive recompilation in bazel.\n     */\n    ToJsonSerializer.prototype.visitStringMap = function (map, context) {\n        if (map['__symbolic'] === 'resolved') {\n            return visitValue(map.symbol, this, context);\n        }\n        if (map['__symbolic'] === 'error') {\n            delete map['line'];\n            delete map['character'];\n        }\n        return _super.prototype.visitStringMap.call(this, map, context);\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = function (baseSymbol, flags) {\n        var index = this.indexBySymbol.get(baseSymbol);\n        var summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return index;\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    ToJsonSerializer.prototype.loadSummary = function (symbol) {\n        var summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    ForJitSerializer.prototype.serialize = function (exportAsArr) {\n        var _this = this;\n        var exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var modSummary = summary;\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, metadata));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(o.variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [o.StmtModifier.Exported]));\n            }\n        });\n    };\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var expressions = [this.serializeSummary(summary)];\n        var providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                // For modules,\n                // we also add the summaries for modules\n                // from libraries.\n                // This is ok as we produce reexports for all transitive modules.\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var dirSummary = summary;\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        }); }));\n        return o.literalArr(expressions);\n    };\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return o.literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new o.LiteralMapExpr(Object.keys(map).map(function (key) { return new o.LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            Transformer.prototype.visitPrimitive = function (value, context) { return o.literal(value); };\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    tslib_1.__extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    FromJsonDeserializer.prototype.deserialize = function (libraryFileName, json) {\n        var _this = this;\n        var data = JSON.parse(json);\n        var allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) { return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name); });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var symbol = _this.symbols[index];\n            var importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var baseSymbol = this.symbols[map['__symbol']];\n            var members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n//# sourceMappingURL=summary_serializer.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { componentFactoryName, flatten, identifierName, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport { ViewEncapsulation } from '../core';\nimport { MessageBundle } from '../i18n/message_bundle';\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { removeWhitespaces } from '../ml_parser/html_whitespaces';\nimport { DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig } from '../ml_parser/interpolation_config';\nimport * as o from '../output/output_ast';\nimport { compileNgModuleFromRender2 as compileR3Module } from '../render3/r3_module_compiler';\nimport { compilePipeFromRender2 as compileR3Pipe } from '../render3/r3_pipe_compiler';\nimport { htmlAstToRender3Ast } from '../render3/r3_template_transform';\nimport { compileComponentFromRender2 as compileR3Component, compileDirectiveFromRender2 as compileR3Directive } from '../render3/view/compiler';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { BindingParser } from '../template_parser/binding_parser';\nimport { error, syntaxError, visitValue } from '../util';\nimport { GeneratedFile } from './generated_file';\nimport { listLazyRoutes, parseLazyRoute } from './lazy_routes';\nimport { StaticSymbol } from './static_symbol';\nimport { createForJitStub, serializeSummaries } from './summary_serializer';\nimport { ngfactoryFilePath, normalizeGenFileSuffix, splitTypescriptSuffix, summaryFileName, summaryForJitFileName } from './util';\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this.reflector = reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    AotCompiler.prototype._analyzeFile = function (fileName) {\n        var analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype._analyzeFileForInjectables = function (fileName) {\n        var analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    AotCompiler.prototype.findGeneratedFileNames = function (fileName) {\n        var _this = this;\n        var genFileNames = [];\n        var file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var compMeta = _this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            }\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.styleUrls.forEach(function (styleUrl) {\n                var normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var needsShim = (compMeta.template.encapsulation ||\n                    _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    AotCompiler.prototype.emitBasicStub = function (genFileName, originalFileName) {\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, 1 /* Basic */);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    AotCompiler.prototype.emitTypeCheckStub = function (genFileName, originalFileName) {\n        var originalFile = this._analyzeFile(originalFileName);\n        var outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, 2 /* TypeCheck */);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    AotCompiler.prototype.loadFilesAsync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var loadingPromises = [];\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) {\n            return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n        }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) { return ({\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        }); });\n    };\n    AotCompiler.prototype.loadFilesSync = function (fileNames, tsFiles) {\n        var _this = this;\n        var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); }); });\n        var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    AotCompiler.prototype._createNgFactoryStub = function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the type-check block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(o.variable(varName)\n                    .set(o.NULL_EXPR.cast(o.DYNAMIC_TYPE))\n                    .toDeclStmt(o.expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ false))));\n            });\n            if (emitFlags & 2 /* TypeCheck */) {\n                // add the type-check block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    AotCompiler.prototype._externalIdentifierReferences = function (references) {\n        var result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var token = createTokenForExternalReference(this.reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    AotCompiler.prototype._createTypeCheckBlock = function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a;\n        var _b = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _b.template, usedPipes = _b.pipes;\n        (_a = ctx.statements).push.apply(_a, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n    };\n    AotCompiler.prototype.emitMessageBundle = function (analyzeResult, locale) {\n        var _this = this;\n        var errors = [];\n        var htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var html = compMeta.template.template;\n                // Template URL points to either an HTML or TS file depending on whether\n                // the file is used with `templateUrl:` or `template:`, respectively.\n                var templateUrl = compMeta.template.templateUrl;\n                var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                errors.push.apply(errors, messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    AotCompiler.prototype.emitAllPartialModules = function (_a, r3Files) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        var contextMap = new Map();\n        var getContext = function (fileName) {\n            if (!contextMap.has(fileName)) {\n                contextMap.set(fileName, _this._createOutputContext(fileName));\n            }\n            return contextMap.get(fileName);\n        };\n        files.forEach(function (file) { return _this._compilePartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables, getContext(file.fileName)); });\n        r3Files.forEach(function (file) { return _this._compileShallowModules(file.fileName, file.shallowModules, getContext(file.fileName)); });\n        return Array.from(contextMap.values())\n            .map(function (context) { return ({\n            fileName: context.genFilePath,\n            statements: context.constantPool.statements.concat(context.statements),\n        }); });\n    };\n    AotCompiler.prototype._compileShallowModules = function (fileName, shallowModules, context) {\n        var _this = this;\n        shallowModules.forEach(function (module) { return compileR3Module(context, module, _this._injectableCompiler); });\n    };\n    AotCompiler.prototype._compilePartialModule = function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables, context) {\n        var _this = this;\n        var errors = [];\n        var schemaRegistry = new DomElementSchemaRegistry();\n        var hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var module = ngModuleByPipeOrDirective.get(directiveType);\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var htmlAst = directiveMetadata.template.htmlAst;\n                var preserveWhitespaces = directiveMetadata.template.preserveWhitespaces;\n                if (!preserveWhitespaces) {\n                    htmlAst = removeWhitespaces(htmlAst);\n                }\n                var render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n                // Map of StaticType by directive selectors\n                var directiveTypeBySel_1 = new Map();\n                var directives_1 = module.transitiveModule.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n                directives_1.forEach(function (directive) {\n                    if (directive.selector) {\n                        directiveTypeBySel_1.set(directive.selector, directive.type.reference);\n                    }\n                });\n                // Map of StaticType by pipe names\n                var pipeTypeByName_1 = new Map();\n                var pipes_1 = module.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n                pipes_1.forEach(function (pipe) { pipeTypeByName_1.set(pipe.name, pipe.type.reference); });\n                compileR3Component(context, directiveMetadata, render3Ast, _this.reflector, hostBindingParser, directiveTypeBySel_1, pipeTypeByName_1);\n            }\n            else {\n                compileR3Directive(context, directiveMetadata, _this.reflector, hostBindingParser);\n            }\n        });\n        pipes.forEach(function (pipeType) {\n            var pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compileR3Pipe(context, pipeMetadata, _this.reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n    };\n    AotCompiler.prototype.emitAllPartialModules2 = function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    };\n    AotCompiler.prototype._emitPartialModule2 = function (fileName, injectables) {\n        var _this = this;\n        var context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var sourceModules = files.map(function (file) { return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var generatedFiles = [];\n        var outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta);\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    AotCompiler.prototype._createSummary = function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var typeData = ngModules.map(function (meta) { return ({\n            summary: _this._metadataResolver.getNgModuleSummary(meta.type.reference),\n            metadata: _this._metadataResolver.getNgModuleMetadata(meta.type.reference)\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: _this._metadataResolver.getDirectiveSummary(ref),\n            metadata: _this._metadataResolver.getDirectiveMetadata(ref)\n        }); }), pipes.map(function (ref) { return ({\n            summary: _this._metadataResolver.getPipeSummary(ref),\n            metadata: _this._metadataResolver.getPipeMetadata(ref)\n        }); }), injectables.map(function (ref) { return ({\n            summary: _this._metadataResolver.getInjectableSummary(ref.symbol),\n            metadata: _this._metadataResolver.getInjectableSummary(ref.symbol).type\n        }); }));\n        var forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                o.StmtModifier.Exported\n            ]));\n        });\n        var summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModule) {\n        var providers = [];\n        if (this._options.locale) {\n            var normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var inputsExprs = [];\n        for (var propName in compMeta.inputs) {\n            var templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        var outputsExprs = [];\n        for (var propName in compMeta.outputs) {\n            var templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        outputCtx.statements.push(o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n            o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n            new o.LiteralMapExpr(outputsExprs),\n            o.literalArr(compMeta.template.ngContentSelectors.map(function (selector) { return o.literal(selector); }))\n        ]))\n            .toDeclStmt(o.importType(Identifiers.ComponentFactory, [o.expressionType(outputCtx.importExpr(compMeta.type.reference))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    };\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n        var viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    AotCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return this._templateAstCache.get(compMeta.type.reference);\n        }\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var result = this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var importExpr = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var suppliedTypeParams = typeParams || [];\n            var missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, o.importExpr(new o.ExternalReference(moduleName, name, null), allTypeParams));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr, constantPool: new ConstantPool() };\n    };\n    AotCompiler.prototype._fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var outputCtx = this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl, isShimmed, fileSuffix));\n        var compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    AotCompiler.prototype.listLazyRoutes = function (entryRoute, analyzedModules) {\n        var self = this;\n        if (entryRoute) {\n            var symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var lazyRoutes = listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol, true), self.reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\nexport { AotCompiler };\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(o.importExpr(Identifiers.ComponentFactory).toStmt());\n}\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\nexport function analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\nexport function analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n// Analyzes all of the program files,\n// including files that are not part of the program\n// but are referenced by an NgModule.\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var seenFiles = new Set();\n    var files = [];\n    var visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\nexport function analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var directives = [];\n    var pipes = [];\n    var injectables = [];\n    var ngModules = [];\n    var hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\nexport function analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var injectables = [];\n    var shallowModules = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var module = metadataResolver.getShallowModuleMetadata(symbol);\n                    if (module) {\n                        shallowModules.push(module);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables, shallowModules: shallowModules };\n}\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        Visitor.prototype.visitArray = function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        Visitor.prototype.visitStringMap = function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        Visitor.prototype.visitPrimitive = function (value, context) { };\n        Visitor.prototype.visitOther = function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\nexport function mergeAnalyzedFiles(analyzedFiles) {\n    var allNgModules = [];\n    var ngModuleByPipeOrDirective = new Map();\n    var allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { syntaxError } from '../util';\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var prefix = position && indent === 0 ? position + \": \" : '';\n    var postfix = position && indent !== 0 ? \" at \" + position : '';\n    var message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\nexport function formattedError(chain) {\n    var message = formatChain(chain) + '.';\n    var error = syntaxError(message);\n    error[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\nexport function isFormattedError(error) {\n    return !!error[FORMATTED_MESSAGE];\n}\n//# sourceMappingURL=formatted_error.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { CompileSummaryKind } from '../compile_metadata';\nimport { createAttribute, createComponent, createContentChild, createContentChildren, createDirective, createHost, createHostBinding, createHostListener, createInject, createInjectable, createInput, createNgModule, createOptional, createOutput, createPipe, createSelf, createSkipSelf, createViewChild, createViewChildren } from '../core';\nimport { syntaxError } from '../util';\nimport { formattedError } from './formatted_error';\nimport { StaticSymbol } from './static_symbol';\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data', 'id', 'loadChildren']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.shallowAnnotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    StaticReflector.prototype.resolveExternalReference = function (ref, containingFile) {\n        var key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var refSymbol = this.symbolResolver.getSymbolByModule(ref.moduleName, ref.name, containingFile);\n        var declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName);\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name, containingFile) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name, containingFile); });\n    };\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    StaticReflector.prototype.tryAnnotations = function (type) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators); }, this.annotationCache);\n    };\n    StaticReflector.prototype.shallowAnnotations = function (type) {\n        var _this = this;\n        return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators, true); }, this.shallowAnnotationCache);\n    };\n    StaticReflector.prototype._annotations = function (type, simplify, annotationCache) {\n        var annotations = annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var classMetadata = this.getTypeMetadata(type);\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = simplify(type, classMetadata['decorators']);\n                if (ownAnnotations_1) {\n                    annotations.push.apply(annotations, ownAnnotations_1);\n                }\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var requiredAnnotationTypes = this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);\n                    var typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[summary.type.summaryKind] + \" in another compilation unit without duplicating the decorator\", \n                        /* summary */ undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var propData = members_1[propName];\n                var prop = propData\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var decorators = [];\n                if (propMetadata[propName]) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                propMetadata[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var classMetadata = this.getTypeMetadata(type);\n                var parentType = this.findParentType(type, classMetadata);\n                var members = classMetadata ? classMetadata['members'] : null;\n                var ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var ctor = ctorData.find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var rawParameterTypes = ctor['parameters'] || [];\n                    var parameterDecorators_1 = this.simplify(type, ctor['parameterDecorators'] || []);\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var nestedResult = [];\n                        var paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        }\n                        parameters_1.push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype._methodNames = function (type) {\n        var methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    methodNames[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var propData = members_2[propName];\n                var isMethod = propData.some(function (a) { return a['__symbolic'] == 'method'; });\n                methodNames[propName] = methodNames[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    StaticReflector.prototype._staticMembers = function (type) {\n        var staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var classMetadata = this.getTypeMetadata(type);\n            var staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    StaticReflector.prototype.guards = function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var staticMembers = this._staticMembers(type);\n        var result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /** @internal */\n    StaticReflector.prototype.simplify = function (context, value, lazy) {\n        if (lazy === void 0) { lazy = false; }\n        var self = this;\n        var scope = BindingScope.empty;\n        var calling = new Map();\n        var rootContext = context;\n        function simplifyInContext(context, value, depth, references) {\n            function resolveReferenceValue(staticSymbol) {\n                var resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var summaryMsg = e.chain ? 'references \\'' + e.symbol.name + '\\'' : errorSummary(e);\n                        var summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var parameters = targetFunction['parameters'];\n                            var defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var functionScope = BindingScope.build();\n                            for (var i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var oldScope = scope;\n                            var result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var line = targetExpression.line;\n                    var character = targetExpression.character;\n                    var fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var result_2 = [];\n                    for (var _i = 0, _a = expression; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var staticSymbol = expression;\n                        var declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var indexTarget = simplifyEagerly(expression['expression']);\n                                var index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var member = expression['member'];\n                                var selectContext = context;\n                                var selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var name_2 = expression['name'];\n                                var localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var argExpressions = expression['arguments'] || [];\n                                    var converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var result;\n        try {\n            result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n        }\n        catch (e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    StaticReflector.prototype.error = function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nexport { StaticReflector };\nvar METADATA_ERROR = 'ngMetadataError';\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var error = syntaxError(message);\n    error[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\nfunction isMetadataError(error) {\n    return !!error[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return \"references non-exported class \" + error.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return \"calls '\" + error.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return \"references local variable \" + error.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var result = {};\n    Object.keys(input).forEach(function (key) {\n        var value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    BindingScope.build = function () {\n        var current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    tslib_1.__extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\nfunction formatMetadataMessageChain(chain, advise) {\n    var expanded = expandedMessage(chain.message, chain.context);\n    var nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var message = \"\" + expanded + nesting;\n    var position = chain.position;\n    var next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var position = e.position;\n        var chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n//# sourceMappingURL=static_reflector.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { deserializeSummaries } from './summary_serializer';\nimport { stripGeneratedFileSuffix, summaryFileName } from './util';\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        // Note: this will only contain StaticSymbols without members!\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        // Note: this will only contain StaticSymbols without members!\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    AotSummaryResolver.prototype.toSummaryFileName = function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    AotSummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        var rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = this.summaryCache.get(staticSymbol);\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return this.importAs.get(staticSymbol);\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        var hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var json = null;\n        if (this.isLibraryFile(filePath)) {\n            var summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\nexport { AotSummaryResolver };\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { Lexer } from '../expression_parser/lexer';\nimport { Parser } from '../expression_parser/parser';\nimport { I18NHtmlParser } from '../i18n/i18n_html_parser';\nimport { InjectableCompiler } from '../injectable_compiler';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { StyleCompiler } from '../style_compiler';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { syntaxError } from '../util';\nimport { TypeCheckCompiler } from '../view_compiler/type_check_compiler';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\nimport { AotCompiler } from './compiler';\nimport { StaticReflector } from './static_reflector';\nimport { StaticSymbolCache } from './static_symbol';\nimport { StaticSymbolResolver } from './static_symbol_resolver';\nimport { AotSummaryResolver } from './summary_resolver';\nexport function createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n */\nexport function createAotCompiler(compilerHost, options, errorCollector) {\n    var translations = options.translations || '';\n    var urlResolver = createAotUrlResolver(compilerHost);\n    var symbolCache = new StaticSymbolCache();\n    var summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var htmlParser;\n    if (!!options.enableIvy) {\n        // Ivy handles i18n at the compiler level so we must use a regular parser\n        htmlParser = new HtmlParser();\n    }\n    else {\n        htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    }\n    var config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var expressionParser = new Parser(new Lexer());\n    var elementSchemaRegistry = new DomElementSchemaRegistry();\n    var tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var viewCompiler = new ViewCompiler(staticReflector);\n    var typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n//# sourceMappingURL=compiler_factory.js.map","var SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nexport { SummaryResolver };\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    JitSummaryResolver.prototype.isLibraryFile = function () { return false; };\n    JitSummaryResolver.prototype.toSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.fromSummaryFileName = function (fileName) { return fileName; };\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    JitSummaryResolver.prototype.getSymbolsOf = function () { return []; };\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    JitSummaryResolver.prototype.getKnownModuleName = function (fileName) { return null; };\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\nexport { JitSummaryResolver };\n//# sourceMappingURL=summary_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { debugOutputAstAsTypeScript } from './ts_emitter';\nexport function interpretStatements(statements, reflector) {\n    var ctx = new _ExecutionContext(null, null, null, new Map());\n    var visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var childCtx = ctx.createChildWihtLocalVars();\n    for (var i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[method.name] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        var initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n        ctx.vars.set(stmt.name, initialValue);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var value = expr.value.visitExpression(this, ctx);\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    StatementInterpreter.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a WrappedNodeExpr.');\n    };\n    StatementInterpreter.prototype.visitTypeofExpr = function (ast, ctx) {\n        throw new Error('Cannot interpret a TypeofExpr');\n    };\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var varName = ast.name;\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case o.BuiltinVar.This:\n                    return ctx.instance;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = currCtx.parent;\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var index = expr.index.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var receiver = expr.receiver.visitExpression(this, ctx);\n        var args = this.visitAllExpressions(expr.args, ctx);\n        var result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case o.BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case o.BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case o.BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[expr.name].apply(receiver, args);\n        }\n        return result;\n    };\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var args = this.visitAllExpressions(stmt.args, ctx);\n        var fnExpr = stmt.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var fn = stmt.fn.visitExpression(this, ctx);\n            return fn.apply(null, args);\n        }\n    };\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR, e);\n            childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitJSDocCommentStmt = function (stmt, context) { return null; };\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var args = this.visitAllExpressions(ast.args, ctx);\n        var clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                return lhs() == rhs();\n            case o.BinaryOperator.Identical:\n                return lhs() === rhs();\n            case o.BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case o.BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case o.BinaryOperator.And:\n                return lhs() && rhs();\n            case o.BinaryOperator.Or:\n                return lhs() || rhs();\n            case o.BinaryOperator.Plus:\n                return lhs() + rhs();\n            case o.BinaryOperator.Minus:\n                return lhs() - rhs();\n            case o.BinaryOperator.Divide:\n                return lhs() / rhs();\n            case o.BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case o.BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case o.BinaryOperator.Lower:\n                return lhs() < rhs();\n            case o.BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case o.BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case o.BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var result;\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var receiver = ast.receiver.visitExpression(this, ctx);\n        var prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var i = 0; i < statements.length; i++) {\n            var stmt = statements[i];\n            var val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR = 'error';\nvar CATCH_STACK_VAR = 'stack';\n//# sourceMappingURL=output_interpreter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl } from '../compile_metadata';\nimport { ConstantPool } from '../constant_pool';\nimport * as ir from '../output/output_ast';\nimport { interpretStatements } from '../output/output_interpreter';\nimport { jitStatements } from '../output/output_jit';\nimport { SyncAsync, stringify } from '../util';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var summary = this._metadataResolver.getDirectiveSummary(component);\n        return summary.componentFactory;\n    };\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    JitCompiler.prototype._addAotSummaries = function (fn) {\n        if (this._addedAotSummaries.has(fn)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn);\n        var summaries = fn();\n        for (var i = 0; i < summaries.length; i++) {\n            var entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var summary = entry;\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var loading = [];\n        var mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var moduleMeta = _this._metadataResolver.getNgModuleMetadata(nestedNgModule);\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n        if (!ngModuleFactory) {\n            var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n            // Always provide a bound Compiler\n            var extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var outputCtx = createOutputContext();\n            var compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n        var moduleByJitDirective = new Map();\n        var templates = new Set();\n        var transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(dirMeta.componentFactory);\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType)) {\n                    var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    JitCompiler.prototype.clearCache = function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, compMeta.componentFactory.viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var compMeta = template.compMeta;\n        var externalStylesheetsByModuleUrl = new Map();\n        var outputContext = createOutputContext();\n        var componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n            var compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl, compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar), usedPipes);\n        var evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var viewClass = evalResult[compileResult.viewClassVar];\n        var rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    JitCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n        var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n    };\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n            var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    JitCompiler.prototype._interpretOrJit = function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nexport { JitCompiler };\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = null;\n        this.isCompiled = false;\n    }\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        this.compMeta.componentViewType.setDelegate(viewClass);\n        for (var prop in rendererType) {\n            this.compMeta.rendererType[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\nfunction createOutputContext() {\n    var importExpr = function (symbol) {\n        return ir.importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr, constantPool: new ConstantPool() };\n}\n//# sourceMappingURL=compiler.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {@link UrlResolver} with no package prefix.\n */\nexport function createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\nexport function createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\nexport var UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    UrlResolverImpl.prototype.resolve = function (baseUrl, url) {\n        var resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var resolvedParts = _split(resolvedUrl);\n        var prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n */\nexport function getUrlScheme(url) {\n    var match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n// The code below is adapted from Traceur:\n// https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param opt_scheme The scheme such as 'http'.\n * @param opt_userInfo The user name before the '@'.\n * @param opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param opt_port The port number.\n * @param opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param opt_queryData The URI-encoded query data.\n * @param opt_fragment The URI-encoded fragment identifier.\n * @return The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\nvar _ComponentIndex;\n(function (_ComponentIndex) {\n    _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n    _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n    _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n    _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n    _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n    _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n    _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n})(_ComponentIndex || (_ComponentIndex = {}));\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param uri The URI string to examine.\n * @return Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return uri.match(_splitRe);\n}\n/**\n  * Removes dot segments in given path component, as described in\n  * RFC 3986, section 5.2.4.\n  *\n  * @param path A non-empty path component.\n  * @return Path component with removed dot segments.\n  */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var leadingSlash = path[0] == '/' ? '/' : '';\n    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var segments = path.split('/');\n    var out = [];\n    var up = 0;\n    for (var pos = 0; pos < segments.length; pos++) {\n        var segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param base The URL acting as the base URL.\n * @param to The URL to resolve.\n */\nfunction _resolveUrl(base, url) {\n    var parts = _split(encodeURI(url));\n    var baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n//# sourceMappingURL=url_resolver.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\nexport { ResourceLoader };\n//# sourceMappingURL=resource_loader.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nimport { analyzeAndValidateNgModules } from '../aot/compiler';\nimport { createAotUrlResolver } from '../aot/compiler_factory';\nimport { StaticReflector } from '../aot/static_reflector';\nimport { StaticSymbolCache } from '../aot/static_symbol';\nimport { StaticSymbolResolver } from '../aot/static_symbol_resolver';\nimport { AotSummaryResolver } from '../aot/summary_resolver';\nimport { CompilerConfig } from '../config';\nimport { ViewEncapsulation } from '../core';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { MessageBundle } from './message_bundle';\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var errors = [];\n            files.forEach(function (file) {\n                var compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var html = compMeta.template.template;\n                    // Template URL points to either an HTML or TS file depending on\n                    // whether the file is used with `templateUrl:` or `template:`,\n                    // respectively.\n                    var templateUrl = compMeta.template.templateUrl;\n                    var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                    errors.push.apply(errors, _this.messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    Extractor.create = function (host, locale) {\n        var htmlParser = new HtmlParser();\n        var urlResolver = createAotUrlResolver(host);\n        var symbolCache = new StaticSymbolCache();\n        var summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var elementSchemaRegistry = new DomElementSchemaRegistry();\n        var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\nexport { Extractor };\n//# sourceMappingURL=extractor.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { ImplicitReceiver, RecursiveAstVisitor } from '../../expression_parser/ast';\nimport { CssSelector } from '../../selector';\nimport { Template } from '../r3_ast';\nimport { getAttrsForDirectiveMatching } from './util';\n/**\n * Processes `Target`s with a given set of directives and performs a binding operation, which\n * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the\n * target.\n */\nvar R3TargetBinder = /** @class */ (function () {\n    function R3TargetBinder(directiveMatcher) {\n        this.directiveMatcher = directiveMatcher;\n    }\n    /**\n     * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains\n     * metadata about the types referenced in the template.\n     */\n    R3TargetBinder.prototype.bind = function (target) {\n        if (!target.template) {\n            // TODO(alxhub): handle targets which contain things like HostBindings, etc.\n            throw new Error('Binding without a template not yet supported');\n        }\n        // First, parse the template into a `Scope` structure. This operation captures the syntactic\n        // scopes in the template and makes them available for later use.\n        var scope = Scope.apply(target.template);\n        // Next, perform directive matching on the template using the `DirectiveBinder`. This returns:\n        //   - directives: Map of nodes (elements & ng-templates) to the directives on them.\n        //   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims\n        //     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.\n        //   - references: Map of #references to their targets.\n        var _a = DirectiveBinder.apply(target.template, this.directiveMatcher), directives = _a.directives, bindings = _a.bindings, references = _a.references;\n        // Finally, run the TemplateBinder to bind references, variables, and other entities within the\n        // template. This extracts all the metadata that doesn't depend on directive matching.\n        var _b = TemplateBinder.apply(target.template, scope), expressions = _b.expressions, symbols = _b.symbols, nestingLevel = _b.nestingLevel;\n        return new R3BoundTarget(target, directives, bindings, references, expressions, symbols, nestingLevel);\n    };\n    return R3TargetBinder;\n}());\nexport { R3TargetBinder };\n/**\n * Represents a binding scope within a template.\n *\n * Any variables, references, or other named entities declared within the template will\n * be captured and available by name in `namedEntities`. Additionally, child templates will\n * be analyzed and have their child `Scope`s available in `childScopes`.\n */\nvar Scope = /** @class */ (function () {\n    function Scope(parentScope) {\n        this.parentScope = parentScope;\n        /**\n         * Named members of the `Scope`, such as `Reference`s or `Variable`s.\n         */\n        this.namedEntities = new Map();\n        /**\n         * Child `Scope`s for immediately nested `Template`s.\n         */\n        this.childScopes = new Map();\n    }\n    /**\n     * Process a template (either as a `Template` sub-template with variables, or a plain array of\n     * template `Node`s) and construct its `Scope`.\n     */\n    Scope.apply = function (template) {\n        var scope = new Scope();\n        scope.ingest(template);\n        return scope;\n    };\n    /**\n     * Internal method to process the template and populate the `Scope`.\n     */\n    Scope.prototype.ingest = function (template) {\n        var _this = this;\n        if (template instanceof Template) {\n            // Variables on an <ng-template> are defined in the inner scope.\n            template.variables.forEach(function (node) { return _this.visitVariable(node); });\n            // Process the nodes of the template.\n            template.children.forEach(function (node) { return node.visit(_this); });\n        }\n        else {\n            // No overarching `Template` instance, so process the nodes directly.\n            template.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    Scope.prototype.visitElement = function (element) {\n        var _this = this;\n        // `Element`s in the template may have `Reference`s which are captured in the scope.\n        element.references.forEach(function (node) { return _this.visitReference(node); });\n        // Recurse into the `Element`'s children.\n        element.children.forEach(function (node) { return node.visit(_this); });\n    };\n    Scope.prototype.visitTemplate = function (template) {\n        var _this = this;\n        // References on a <ng-template> are defined in the outer scope, so capture them before\n        // processing the template's child scope.\n        template.references.forEach(function (node) { return _this.visitReference(node); });\n        // Next, create an inner scope and process the template within it.\n        var scope = new Scope(this);\n        scope.ingest(template);\n        this.childScopes.set(template, scope);\n    };\n    Scope.prototype.visitVariable = function (variable) {\n        // Declare the variable if it's not already.\n        this.maybeDeclare(variable);\n    };\n    Scope.prototype.visitReference = function (reference) {\n        // Declare the variable if it's not already.\n        this.maybeDeclare(reference);\n    };\n    // Unused visitors.\n    Scope.prototype.visitContent = function (content) { };\n    Scope.prototype.visitBoundAttribute = function (attr) { };\n    Scope.prototype.visitBoundEvent = function (event) { };\n    Scope.prototype.visitBoundText = function (text) { };\n    Scope.prototype.visitText = function (text) { };\n    Scope.prototype.visitTextAttribute = function (attr) { };\n    Scope.prototype.maybeDeclare = function (thing) {\n        // Declare something with a name, as long as that name isn't taken.\n        if (!this.namedEntities.has(thing.name)) {\n            this.namedEntities.set(thing.name, thing);\n        }\n    };\n    /**\n     * Look up a variable within this `Scope`.\n     *\n     * This can recurse into a parent `Scope` if it's available.\n     */\n    Scope.prototype.lookup = function (name) {\n        if (this.namedEntities.has(name)) {\n            // Found in the local scope.\n            return this.namedEntities.get(name);\n        }\n        else if (this.parentScope !== undefined) {\n            // Not in the local scope, but there's a parent scope so check there.\n            return this.parentScope.lookup(name);\n        }\n        else {\n            // At the top level and it wasn't found.\n            return null;\n        }\n    };\n    /**\n     * Get the child scope for a `Template`.\n     *\n     * This should always be defined.\n     */\n    Scope.prototype.getChildScope = function (template) {\n        var res = this.childScopes.get(template);\n        if (res === undefined) {\n            throw new Error(\"Assertion error: child scope for \" + template + \" not found\");\n        }\n        return res;\n    };\n    return Scope;\n}());\n/**\n * Processes a template and matches directives on nodes (elements and templates).\n *\n * Usually used via the static `apply()` method.\n */\nvar DirectiveBinder = /** @class */ (function () {\n    function DirectiveBinder(matcher, directives, bindings, references) {\n        this.matcher = matcher;\n        this.directives = directives;\n        this.bindings = bindings;\n        this.references = references;\n    }\n    /**\n     * Process a template (list of `Node`s) and perform directive matching against each node.\n     *\n     * @param template the list of template `Node`s to match (recursively).\n     * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for\n     * this template.\n     * @returns three maps which contain information about directives in the template: the\n     * `directives` map which lists directives matched on each node, the `bindings` map which\n     * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`\n     * map which resolves #references (`Reference`s) within the template to the named directive or\n     * template node.\n     */\n    DirectiveBinder.apply = function (template, selectorMatcher) {\n        var directives = new Map();\n        var bindings = new Map();\n        var references = new Map();\n        var matcher = new DirectiveBinder(selectorMatcher, directives, bindings, references);\n        matcher.ingest(template);\n        return { directives: directives, bindings: bindings, references: references };\n    };\n    DirectiveBinder.prototype.ingest = function (template) {\n        var _this = this;\n        template.forEach(function (node) { return node.visit(_this); });\n    };\n    DirectiveBinder.prototype.visitElement = function (element) { this.visitElementOrTemplate(element.name, element); };\n    DirectiveBinder.prototype.visitTemplate = function (template) { this.visitElementOrTemplate('ng-template', template); };\n    DirectiveBinder.prototype.visitElementOrTemplate = function (tag, node) {\n        var _this = this;\n        // First, determine the HTML shape of the node for the purpose of directive matching.\n        // Do this by building up a `CssSelector` for the node.\n        var cssSelector = new CssSelector();\n        cssSelector.setElement(tag);\n        // Add attributes to the CSS selector.\n        var attrs = getAttrsForDirectiveMatching(node);\n        Object.getOwnPropertyNames(attrs).forEach(function (name) {\n            var value = attrs[name];\n            cssSelector.addAttribute(name, value);\n            // Treat the 'class' attribute specially.\n            if (name.toLowerCase() === 'class') {\n                var classes = value.trim().split(/\\s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        });\n        // Next, use the `SelectorMatcher` to get the list of directives on the node.\n        var directives = [];\n        this.matcher.match(cssSelector, function (_, directive) { return directives.push(directive); });\n        if (directives.length > 0) {\n            this.directives.set(node, directives);\n        }\n        // Resolve any references that are created on this node.\n        node.references.forEach(function (ref) {\n            var dirTarget = null;\n            // If the reference expression is empty, then it matches the \"primary\" directive on the node\n            // (if there is one). Otherwise it matches the host node itself (either an element or\n            // <ng-template> node).\n            if (ref.value.trim() === '') {\n                // This could be a reference to a component if there is one.\n                dirTarget = directives.find(function (dir) { return dir.isComponent; }) || null;\n            }\n            else {\n                // This is a reference to a directive exported via exportAs. One should exist.\n                dirTarget = directives.find(function (dir) { return dir.exportAs === ref.value; }) || null;\n                // Check if a matching directive was found, and error if it wasn't.\n                if (dirTarget === null) {\n                    // TODO(alxhub): Return an error value here that can be used for template validation.\n                    throw new Error(\"Assertion error: failed to find directive with exportAs: \" + ref.value);\n                }\n            }\n            if (dirTarget !== null) {\n                // This reference points to a directive.\n                _this.references.set(ref, { directive: dirTarget, node: node });\n            }\n            else {\n                // This reference points to the node itself.\n                _this.references.set(ref, node);\n            }\n        });\n        // Associate bindings on the node with directives or with the node itself.\n        // Inputs:\n        node.attributes.concat(node.inputs).forEach(function (binding) {\n            var dir = directives.find(function (dir) { return dir.inputs.hasOwnProperty(binding.name); });\n            if (dir !== undefined) {\n                _this.bindings.set(binding, dir);\n            }\n            else {\n                _this.bindings.set(binding, node);\n            }\n        });\n        // Outputs:\n        node.outputs.forEach(function (binding) {\n            var dir = directives.find(function (dir) { return dir.outputs.hasOwnProperty(binding.name); });\n            if (dir !== undefined) {\n                _this.bindings.set(binding, dir);\n            }\n            else {\n                _this.bindings.set(binding, node);\n            }\n        });\n        // Recurse into the node's children.\n        node.children.forEach(function (child) { return child.visit(_this); });\n    };\n    // Unused visitors.\n    DirectiveBinder.prototype.visitContent = function (content) { };\n    DirectiveBinder.prototype.visitVariable = function (variable) { };\n    DirectiveBinder.prototype.visitReference = function (reference) { };\n    DirectiveBinder.prototype.visitTextAttribute = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundAttribute = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundEvent = function (attribute) { };\n    DirectiveBinder.prototype.visitBoundAttributeOrEvent = function (node) { };\n    DirectiveBinder.prototype.visitText = function (text) { };\n    DirectiveBinder.prototype.visitBoundText = function (text) { };\n    return DirectiveBinder;\n}());\n/**\n * Processes a template and extract metadata about expressions and symbols within.\n *\n * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched\n * within the template in order to operate.\n *\n * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided\n * by overridden methods from that visitor.\n */\nvar TemplateBinder = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateBinder, _super);\n    function TemplateBinder(bindings, symbols, nestingLevel, scope, template, level) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        _this.symbols = symbols;\n        _this.nestingLevel = nestingLevel;\n        _this.scope = scope;\n        _this.template = template;\n        _this.level = level;\n        // Save a bit of processing time by constructing this closure in advance.\n        _this.visitNode = function (node) { return node.visit(_this); };\n        return _this;\n    }\n    /**\n     * Process a template and extract metadata about expressions and symbols within.\n     *\n     * @param template the nodes of the template to process\n     * @param scope the `Scope` of the template being processed.\n     * @returns three maps which contain metadata about the template: `expressions` which interprets\n     * special `AST` nodes in expressions as pointing to references or variables declared within the\n     * template, `symbols` which maps those variables and references to the nested `Template` which\n     * declares them, if any, and `nestingLevel` which associates each `Template` with a integer\n     * nesting level (how many levels deep within the template structure the `Template` is), starting\n     * at 1.\n     */\n    TemplateBinder.apply = function (template, scope) {\n        var expressions = new Map();\n        var symbols = new Map();\n        var nestingLevel = new Map();\n        // The top-level template has nesting level 0.\n        var binder = new TemplateBinder(expressions, symbols, nestingLevel, scope, template instanceof Template ? template : null, 0);\n        binder.ingest(template);\n        return { expressions: expressions, symbols: symbols, nestingLevel: nestingLevel };\n    };\n    TemplateBinder.prototype.ingest = function (template) {\n        if (template instanceof Template) {\n            // For <ng-template>s, process inputs, outputs, variables, and child nodes. References were\n            // processed in the scope of the containing template.\n            template.inputs.forEach(this.visitNode);\n            template.outputs.forEach(this.visitNode);\n            template.variables.forEach(this.visitNode);\n            template.children.forEach(this.visitNode);\n            // Set the nesting level.\n            this.nestingLevel.set(template, this.level);\n        }\n        else {\n            // Visit each node from the top-level template.\n            template.forEach(this.visitNode);\n        }\n    };\n    TemplateBinder.prototype.visitElement = function (element) {\n        // Vist the inputs, outputs, and children of the element.\n        element.inputs.forEach(this.visitNode);\n        element.outputs.forEach(this.visitNode);\n        element.children.forEach(this.visitNode);\n    };\n    TemplateBinder.prototype.visitTemplate = function (template) {\n        // First, visit the inputs, outputs of the template node.\n        template.inputs.forEach(this.visitNode);\n        template.outputs.forEach(this.visitNode);\n        // References are also evaluated in the outer context.\n        template.references.forEach(this.visitNode);\n        // Next, recurse into the template using its scope, and bumping the nesting level up by one.\n        var childScope = this.scope.getChildScope(template);\n        var binder = new TemplateBinder(this.bindings, this.symbols, this.nestingLevel, childScope, template, this.level + 1);\n        binder.ingest(template);\n    };\n    TemplateBinder.prototype.visitVariable = function (variable) {\n        // Register the `Variable` as a symbol in the current `Template`.\n        if (this.template !== null) {\n            this.symbols.set(variable, this.template);\n        }\n    };\n    TemplateBinder.prototype.visitReference = function (reference) {\n        // Register the `Reference` as a symbol in the current `Template`.\n        if (this.template !== null) {\n            this.symbols.set(reference, this.template);\n        }\n    };\n    // Unused template visitors\n    TemplateBinder.prototype.visitText = function (text) { };\n    TemplateBinder.prototype.visitContent = function (content) { };\n    TemplateBinder.prototype.visitTextAttribute = function (attribute) { };\n    // The remaining visitors are concerned with processing AST expressions within template bindings\n    TemplateBinder.prototype.visitBoundAttribute = function (attribute) { attribute.value.visit(this); };\n    TemplateBinder.prototype.visitBoundEvent = function (event) { event.handler.visit(this); };\n    TemplateBinder.prototype.visitBoundText = function (text) { text.value.visit(this); };\n    // These five types of AST expressions can refer to expression roots, which could be variables\n    // or references in the current scope.\n    TemplateBinder.prototype.visitPropertyRead = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitPropertyRead.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitSafePropertyRead = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitSafePropertyRead.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitPropertyWrite = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitPropertyWrite.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitMethodCall = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitMethodCall.call(this, ast, context);\n    };\n    TemplateBinder.prototype.visitSafeMethodCall = function (ast, context) {\n        this.maybeMap(context, ast, ast.name);\n        return _super.prototype.visitSafeMethodCall.call(this, ast, context);\n    };\n    TemplateBinder.prototype.maybeMap = function (scope, ast, name) {\n        // If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an\n        // `AST` expression that maps to a `Variable` or `Reference`.\n        if (!(ast.receiver instanceof ImplicitReceiver)) {\n            return;\n        }\n        // Check whether the name exists in the current scope. If so, map it. Otherwise, the name is\n        // probably a property on the top-level component context.\n        var target = this.scope.lookup(name);\n        if (target !== null) {\n            this.bindings.set(ast, target);\n        }\n    };\n    return TemplateBinder;\n}(RecursiveAstVisitor));\n/**\n * Metadata container for a `Target` that allows queries for specific bits of metadata.\n *\n * See `BoundTarget` for documentation on the individual methods.\n */\nvar R3BoundTarget = /** @class */ (function () {\n    function R3BoundTarget(target, directives, bindings, references, exprTargets, symbols, nestingLevel) {\n        this.target = target;\n        this.directives = directives;\n        this.bindings = bindings;\n        this.references = references;\n        this.exprTargets = exprTargets;\n        this.symbols = symbols;\n        this.nestingLevel = nestingLevel;\n    }\n    R3BoundTarget.prototype.getDirectivesOfNode = function (node) {\n        return this.directives.get(node) || null;\n    };\n    R3BoundTarget.prototype.getReferenceTarget = function (ref) {\n        return this.references.get(ref) || null;\n    };\n    R3BoundTarget.prototype.getConsumerOfBinding = function (binding) {\n        return this.bindings.get(binding) || null;\n    };\n    R3BoundTarget.prototype.getExpressionTarget = function (expr) {\n        return this.exprTargets.get(expr) || null;\n    };\n    R3BoundTarget.prototype.getTemplateOfSymbol = function (symbol) {\n        return this.symbols.get(symbol) || null;\n    };\n    R3BoundTarget.prototype.getNestingLevel = function (template) { return this.nestingLevel.get(template) || 0; };\n    R3BoundTarget.prototype.getUsedDirectives = function () {\n        var set = new Set();\n        this.directives.forEach(function (dirs) { return dirs.forEach(function (dir) { return set.add(dir); }); });\n        return Array.from(set.values());\n    };\n    return R3BoundTarget;\n}());\nexport { R3BoundTarget };\n//# sourceMappingURL=t2_binder.js.map"]}