{"version":3,"file":"compiler_host.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/aot/compiler_host.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbolResolverHost} from './static_symbol_resolver';\nimport {AotSummaryResolverHost} from './summary_resolver';\n\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface AotCompilerHost extends StaticSymbolResolverHost, AotSummaryResolverHost {\n  /**\n   * Converts a file path to a module name that can be used as an `import.\n   * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n   *\n   * See ImportResolver.\n   */\n  fileNameToModuleName(importedFilePath: string, containingFilePath: string): string;\n  /**\n   * Converts a path that refers to a resource into an absolute filePath\n   * that can be later on used for loading the resource via `loadResource.\n   */\n  resourceNameToFileName(resourceName: string, containingFileName: string): string|null;\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>|string;\n}\n"]}