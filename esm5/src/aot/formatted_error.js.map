{"version":3,"file":"formatted_error.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/aot/formatted_error.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,WAAW,EAAC,MAAM,SAAS,CAAC;AAmBpC,IAAM,iBAAiB,GAAG,oBAAoB,CAAC;AAE/C,SAAS,SAAS,CAAC,KAAa;IAC9B,IAAI,KAAK,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAC1B,IAAI,KAAK,GAAG,CAAC;QAAE,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;IACrE,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACpD,CAAC;AAED,SAAS,WAAW,CAAC,KAAwC,EAAE,MAAkB;IAAlB,uBAAA,EAAA,UAAkB;IAC/E,IAAI,CAAC,KAAK;QAAE,OAAO,EAAE,CAAC;IACtB,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC1B,KAAK,CAAC,QAAQ,CAAC,QAAQ,UAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAC,CAAC,WAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAC,CAAC,OAAG,CAAC,CAAC;QACnF,EAAE,CAAC;IACP,IAAM,MAAM,GAAG,QAAQ,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,CAAI,QAAQ,OAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/D,IAAM,OAAO,GAAG,QAAQ,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAO,QAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IAClE,IAAM,OAAO,GAAG,KAAG,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,OAAS,CAAC;IAEtD,OAAO,KAAG,SAAS,CAAC,MAAM,CAAC,GAAG,OAAO,IAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAE,CAAC;AAC/G,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,KAA4B;IACzD,IAAM,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;IACzC,IAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAmB,CAAC;IACpD,KAAa,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;IACzC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAChC,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAY;IAC3C,OAAO,CAAC,CAAE,KAAa,CAAC,iBAAiB,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {syntaxError} from '../util';\n\nexport interface Position {\n  fileName: string;\n  line: number;\n  column: number;\n}\n\nexport interface FormattedMessageChain {\n  message: string;\n  position?: Position;\n  next?: FormattedMessageChain;\n}\n\nexport type FormattedError = Error & {\n  chain: FormattedMessageChain;\n  position?: Position;\n};\n\nconst FORMATTED_MESSAGE = 'ngFormattedMessage';\n\nfunction indentStr(level: number): string {\n  if (level <= 0) return '';\n  if (level < 6) return ['', ' ', '  ', '   ', '    ', '     '][level];\n  const half = indentStr(Math.floor(level / 2));\n  return half + half + (level % 2 === 1 ? ' ' : '');\n}\n\nfunction formatChain(chain: FormattedMessageChain | undefined, indent: number = 0): string {\n  if (!chain) return '';\n  const position = chain.position ?\n      `${chain.position.fileName}(${chain.position.line+1},${chain.position.column+1})` :\n      '';\n  const prefix = position && indent === 0 ? `${position}: ` : '';\n  const postfix = position && indent !== 0 ? ` at ${position}` : '';\n  const message = `${prefix}${chain.message}${postfix}`;\n\n  return `${indentStr(indent)}${message}${(chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || ''}`;\n}\n\nexport function formattedError(chain: FormattedMessageChain): FormattedError {\n  const message = formatChain(chain) + '.';\n  const error = syntaxError(message) as FormattedError;\n  (error as any)[FORMATTED_MESSAGE] = true;\n  error.chain = chain;\n  error.position = chain.position;\n  return error;\n}\n\nexport function isFormattedError(error: Error): error is FormattedError {\n  return !!(error as any)[FORMATTED_MESSAGE];\n}\n"]}