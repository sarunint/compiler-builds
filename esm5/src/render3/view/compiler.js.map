{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../../../packages/compiler/src/render3/view/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '../../aot/static_symbol';\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileQueryMetadata, CompileTokenMetadata, identifierName, sanitizeIdentifier} from '../../compile_metadata';\nimport {CompileReflector} from '../../compile_reflector';\nimport {BindingForm, convertActionBinding, convertPropertyBinding} from '../../compiler_util/expression_converter';\nimport {ConstantPool, DefinitionKind} from '../../constant_pool';\nimport * as core from '../../core';\nimport {ParsedEvent} from '../../expression_parser/ast';\nimport {LifecycleHooks} from '../../lifecycle_reflector';\nimport * as o from '../../output/output_ast';\nimport {typeSourceSpan} from '../../parse_util';\nimport {CssSelector, SelectorMatcher} from '../../selector';\nimport {ShadowCss} from '../../shadow_css';\nimport {CONTENT_ATTR, HOST_ATTR} from '../../style_compiler';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {OutputContext, error} from '../../util';\nimport {compileFactoryFunction, dependenciesFromGlobalMetadata} from '../r3_factory';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {Render3ParseResult} from '../r3_template_transform';\nimport {typeWithParameters} from '../util';\n\nimport {R3ComponentDef, R3ComponentMetadata, R3DirectiveDef, R3DirectiveMetadata, R3QueryMetadata} from './api';\nimport {BindingScope, TemplateDefinitionBuilder, ValueConverter, renderFlagCheckIfStmt} from './template';\nimport {CONTEXT_NAME, DefinitionMap, RENDER_FLAGS, TEMPORARY_NAME, asLiteral, conditionallyCreateMapObjectLiteral, getQueryPredicate, mapToExpression, temporaryAllocator} from './util';\n\nconst EMPTY_ARRAY: any[] = [];\n\n// This regex matches any binding names that contain the \"attr.\" prefix, e.g. \"attr.required\"\n// If there is a match, the first matching group will contain the attribute name to bind.\nconst ATTR_REGEX = /attr\\.([^\\]]+)/;\n\nfunction baseDirectiveFields(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): {definitionMap: DefinitionMap, statements: o.Statement[]} {\n  const definitionMap = new DefinitionMap();\n\n  // e.g. `type: MyDirective`\n  definitionMap.set('type', meta.type);\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  definitionMap.set('selectors', createDirectiveSelector(meta.selector !));\n\n\n  // e.g. `factory: () => new MyApp(directiveInject(ElementRef))`\n  const result = compileFactoryFunction({\n    name: meta.name,\n    type: meta.type,\n    deps: meta.deps,\n    injectFn: R3.directiveInject,\n    extraStatementFn: createFactoryExtraStatementsFn(meta, bindingParser)\n  });\n  definitionMap.set('factory', result.factory);\n\n  definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n\n  definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n\n  // Initialize hostVars to number of bound host properties (interpolations illegal)\n  let hostVars = Object.keys(meta.host.properties).length;\n\n  // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n  definitionMap.set(\n      'hostBindings',\n      createHostBindingsFunction(meta, bindingParser, constantPool, (slots: number) => {\n        const originalSlots = hostVars;\n        hostVars += slots;\n        return originalSlots;\n      }));\n\n  if (hostVars) {\n    // e.g. `hostVars: 2\n    definitionMap.set('hostVars', o.literal(hostVars));\n  }\n\n  // e.g. `attributes: ['role', 'listbox']`\n  definitionMap.set('attributes', createHostAttributesArray(meta));\n\n  // e.g 'inputs: {a: 'a'}`\n  definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs));\n\n  // e.g 'outputs: {a: 'a'}`\n  definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n\n  if (meta.exportAs !== null) {\n    definitionMap.set('exportAs', o.literal(meta.exportAs));\n  }\n\n  return {definitionMap, statements: result.statements};\n}\n\n/**\n * Add features to the definition map.\n */\nfunction addFeatures(\n    definitionMap: DefinitionMap, meta: R3DirectiveMetadata | R3ComponentMetadata) {\n  // e.g. `features: [NgOnChangesFeature]`\n  const features: o.Expression[] = [];\n\n  const providers = meta.providers;\n  const viewProviders = (meta as R3ComponentMetadata).viewProviders;\n  if (providers || viewProviders) {\n    const args = [providers || new o.LiteralArrayExpr([])];\n    if (viewProviders) {\n      args.push(viewProviders);\n    }\n    features.push(o.importExpr(R3.ProvidersFeature).callFn(args));\n  }\n\n  if (meta.usesInheritance) {\n    features.push(o.importExpr(R3.InheritDefinitionFeature));\n  }\n  if (meta.lifecycle.usesOnChanges) {\n    features.push(o.importExpr(R3.NgOnChangesFeature));\n  }\n  if (features.length) {\n    definitionMap.set('features', o.literalArr(features));\n  }\n}\n\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3DirectiveDef {\n  const {definitionMap, statements} = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n  const expression = o.importExpr(R3.defineDirective).callFn([definitionMap.toLiteralMap()]);\n\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  const type = createTypeForDef(meta, R3.DirectiveDefWithMeta);\n  return {expression, type, statements};\n}\n\nexport interface R3BaseRefMetaData {\n  inputs?: {[key: string]: string | [string, string]};\n  outputs?: {[key: string]: string};\n}\n\n/**\n * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n * @param meta the metadata used for compilation.\n */\nexport function compileBaseDefFromMetadata(meta: R3BaseRefMetaData) {\n  const definitionMap = new DefinitionMap();\n  if (meta.inputs) {\n    const inputs = meta.inputs;\n    const inputsMap = Object.keys(inputs).map(key => {\n      const v = inputs[key];\n      const value = Array.isArray(v) ? o.literalArr(v.map(vx => o.literal(vx))) : o.literal(v);\n      return {key, value, quoted: false};\n    });\n    definitionMap.set('inputs', o.literalMap(inputsMap));\n  }\n  if (meta.outputs) {\n    const outputs = meta.outputs;\n    const outputsMap = Object.keys(outputs).map(key => {\n      const value = o.literal(outputs[key]);\n      return {key, value, quoted: false};\n    });\n    definitionMap.set('outputs', o.literalMap(outputsMap));\n  }\n\n  const expression = o.importExpr(R3.defineBase).callFn([definitionMap.toLiteralMap()]);\n\n  const type = new o.ExpressionType(o.importExpr(R3.BaseDef));\n\n  return {expression, type};\n}\n\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(\n    meta: R3ComponentMetadata, constantPool: ConstantPool,\n    bindingParser: BindingParser): R3ComponentDef {\n  const {definitionMap, statements} = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n\n  const selector = meta.selector && CssSelector.parse(meta.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]`\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      definitionMap.set(\n          'attrs', constantPool.getConstLiteral(\n                       o.literalArr(selectorAttributes.map(\n                           value => value != null ? o.literal(value) : o.literal(undefined))),\n                       /* forceShared */ true));\n    }\n  }\n\n  // Generate the CSS matcher that recognize directive\n  let directiveMatcher: SelectorMatcher|null = null;\n\n  if (meta.directives.size) {\n    const matcher = new SelectorMatcher();\n    meta.directives.forEach((expression, selector: string) => {\n      matcher.addSelectables(CssSelector.parse(selector), expression);\n    });\n    directiveMatcher = matcher;\n  }\n\n  if (meta.viewQueries.length) {\n    definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n  }\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = meta.name;\n  const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n\n  const directivesUsed = new Set<o.Expression>();\n  const pipesUsed = new Set<o.Expression>();\n\n  const template = meta.template;\n  const templateBuilder = new TemplateDefinitionBuilder(\n      constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, null, null, templateName,\n      meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, R3.namespaceHTML,\n      meta.template.relativeContextFilePath);\n\n  const templateFunctionExpression = templateBuilder.buildTemplateFunction(\n      template.nodes, [], template.hasNgContent, template.ngContentSelectors);\n\n  // e.g. `consts: 2`\n  definitionMap.set('consts', o.literal(templateBuilder.getConstCount()));\n\n  // e.g. `vars: 2`\n  definitionMap.set('vars', o.literal(templateBuilder.getVarCount()));\n\n  definitionMap.set('template', templateFunctionExpression);\n\n  // e.g. `directives: [MyDirective]`\n  if (directivesUsed.size) {\n    let directivesExpr: o.Expression = o.literalArr(Array.from(directivesUsed));\n    if (meta.wrapDirectivesAndPipesInClosure) {\n      directivesExpr = o.fn([], [new o.ReturnStatement(directivesExpr)]);\n    }\n    definitionMap.set('directives', directivesExpr);\n  }\n\n  // e.g. `pipes: [MyPipe]`\n  if (pipesUsed.size) {\n    let pipesExpr: o.Expression = o.literalArr(Array.from(pipesUsed));\n    if (meta.wrapDirectivesAndPipesInClosure) {\n      pipesExpr = o.fn([], [new o.ReturnStatement(pipesExpr)]);\n    }\n    definitionMap.set('pipes', pipesExpr);\n  }\n\n  // e.g. `styles: [str1, str2]`\n  if (meta.styles && meta.styles.length) {\n    const styleValues = meta.encapsulation == core.ViewEncapsulation.Emulated ?\n        compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n        meta.styles;\n    const strings = styleValues.map(str => o.literal(str));\n    definitionMap.set('styles', o.literalArr(strings));\n  }\n\n  // e.g. `animations: [trigger('123', [])]`\n  if (meta.animations !== null) {\n    definitionMap.set(\n        'data', o.literalMap([{key: 'animations', value: meta.animations, quoted: false}]));\n  }\n\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  const expression = o.importExpr(R3.defineComponent).callFn([definitionMap.toLiteralMap()]);\n  const type = createTypeForDef(meta, R3.ComponentDefWithMeta);\n\n  return {expression, type, statements};\n}\n\n/**\n * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileDirectiveFromRender2(\n    outputCtx: OutputContext, directive: CompileDirectiveMetadata, reflector: CompileReflector,\n    bindingParser: BindingParser) {\n  const name = identifierName(directive.type) !;\n  name || error(`Cannot resolver the name of ${directive.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Directive);\n\n  const meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n  const res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n * instead of the `R3DirectiveMetadata`.\n *\n * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n * information.\n */\nexport function compileComponentFromRender2(\n    outputCtx: OutputContext, component: CompileDirectiveMetadata, render3Ast: Render3ParseResult,\n    reflector: CompileReflector, bindingParser: BindingParser, directiveTypeBySel: Map<string, any>,\n    pipeTypeByName: Map<string, any>) {\n  const name = identifierName(component.type) !;\n  name || error(`Cannot resolver the name of ${component.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Component);\n\n  const summary = component.toSummary();\n\n  // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n  const meta: R3ComponentMetadata = {\n    ...directiveMetadataFromGlobalMetadata(component, outputCtx, reflector),\n    selector: component.selector,\n    template: {\n      nodes: render3Ast.nodes,\n      hasNgContent: render3Ast.hasNgContent,\n      ngContentSelectors: render3Ast.ngContentSelectors,\n      relativeContextFilePath: '',\n    },\n    directives: typeMapToExpressionMap(directiveTypeBySel, outputCtx),\n    pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx),\n    viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx),\n    wrapDirectivesAndPipesInClosure: false,\n    styles: (summary.template && summary.template.styles) || EMPTY_ARRAY,\n    encapsulation:\n        (summary.template && summary.template.encapsulation) || core.ViewEncapsulation.Emulated,\n    animations: null,\n    viewProviders:\n        component.viewProviders.length > 0 ? new o.WrappedNodeExpr(component.viewProviders) : null\n  };\n  const res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      name, null,\n      [new o.ClassField(definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], res.expression)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\n/**\n * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n */\nfunction directiveMetadataFromGlobalMetadata(\n    directive: CompileDirectiveMetadata, outputCtx: OutputContext,\n    reflector: CompileReflector): R3DirectiveMetadata {\n  const summary = directive.toSummary();\n  const name = identifierName(directive.type) !;\n  name || error(`Cannot resolver the name of ${directive.type}`);\n\n  return {\n    name,\n    type: outputCtx.importExpr(directive.type.reference),\n    typeArgumentCount: 0,\n    typeSourceSpan:\n        typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n    selector: directive.selector,\n    deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n    queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n    lifecycle: {\n      usesOnChanges:\n          directive.type.lifecycleHooks.some(lifecycle => lifecycle == LifecycleHooks.OnChanges),\n    },\n    host: {\n      attributes: directive.hostAttributes,\n      listeners: summary.hostListeners,\n      properties: summary.hostProperties,\n    },\n    inputs: directive.inputs,\n    outputs: directive.outputs,\n    usesInheritance: false,\n    exportAs: null,\n    providers: directive.providers.length > 0 ? new o.WrappedNodeExpr(directive.providers) : null\n  };\n}\n\n/**\n * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n */\nfunction queriesFromGlobalMetadata(\n    queries: CompileQueryMetadata[], outputCtx: OutputContext): R3QueryMetadata[] {\n  return queries.map(query => {\n    let read: o.Expression|null = null;\n    if (query.read && query.read.identifier) {\n      read = outputCtx.importExpr(query.read.identifier.reference);\n    }\n    return {\n      propertyName: query.propertyName,\n      first: query.first,\n      predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n      descendants: query.descendants, read,\n    };\n  });\n}\n\n/**\n * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n * type, or a list of string predicates.\n */\nfunction selectorsFromGlobalMetadata(\n    selectors: CompileTokenMetadata[], outputCtx: OutputContext): o.Expression|string[] {\n  if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n    const selectorStrings = selectors.map(value => value.value as string);\n    selectorStrings.some(value => !value) &&\n        error('Found a type among the string selectors expected');\n    return outputCtx.constantPool.getConstLiteral(\n        o.literalArr(selectorStrings.map(value => o.literal(value))));\n  }\n\n  if (selectors.length == 1) {\n    const first = selectors[0];\n    if (first.identifier) {\n      return outputCtx.importExpr(first.identifier.reference);\n    }\n  }\n\n  error('Unexpected query form');\n  return o.NULL_EXPR;\n}\n\nfunction createQueryDefinition(\n    query: R3QueryMetadata, constantPool: ConstantPool, idx: number | null): o.Expression {\n  const predicate = getQueryPredicate(query, constantPool);\n\n  // e.g. r3.Q(null, somePredicate, false) or r3.Q(0, ['div'], false)\n  const parameters = [\n    o.literal(idx, o.INFERRED_TYPE),\n    predicate,\n    o.literal(query.descendants),\n  ];\n\n  if (query.read) {\n    parameters.push(query.read);\n  }\n\n  return o.importExpr(R3.query).callFn(parameters);\n}\n\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector: string): o.Expression {\n  return asLiteral(core.parseSelectorToR3Selector(selector));\n}\n\nfunction createHostAttributesArray(meta: R3DirectiveMetadata): o.Expression|null {\n  const values: o.Expression[] = [];\n  const attributes = meta.host.attributes;\n  for (let key of Object.getOwnPropertyNames(attributes)) {\n    const value = attributes[key];\n    values.push(o.literal(key), o.literal(value));\n  }\n  if (values.length > 0) {\n    return o.literalArr(values);\n  }\n  return null;\n}\n\n// Return a contentQueries function or null if one is not necessary.\nfunction createContentQueriesFunction(\n    meta: R3DirectiveMetadata, constantPool: ConstantPool): o.Expression|null {\n  if (meta.queries.length) {\n    const statements: o.Statement[] = meta.queries.map((query: R3QueryMetadata) => {\n      const queryDefinition = createQueryDefinition(query, constantPool, null);\n      return o.importExpr(R3.registerContentQuery)\n          .callFn([queryDefinition, o.variable('dirIndex')])\n          .toStmt();\n    });\n    const typeName = meta.name;\n    const parameters = [new o.FnParam('dirIndex', o.NUMBER_TYPE)];\n    return o.fn(\n        parameters, statements, o.INFERRED_TYPE, null,\n        typeName ? `${typeName}_ContentQueries` : null);\n  }\n\n  return null;\n}\n\n// Return a contentQueriesRefresh function or null if one is not necessary.\nfunction createContentQueriesRefreshFunction(meta: R3DirectiveMetadata): o.Expression|null {\n  if (meta.queries.length > 0) {\n    const statements: o.Statement[] = [];\n    const typeName = meta.name;\n    const parameters = [\n      new o.FnParam('dirIndex', o.NUMBER_TYPE),\n      new o.FnParam('queryStartIndex', o.NUMBER_TYPE),\n    ];\n    const directiveInstanceVar = o.variable('instance');\n    // var $tmp$: any;\n    const temporary = temporaryAllocator(statements, TEMPORARY_NAME);\n\n    // const $instance$ = $r3$.ɵload(dirIndex);\n    statements.push(directiveInstanceVar.set(o.importExpr(R3.load).callFn([o.variable('dirIndex')]))\n                        .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n\n    meta.queries.forEach((query: R3QueryMetadata, idx: number) => {\n      const loadQLArg = o.variable('queryStartIndex');\n      const getQueryList = o.importExpr(R3.loadQueryList).callFn([\n        idx > 0 ? loadQLArg.plus(o.literal(idx)) : loadQLArg\n      ]);\n      const assignToTemporary = temporary().set(getQueryList);\n      const callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n\n      const updateDirective = directiveInstanceVar.prop(query.propertyName)\n                                  .set(query.first ? temporary().prop('first') : temporary());\n      const refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n\n      statements.push(refreshQueryAndUpdateDirective.toStmt());\n    });\n\n    return o.fn(\n        parameters, statements, o.INFERRED_TYPE, null,\n        typeName ? `${typeName}_ContentQueriesRefresh` : null);\n  }\n\n  return null;\n}\n\nfunction stringAsType(str: string): o.Type {\n  return o.expressionType(o.literal(str));\n}\n\nfunction stringMapAsType(map: {[key: string]: string | string[]}): o.Type {\n  const mapValues = Object.keys(map).map(key => {\n    const value = Array.isArray(map[key]) ? map[key][0] : map[key];\n    return {\n      key,\n      value: o.literal(value),\n      quoted: true,\n    };\n  });\n  return o.expressionType(o.literalMap(mapValues));\n}\n\nfunction stringArrayAsType(arr: string[]): o.Type {\n  return arr.length > 0 ? o.expressionType(o.literalArr(arr.map(value => o.literal(value)))) :\n                          o.NONE_TYPE;\n}\n\nfunction createTypeForDef(meta: R3DirectiveMetadata, typeBase: o.ExternalReference): o.Type {\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = (meta.selector || '').replace(/\\n/g, '');\n\n  return o.expressionType(o.importExpr(typeBase, [\n    typeWithParameters(meta.type, meta.typeArgumentCount),\n    stringAsType(selectorForType),\n    meta.exportAs !== null ? stringAsType(meta.exportAs) : o.NONE_TYPE,\n    stringMapAsType(meta.inputs),\n    stringMapAsType(meta.outputs),\n    stringArrayAsType(meta.queries.map(q => q.propertyName)),\n  ]));\n}\n\n// Define and update any view queries\nfunction createViewQueriesFunction(\n    meta: R3ComponentMetadata, constantPool: ConstantPool): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: o.Statement[] = [];\n  const tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n\n  for (let i = 0; i < meta.viewQueries.length; i++) {\n    const query = meta.viewQueries[i];\n\n    // creation, e.g. r3.Q(0, somePredicate, true);\n    const queryDefinition = createQueryDefinition(query, constantPool, i);\n    createStatements.push(queryDefinition.toStmt());\n\n    // update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.load).callFn([o.literal(i)]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o.variable(CONTEXT_NAME)\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  }\n\n  const viewQueryFnName = meta.name ? `${meta.name}_Query` : null;\n  return o.fn(\n      [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)],\n      [\n        renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n        renderFlagCheckIfStmt(core.RenderFlags.Update, updateStatements)\n      ],\n      o.INFERRED_TYPE, null, viewQueryFnName);\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n    meta: R3DirectiveMetadata, bindingParser: BindingParser, constantPool: ConstantPool,\n    allocatePureFunctionSlots: (slots: number) => number): o.Expression|null {\n  const statements: o.Statement[] = [];\n\n  const hostBindingSourceSpan = meta.typeSourceSpan;\n\n  const directiveSummary = metadataAsSummary(meta);\n\n  // Calculate the host property bindings\n  const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n  const bindingContext = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n  if (bindings) {\n    const valueConverter = new ValueConverter(\n        constantPool,\n        /* new nodes are illegal here */ () => error('Unexpected node'), allocatePureFunctionSlots,\n        /* pipes are illegal here */ () => error('Unexpected pipe'));\n\n    for (const binding of bindings) {\n      // resolve literal arrays and literal objects\n      const value = binding.expression.visit(valueConverter);\n      const bindingExpr = convertPropertyBinding(\n          null, bindingContext, value, 'b', BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n\n      const {bindingName, instruction} = getBindingNameAndInstruction(binding.name);\n\n      statements.push(...bindingExpr.stmts);\n      statements.push(o.importExpr(instruction)\n                          .callFn([\n                            o.variable('elIndex'),\n                            o.literal(bindingName),\n                            o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n                          ])\n                          .toStmt());\n    }\n  }\n\n  if (statements.length > 0) {\n    const typeName = meta.name;\n    return o.fn(\n        [\n          new o.FnParam('dirIndex', o.NUMBER_TYPE),\n          new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ],\n        statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_HostBindings` : null);\n  }\n\n  return null;\n}\n\nfunction getBindingNameAndInstruction(bindingName: string):\n    {bindingName: string, instruction: o.ExternalReference} {\n  let instruction !: o.ExternalReference;\n\n  // Check to see if this is an attr binding or a property binding\n  const attrMatches = bindingName.match(ATTR_REGEX);\n  if (attrMatches) {\n    bindingName = attrMatches[1];\n    instruction = R3.elementAttribute;\n  } else {\n    instruction = R3.elementProperty;\n  }\n\n  return {bindingName, instruction};\n}\n\nfunction createFactoryExtraStatementsFn(meta: R3DirectiveMetadata, bindingParser: BindingParser):\n    ((instance: o.Expression) => o.Statement[])|null {\n  const eventBindings =\n      bindingParser.createDirectiveHostEventAsts(metadataAsSummary(meta), meta.typeSourceSpan);\n  return eventBindings && eventBindings.length ?\n      (instance: o.Expression) => createHostListeners(instance, eventBindings, meta) :\n      null;\n}\n\nfunction createHostListeners(\n    bindingContext: o.Expression, eventBindings: ParsedEvent[],\n    meta: R3DirectiveMetadata): o.Statement[] {\n  return eventBindings.map(binding => {\n    const bindingExpr = convertActionBinding(\n        null, bindingContext, binding.handler, 'b', () => error('Unexpected interpolation'));\n    const bindingName = binding.name && sanitizeIdentifier(binding.name);\n    const typeName = meta.name;\n    const functionName =\n        typeName && bindingName ? `${typeName}_${bindingName}_HostBindingHandler` : null;\n    const handler = o.fn(\n        [new o.FnParam('$event', o.DYNAMIC_TYPE)], [...bindingExpr.render3Stmts], o.INFERRED_TYPE,\n        null, functionName);\n    return o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt();\n  });\n}\n\nfunction metadataAsSummary(meta: R3DirectiveMetadata): CompileDirectiveSummary {\n  // clang-format off\n  return {\n    hostAttributes: meta.host.attributes,\n    hostListeners: meta.host.listeners,\n    hostProperties: meta.host.properties,\n  } as CompileDirectiveSummary;\n  // clang-format on\n}\n\n\nfunction typeMapToExpressionMap(\n    map: Map<string, StaticSymbol>, outputCtx: OutputContext): Map<string, o.Expression> {\n  // Convert each map entry into another entry where the value is an expression importing the type.\n  const entries = Array.from(map).map(\n      ([key, type]): [string, o.Expression] => [key, outputCtx.importExpr(type)]);\n  return new Map(entries);\n}\n\nconst HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n\n// Represents the groups in the above regex.\nconst enum HostBindingGroup {\n  // group 1: \"prop\" from \"[prop]\", or \"attr.role\" from \"[attr.role]\"\n  Binding = 1,\n\n  // group 2: \"event\" from \"(event)\"\n  Event = 2,\n\n  // group 3: \"@trigger\" from \"@trigger\"\n  Animation = 3,\n}\n\nexport function parseHostBindings(host: {[key: string]: string}): {\n  attributes: {[key: string]: string},\n  listeners: {[key: string]: string},\n  properties: {[key: string]: string},\n  animations: {[key: string]: string},\n} {\n  const attributes: {[key: string]: string} = {};\n  const listeners: {[key: string]: string} = {};\n  const properties: {[key: string]: string} = {};\n  const animations: {[key: string]: string} = {};\n\n  Object.keys(host).forEach(key => {\n    const value = host[key];\n    const matches = key.match(HOST_REG_EXP);\n    if (matches === null) {\n      attributes[key] = value;\n    } else if (matches[HostBindingGroup.Binding] != null) {\n      properties[matches[HostBindingGroup.Binding]] = value;\n    } else if (matches[HostBindingGroup.Event] != null) {\n      listeners[matches[HostBindingGroup.Event]] = value;\n    } else if (matches[HostBindingGroup.Animation] != null) {\n      animations[matches[HostBindingGroup.Animation]] = value;\n    }\n  });\n\n  return {attributes, listeners, properties, animations};\n}\n\nfunction compileStyles(styles: string[], selector: string, hostSelector: string): string[] {\n  const shadowCss = new ShadowCss();\n  return styles.map(style => { return shadowCss !.shimCssText(style, selector, hostSelector); });\n}\n"]}