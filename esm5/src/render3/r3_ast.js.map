{"version":3,"file":"r3_ast.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/r3_ast.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAWH;IACE,cAAmB,KAAa,EAAS,UAA2B;QAAjD,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IACxE,oBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrF,WAAC;AAAD,CAAC,AAHD,IAGC;;AAED;IACE,mBAAmB,KAAU,EAAS,UAA2B;QAA9C,UAAK,GAAL,KAAK,CAAK;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IACrE,yBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAC;AAAD,CAAC,AAHD,IAGC;;AAED;IACE,uBACW,IAAY,EAAS,KAAa,EAAS,UAA2B,EACtE,SAA2B;QAD3B,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;QACtE,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAC1C,6BAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9F,oBAAC;AAAD,CAAC,AALD,IAKC;;AAED;IACE,wBACW,IAAY,EAAS,IAAiB,EAAS,eAAgC,EAC/E,KAAU,EAAS,IAAiB,EAAS,UAA2B;QADxE,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAC/E,UAAK,GAAL,KAAK,CAAK;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAEhF,uCAAwB,GAA/B,UAAgC,IAA0B;QACxD,OAAO,IAAI,cAAc,CACrB,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1F,CAAC;IAED,8BAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/F,qBAAC;AAAD,CAAC,AAXD,IAWC;;AAED;IACE,oBACW,IAAY,EAAS,OAAY,EAAS,MAAmB,EAC7D,KAAkB,EAAS,UAA2B;QADtD,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAK;QAAS,WAAM,GAAN,MAAM,CAAa;QAC7D,UAAK,GAAL,KAAK,CAAa;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAE9D,0BAAe,GAAtB,UAAuB,KAAkB;QACvC,IAAM,MAAM,GAAgB,KAAK,CAAC,IAAI,oBAA4B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QAChG,IAAM,KAAK,GACP,KAAK,CAAC,IAAI,sBAA8B,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1E,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IACpF,CAAC;IAED,0BAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3F,iBAAC;AAAD,CAAC,AAbD,IAaC;;AAED;IACE,iBACW,IAAY,EAAS,UAA2B,EAAS,MAAwB,EACjF,OAAqB,EAAS,QAAgB,EAAS,UAAuB,EAC9E,UAA2B,EAAS,eAAqC,EACzE,aAAmC;QAHnC,SAAI,GAAJ,IAAI,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAkB;QACjF,YAAO,GAAP,OAAO,CAAc;QAAS,aAAQ,GAAR,QAAQ,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAa;QAC9E,eAAU,GAAV,UAAU,CAAiB;QAAS,oBAAe,GAAf,eAAe,CAAsB;QACzE,kBAAa,GAAb,aAAa,CAAsB;IAAG,CAAC;IAClD,uBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxF,cAAC;AAAD,CAAC,AAPD,IAOC;;AAED;IACE,kBACW,UAA2B,EAAS,MAAwB,EAC5D,OAAqB,EAAS,QAAgB,EAAS,UAAuB,EAC9E,SAAqB,EAAS,UAA2B,EACzD,eAAqC,EAAS,aAAmC;QAHjF,eAAU,GAAV,UAAU,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAkB;QAC5D,YAAO,GAAP,OAAO,CAAc;QAAS,aAAQ,GAAR,QAAQ,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAa;QAC9E,cAAS,GAAT,SAAS,CAAY;QAAS,eAAU,GAAV,UAAU,CAAiB;QACzD,oBAAe,GAAf,eAAe,CAAsB;QAAS,kBAAa,GAAb,aAAa,CAAsB;IAAG,CAAC;IAChG,wBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,eAAC;AAAD,CAAC,AAPD,IAOC;;AAED;IACE,iBACW,aAAqB,EAAS,UAA2B,EACzD,UAA2B;QAD3B,kBAAa,GAAb,aAAa,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;QACzD,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAC1C,uBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxF,cAAC;AAAD,CAAC,AALD,IAKC;;AAED;IACE,kBAAmB,IAAY,EAAS,KAAa,EAAS,UAA2B;QAAtE,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAC7F,wBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,eAAC;AAAD,CAAC,AAHD,IAGC;;AAED;IACE,mBAAmB,IAAY,EAAS,KAAa,EAAS,UAA2B;QAAtE,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAC7F,yBAAK,GAAL,UAAc,OAAwB,IAAY,OAAO,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAC;AAAD,CAAC,AAHD,IAGC;;AAmBD;IAAA;IAWA,CAAC;IAVC,kCAAY,GAAZ,UAAa,OAAgB,IAAS,CAAC;IACvC,mCAAa,GAAb,UAAc,QAAkB,IAAS,CAAC;IAC1C,kCAAY,GAAZ,UAAa,OAAgB,IAAS,CAAC;IACvC,mCAAa,GAAb,UAAc,QAAkB,IAAS,CAAC;IAC1C,oCAAc,GAAd,UAAe,SAAoB,IAAS,CAAC;IAC7C,wCAAkB,GAAlB,UAAmB,SAAwB,IAAS,CAAC;IACrD,yCAAmB,GAAnB,UAAoB,SAAyB,IAAS,CAAC;IACvD,qCAAe,GAAf,UAAgB,SAAqB,IAAS,CAAC;IAC/C,+BAAS,GAAT,UAAU,IAAU,IAAS,CAAC;IAC9B,oCAAc,GAAd,UAAe,IAAe,IAAS,CAAC;IAC1C,kBAAC;AAAD,CAAC,AAXD,IAWC;;AAED;IAAA;IAoBA,CAAC;IAnBC,uCAAY,GAAZ,UAAa,OAAgB;QAC3B,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QACnC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IACD,wCAAa,GAAb,UAAc,QAAkB;QAC9B,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QACpC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAClC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QACpC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IACD,uCAAY,GAAZ,UAAa,OAAgB,IAAS,CAAC;IACvC,wCAAa,GAAb,UAAc,QAAkB,IAAS,CAAC;IAC1C,yCAAc,GAAd,UAAe,SAAoB,IAAS,CAAC;IAC7C,6CAAkB,GAAlB,UAAmB,SAAwB,IAAS,CAAC;IACrD,8CAAmB,GAAnB,UAAoB,SAAyB,IAAS,CAAC;IACvD,0CAAe,GAAf,UAAgB,SAAqB,IAAS,CAAC;IAC/C,oCAAS,GAAT,UAAU,IAAU,IAAS,CAAC;IAC9B,yCAAc,GAAd,UAAe,IAAe,IAAS,CAAC;IAC1C,uBAAC;AAAD,CAAC,AApBD,IAoBC;;AAED;IAAA;IA2CA,CAAC;IA1CC,uCAAY,GAAZ,UAAa,OAAgB;QAC3B,IAAM,aAAa,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAM,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QACrD,IAAM,UAAU,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;QACvD,IAAM,WAAW,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAM,aAAa,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,aAAa,IAAI,OAAO,CAAC,UAAU,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM;YAClE,UAAU,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,IAAI,OAAO,CAAC,QAAQ;YAChE,aAAa,IAAI,OAAO,CAAC,UAAU,EAAE;YACvC,OAAO,IAAI,OAAO,CACd,OAAO,CAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAC9E,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;SACzE;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,wCAAa,GAAb,UAAc,QAAkB;QAC9B,IAAM,aAAa,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAM,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtD,IAAM,UAAU,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxD,IAAM,WAAW,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAM,aAAa,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAM,YAAY,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,aAAa,IAAI,QAAQ,CAAC,UAAU,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM;YACpE,WAAW,IAAI,QAAQ,CAAC,QAAQ,IAAI,YAAY,IAAI,QAAQ,CAAC,SAAS;YACtE,aAAa,IAAI,QAAQ,CAAC,UAAU,EAAE;YACxC,OAAO,IAAI,QAAQ,CACf,aAAa,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,YAAY,EAC9E,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;SAC5E;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,uCAAY,GAAZ,UAAa,OAAgB,IAAU,OAAO,OAAO,CAAC,CAAC,CAAC;IAExD,wCAAa,GAAb,UAAc,QAAkB,IAAU,OAAO,QAAQ,CAAC,CAAC,CAAC;IAC5D,yCAAc,GAAd,UAAe,SAAoB,IAAU,OAAO,SAAS,CAAC,CAAC,CAAC;IAChE,6CAAkB,GAAlB,UAAmB,SAAwB,IAAU,OAAO,SAAS,CAAC,CAAC,CAAC;IACxE,8CAAmB,GAAnB,UAAoB,SAAyB,IAAU,OAAO,SAAS,CAAC,CAAC,CAAC;IAC1E,0CAAe,GAAf,UAAgB,SAAqB,IAAU,OAAO,SAAS,CAAC,CAAC,CAAC;IAClE,oCAAS,GAAT,UAAU,IAAU,IAAU,OAAO,IAAI,CAAC,CAAC,CAAC;IAC5C,yCAAc,GAAd,UAAe,IAAe,IAAU,OAAO,IAAI,CAAC,CAAC,CAAC;IACxD,uBAAC;AAAD,CAAC,AA3CD,IA2CC;;AAED,MAAM,UAAU,QAAQ,CAAS,OAAwB,EAAE,KAAa;IACtE,IAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAI,OAAO,CAAC,KAAK,EAAE;QACjB,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAArB,IAAM,IAAI,cAAA;YACb,IAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5D;KACF;SAAM;QACL,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAArB,IAAM,IAAI,cAAA;YACb,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,OAAO,EAAE;gBACX,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACtB;SACF;KACF;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,YAAY,CACxB,OAAsB,EAAE,KAAe;IACzC,IAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;QAArB,IAAM,IAAI,cAAA;QACb,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,OAAO,EAAE;YACX,MAAM,CAAC,IAAI,CAAC,OAAiB,CAAC,CAAC;SAChC;QACD,OAAO,GAAG,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC;KACtC;IACD,OAAO,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;AAClC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '../core';\nimport {AST, BindingType, BoundElementProperty, ParsedEvent, ParsedEventType} from '../expression_parser/ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit<Result>(visitor: Visitor<Result>): Result;\n}\n\nexport class Text implements Node {\n  constructor(public value: string, public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitText(this); }\n}\n\nexport class BoundText implements Node {\n  constructor(public value: AST, public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundText(this); }\n}\n\nexport class TextAttribute implements Node {\n  constructor(\n      public name: string, public value: string, public sourceSpan: ParseSourceSpan,\n      public valueSpan?: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitTextAttribute(this); }\n}\n\nexport class BoundAttribute implements Node {\n  constructor(\n      public name: string, public type: BindingType, public securityContext: SecurityContext,\n      public value: AST, public unit: string|null, public sourceSpan: ParseSourceSpan) {}\n\n  static fromBoundElementProperty(prop: BoundElementProperty) {\n    return new BoundAttribute(\n        prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundAttribute(this); }\n}\n\nexport class BoundEvent implements Node {\n  constructor(\n      public name: string, public handler: AST, public target: string|null,\n      public phase: string|null, public sourceSpan: ParseSourceSpan) {}\n\n  static fromParsedEvent(event: ParsedEvent) {\n    const target: string|null = event.type === ParsedEventType.Regular ? event.targetOrPhase : null;\n    const phase: string|null =\n        event.type === ParsedEventType.Animation ? event.targetOrPhase : null;\n    return new BoundEvent(event.name, event.handler, target, phase, event.sourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitBoundEvent(this); }\n}\n\nexport class Element implements Node {\n  constructor(\n      public name: string, public attributes: TextAttribute[], public inputs: BoundAttribute[],\n      public outputs: BoundEvent[], public children: Node[], public references: Reference[],\n      public sourceSpan: ParseSourceSpan, public startSourceSpan: ParseSourceSpan|null,\n      public endSourceSpan: ParseSourceSpan|null) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitElement(this); }\n}\n\nexport class Template implements Node {\n  constructor(\n      public attributes: TextAttribute[], public inputs: BoundAttribute[],\n      public outputs: BoundEvent[], public children: Node[], public references: Reference[],\n      public variables: Variable[], public sourceSpan: ParseSourceSpan,\n      public startSourceSpan: ParseSourceSpan|null, public endSourceSpan: ParseSourceSpan|null) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitTemplate(this); }\n}\n\nexport class Content implements Node {\n  constructor(\n      public selectorIndex: number, public attributes: TextAttribute[],\n      public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitContent(this); }\n}\n\nexport class Variable implements Node {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitVariable(this); }\n}\n\nexport class Reference implements Node {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n  visit<Result>(visitor: Visitor<Result>): Result { return visitor.visitReference(this); }\n}\n\nexport interface Visitor<Result = any> {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node): Result;\n\n  visitElement(element: Element): Result;\n  visitTemplate(template: Template): Result;\n  visitContent(content: Content): Result;\n  visitVariable(variable: Variable): Result;\n  visitReference(reference: Reference): Result;\n  visitTextAttribute(attribute: TextAttribute): Result;\n  visitBoundAttribute(attribute: BoundAttribute): Result;\n  visitBoundEvent(attribute: BoundEvent): Result;\n  visitText(text: Text): Result;\n  visitBoundText(text: BoundText): Result;\n}\n\nexport class NullVisitor implements Visitor<void> {\n  visitElement(element: Element): void {}\n  visitTemplate(template: Template): void {}\n  visitContent(content: Content): void {}\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n}\n\nexport class RecursiveVisitor implements Visitor<void> {\n  visitElement(element: Element): void {\n    visitAll(this, element.attributes);\n    visitAll(this, element.children);\n    visitAll(this, element.references);\n  }\n  visitTemplate(template: Template): void {\n    visitAll(this, template.attributes);\n    visitAll(this, template.children);\n    visitAll(this, template.references);\n    visitAll(this, template.variables);\n  }\n  visitContent(content: Content): void {}\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n}\n\nexport class TransformVisitor implements Visitor<Node> {\n  visitElement(element: Element): Node {\n    const newAttributes = transformAll(this, element.attributes);\n    const newInputs = transformAll(this, element.inputs);\n    const newOutputs = transformAll(this, element.outputs);\n    const newChildren = transformAll(this, element.children);\n    const newReferences = transformAll(this, element.references);\n    if (newAttributes != element.attributes || newInputs != element.inputs ||\n        newOutputs != element.outputs || newChildren != element.children ||\n        newReferences != element.references) {\n      return new Element(\n          element.name, newAttributes, newInputs, newOutputs, newChildren, newReferences,\n          element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    return element;\n  }\n\n  visitTemplate(template: Template): Node {\n    const newAttributes = transformAll(this, template.attributes);\n    const newInputs = transformAll(this, template.inputs);\n    const newOutputs = transformAll(this, template.outputs);\n    const newChildren = transformAll(this, template.children);\n    const newReferences = transformAll(this, template.references);\n    const newVariables = transformAll(this, template.variables);\n    if (newAttributes != template.attributes || newInputs != template.inputs ||\n        newChildren != template.children || newVariables != template.variables ||\n        newReferences != template.references) {\n      return new Template(\n          newAttributes, newInputs, newOutputs, newChildren, newReferences, newVariables,\n          template.sourceSpan, template.startSourceSpan, template.endSourceSpan);\n    }\n    return template;\n  }\n\n  visitContent(content: Content): Node { return content; }\n\n  visitVariable(variable: Variable): Node { return variable; }\n  visitReference(reference: Reference): Node { return reference; }\n  visitTextAttribute(attribute: TextAttribute): Node { return attribute; }\n  visitBoundAttribute(attribute: BoundAttribute): Node { return attribute; }\n  visitBoundEvent(attribute: BoundEvent): Node { return attribute; }\n  visitText(text: Text): Node { return text; }\n  visitBoundText(text: BoundText): Node { return text; }\n}\n\nexport function visitAll<Result>(visitor: Visitor<Result>, nodes: Node[]): Result[] {\n  const result: Result[] = [];\n  if (visitor.visit) {\n    for (const node of nodes) {\n      const newNode = visitor.visit(node) || node.visit(visitor);\n    }\n  } else {\n    for (const node of nodes) {\n      const newNode = node.visit(visitor);\n      if (newNode) {\n        result.push(newNode);\n      }\n    }\n  }\n  return result;\n}\n\nexport function transformAll<Result extends Node>(\n    visitor: Visitor<Node>, nodes: Result[]): Result[] {\n  const result: Result[] = [];\n  let changed = false;\n  for (const node of nodes) {\n    const newNode = node.visit(visitor);\n    if (newNode) {\n      result.push(newNode as Result);\n    }\n    changed = changed || newNode != node;\n  }\n  return changed ? result : nodes;\n}"]}