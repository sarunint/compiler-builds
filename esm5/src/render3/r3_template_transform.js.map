{"version":3,"file":"r3_template_transform.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/r3_template_transform.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParsedEvent, ParsedProperty, ParsedVariable} from '../expression_parser/ast';\nimport * as html from '../ml_parser/ast';\nimport {replaceNgsp} from '../ml_parser/html_whitespaces';\nimport {isNgTemplate} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {PreparsedElementType, preparseElement} from '../template_parser/template_preparser';\nimport {syntaxError} from '../util';\n\nimport * as t from './r3_ast';\n\n\nconst BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst IDENT_EVENT_IDX = 10;\n\nconst TEMPLATE_ATTR_PREFIX = '*';\n// Default selector used by `<ng-content>` if none specified\nconst DEFAULT_CONTENT_SELECTOR = '*';\n\n// Result of the html AST to Ivy AST transformation\nexport type Render3ParseResult = {\n  nodes: t.Node[]; errors: ParseError[];\n  // Any non default (empty or '*') selector found in the template\n  ngContentSelectors: string[];\n  // Wether the template contains any `<ng-content>`\n  hasNgContent: boolean;\n};\n\nexport function htmlAstToRender3Ast(\n    htmlNodes: html.Node[], bindingParser: BindingParser): Render3ParseResult {\n  const transformer = new HtmlAstToIvyAst(bindingParser);\n  const ivyNodes = html.visitAll(transformer, htmlNodes);\n\n  // Errors might originate in either the binding parser or the html to ivy transformer\n  const allErrors = bindingParser.errors.concat(transformer.errors);\n  const errors: ParseError[] = allErrors.filter(e => e.level === ParseErrorLevel.ERROR);\n\n  if (errors.length > 0) {\n    const errorString = errors.join('\\n');\n    throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n  }\n\n  return {\n    nodes: ivyNodes,\n    errors: allErrors,\n    ngContentSelectors: transformer.ngContentSelectors,\n    hasNgContent: transformer.hasNgContent,\n  };\n}\n\nclass HtmlAstToIvyAst implements html.Visitor {\n  errors: ParseError[] = [];\n  // Selectors for the `ng-content` tags. Only non `*` selectors are recorded here\n  ngContentSelectors: string[] = [];\n  // Any `<ng-content>` in the template ?\n  hasNgContent = false;\n\n  constructor(private bindingParser: BindingParser) {}\n\n  // HTML visitor\n  visitElement(element: html.Element): t.Node|null {\n    const preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    // Whether the element is a `<ng-template>`\n    const isTemplateElement = isNgTemplate(element.name);\n\n    const parsedProperties: ParsedProperty[] = [];\n    const boundEvents: t.BoundEvent[] = [];\n    const variables: t.Variable[] = [];\n    const references: t.Reference[] = [];\n    const attributes: t.TextAttribute[] = [];\n\n    const templateParsedProperties: ParsedProperty[] = [];\n    const templateVariables: t.Variable[] = [];\n\n    // Whether the element has any *-attribute\n    let elementHasInlineTemplate = false;\n\n    for (const attribute of element.attrs) {\n      let hasBinding = false;\n      const normalizedName = normalizeAttributeName(attribute.name);\n\n      // `*attr` defines template bindings\n      let isTemplateBinding = false;\n\n      if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        // *-attributes\n        if (elementHasInlineTemplate) {\n          this.reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute prefixed with *`,\n              attribute.sourceSpan);\n        }\n        isTemplateBinding = true;\n        elementHasInlineTemplate = true;\n        const templateValue = attribute.value;\n        const templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n\n        const parsedVariables: ParsedVariable[] = [];\n        this.bindingParser.parseInlineTemplateBinding(\n            templateKey, templateValue, attribute.sourceSpan, [], templateParsedProperties,\n            parsedVariables);\n        templateVariables.push(\n            ...parsedVariables.map(v => new t.Variable(v.name, v.value, v.sourceSpan)));\n      } else {\n        // Check for variables, events, property bindings, interpolation\n        hasBinding = this.parseAttribute(\n            isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n      }\n\n      if (!hasBinding && !isTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attributes.push(this.visitAttribute(attribute) as t.TextAttribute);\n      }\n    }\n\n    const children: t.Node[] =\n        html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n\n    let parsedElement: t.Node|undefined;\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      // `<ng-content>`\n      this.hasNgContent = true;\n\n      if (element.children && !element.children.every(isEmptyTextNode)) {\n        this.reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n\n      const selector = preparsedElement.selectAttr;\n\n      let attributes: t.TextAttribute[] =\n          element.attrs.map(attribute => this.visitAttribute(attribute));\n\n      const selectorIndex =\n          selector === DEFAULT_CONTENT_SELECTOR ? 0 : this.ngContentSelectors.push(selector);\n      parsedElement = new t.Content(selectorIndex, attributes, element.sourceSpan);\n    } else if (isTemplateElement) {\n      // `<ng-template>`\n      const attrs = this.extractAttributes(element.name, parsedProperties);\n\n      parsedElement = new t.Template(\n          attributes, attrs.bound, boundEvents, children, references, variables, element.sourceSpan,\n          element.startSourceSpan, element.endSourceSpan);\n    } else {\n      const attrs = this.extractAttributes(element.name, parsedProperties);\n\n      parsedElement = new t.Element(\n          element.name, attributes, attrs.bound, boundEvents, children, references,\n          element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n\n    if (elementHasInlineTemplate) {\n      const attrs = this.extractAttributes('ng-template', templateParsedProperties);\n      // TODO(pk): test for this case\n      parsedElement = new t.Template(\n          attrs.literal, attrs.bound, [], [parsedElement], [], templateVariables,\n          element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    return parsedElement;\n  }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(\n        attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan);\n  }\n\n  visitText(text: html.Text): t.Node {\n    const valueNoNgsp = replaceNgsp(text.value);\n    const expr = this.bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n    return expr ? new t.BoundText(expr, text.sourceSpan) : new t.Text(valueNoNgsp, text.sourceSpan);\n  }\n\n  visitComment(comment: html.Comment): null { return null; }\n\n  visitExpansion(expansion: html.Expansion): null { return null; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): null { return null; }\n\n  // convert view engine `ParsedProperty` to a format suitable for IVY\n  private extractAttributes(elementName: string, properties: ParsedProperty[]):\n      {bound: t.BoundAttribute[], literal: t.TextAttribute[]} {\n    const bound: t.BoundAttribute[] = [];\n    const literal: t.TextAttribute[] = [];\n\n    properties.forEach(prop => {\n      if (prop.isLiteral) {\n        literal.push(new t.TextAttribute(prop.name, prop.expression.source || '', prop.sourceSpan));\n      } else {\n        const bep = this.bindingParser.createBoundElementProperty(elementName, prop);\n        bound.push(t.BoundAttribute.fromBoundElementProperty(bep));\n      }\n    });\n\n    return {bound, literal};\n  }\n\n  private parseAttribute(\n      isTemplateElement: boolean, attribute: html.Attribute, matchableAttributes: string[][],\n      parsedProperties: ParsedProperty[], boundEvents: t.BoundEvent[], variables: t.Variable[],\n      references: t.Reference[]) {\n    const name = normalizeAttributeName(attribute.name);\n    const value = attribute.value;\n    const srcSpan = attribute.sourceSpan;\n\n    const bindParts = name.match(BIND_NAME_REGEXP);\n    let hasBinding = false;\n\n    if (bindParts) {\n      hasBinding = true;\n      if (bindParts[KW_BIND_IDX] != null) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const identifier = bindParts[IDENT_KW_IDX];\n          this.parseVariable(identifier, value, srcSpan, variables);\n        } else {\n          this.reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        this.parseReference(identifier, value, srcSpan, references);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        const events: ParsedEvent[] = [];\n        this.bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n        addEvents(events, boundEvents);\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n        this.parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n      } else if (bindParts[KW_AT_IDX]) {\n        this.bindingParser.parseLiteralAttr(\n            name, value, srcSpan, matchableAttributes, parsedProperties);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes,\n            parsedProperties);\n        this.parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this.bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes,\n            parsedProperties);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        const events: ParsedEvent[] = [];\n        this.bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n        addEvents(events, boundEvents);\n      }\n    } else {\n      hasBinding = this.bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, matchableAttributes, parsedProperties);\n    }\n\n    return hasBinding;\n  }\n\n  private parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, variables: t.Variable[]) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n    variables.push(new t.Variable(identifier, value, sourceSpan));\n  }\n\n  private parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, references: t.Reference[]) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    references.push(new t.Reference(identifier, value, sourceSpan));\n  }\n\n  private parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], boundEvents: t.BoundEvent[]) {\n    const events: ParsedEvent[] = [];\n    this.bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, events);\n    addEvents(events, boundEvents);\n  }\n\n  private reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this.errors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nclass NonBindableVisitor implements html.Visitor {\n  visitElement(ast: html.Element): t.Element|null {\n    const preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const children: t.Node[] = html.visitAll(this, ast.children, null);\n    return new t.Element(\n        ast.name, html.visitAll(this, ast.attrs) as t.TextAttribute[],\n        /* inputs */[], /* outputs */[], children,  /* references */[], ast.sourceSpan,\n        ast.startSourceSpan, ast.endSourceSpan);\n  }\n\n  visitComment(comment: html.Comment): any { return null; }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n\n  visitText(text: html.Text): t.Text { return new t.Text(text.value, text.sourceSpan); }\n\n  visitExpansion(expansion: html.Expansion): any { return null; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): any { return null; }\n}\n\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\nfunction normalizeAttributeName(attrName: string): string {\n  return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\n\nfunction addEvents(events: ParsedEvent[], boundEvents: t.BoundEvent[]) {\n  boundEvents.push(...events.map(e => t.BoundEvent.fromParsedEvent(e)));\n}\n\nfunction isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n"]}