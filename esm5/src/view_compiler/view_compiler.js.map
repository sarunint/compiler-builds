{"version":3,"file":"view_compiler.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/view_compiler/view_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompilePipeSummary, rendererTypeName, tokenReference, viewClassName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {BindingForm, BuiltinConverter, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {ArgumentType, BindingFlags, ChangeDetectionStrategy, NodeFlags, QueryBindingType, QueryValueType, ViewFlags} from '../core';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {isNgContainer} from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ParseSourceSpan} from '../parse_util';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n\nimport {componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef} from './provider_compiler';\n\nconst CLASS_ATTR = 'class';\nconst STYLE_ATTR = 'style';\nconst IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n\nexport class ViewCompileResult {\n  constructor(public viewClassVar: string, public rendererTypeVar: string) {}\n}\n\nexport class ViewCompiler {\n  constructor(private _reflector: CompileReflector) {}\n\n  compileComponent(\n      outputCtx: OutputContext, component: CompileDirectiveMetadata, template: TemplateAst[],\n      styles: o.Expression, usedPipes: CompilePipeSummary[]): ViewCompileResult {\n    let embeddedViewCount = 0;\n    const staticQueryIds = findStaticQueryIds(template);\n\n    let renderComponentVarName: string = undefined !;\n    if (!component.isHost) {\n      const template = component.template !;\n      const customRenderData: o.LiteralMapEntry[] = [];\n      if (template.animations && template.animations.length) {\n        customRenderData.push(new o.LiteralMapEntry(\n            'animation', convertValueToOutputAst(outputCtx, template.animations), true));\n      }\n\n      const renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n      renderComponentVarName = renderComponentVar.name !;\n      outputCtx.statements.push(\n          renderComponentVar\n              .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                new o.LiteralMapEntry('encapsulation', o.literal(template.encapsulation), false),\n                new o.LiteralMapEntry('styles', styles, false),\n                new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n              ])]))\n              .toDeclStmt(\n                  o.importType(Identifiers.RendererType2),\n                  [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    }\n\n    const viewBuilderFactory = (parent: ViewBuilder | null): ViewBuilder => {\n      const embeddedViewIndex = embeddedViewCount++;\n      return new ViewBuilder(\n          this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes,\n          staticQueryIds, viewBuilderFactory);\n    };\n\n    const visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template);\n\n    outputCtx.statements.push(...visitor.build());\n\n    return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n  }\n}\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n\ninterface UpdateExpression {\n  context: o.Expression;\n  nodeIndex: number;\n  bindingIndex: number;\n  sourceSpan: ParseSourceSpan;\n  value: AST;\n}\n\nconst LOG_VAR = o.variable('_l');\nconst VIEW_VAR = o.variable('_v');\nconst CHECK_VAR = o.variable('_ck');\nconst COMP_VAR = o.variable('_co');\nconst EVENT_NAME_VAR = o.variable('en');\nconst ALLOW_DEFAULT_VAR = o.variable(`ad`);\n\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver {\n  private compType: o.Type;\n  private nodes: (() => {\n    sourceSpan: ParseSourceSpan | null,\n    nodeDef: o.Expression,\n    nodeFlags: NodeFlags, updateDirectives?: UpdateExpression[], updateRenderer?: UpdateExpression[]\n  })[] = [];\n  private purePipeNodeIndices: {[pipeName: string]: number} = Object.create(null);\n  // Need Object.create so that we don't have builtin values...\n  private refNodeIndices: {[refName: string]: number} = Object.create(null);\n  private variables: VariableAst[] = [];\n  private children: ViewBuilder[] = [];\n\n  public readonly viewName: string;\n\n  constructor(\n      private reflector: CompileReflector, private outputCtx: OutputContext,\n      private parent: ViewBuilder|null, private component: CompileDirectiveMetadata,\n      private embeddedViewIndex: number, private usedPipes: CompilePipeSummary[],\n      private staticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>,\n      private viewBuilderFactory: ViewBuilderFactory) {\n    // TODO(tbosch): The old view compiler used to use an `any` type\n    // for the context in any embedded view. We keep this behaivor for now\n    // to be able to introduce the new view compiler without too many errors.\n    this.compType = this.embeddedViewIndex > 0 ?\n        o.DYNAMIC_TYPE :\n        o.expressionType(outputCtx.importExpr(this.component.type.reference)) !;\n    this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n  }\n\n  visitAll(variables: VariableAst[], astNodes: TemplateAst[]) {\n    this.variables = variables;\n    // create the pipes for the pure pipes immediately, so that we know their indices.\n    if (!this.parent) {\n      this.usedPipes.forEach((pipe) => {\n        if (pipe.pure) {\n          this.purePipeNodeIndices[pipe.name] = this._createPipe(null, pipe);\n        }\n      });\n    }\n\n    if (!this.parent) {\n      const queryIds = staticViewQueryIds(this.staticQueryIds);\n      this.component.viewQueries.forEach((query, queryIndex) => {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        const queryId = queryIndex + 1;\n        const bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n        const flags =\n            NodeFlags.TypeViewQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n        this.nodes.push(() => ({\n                          sourceSpan: null,\n                          nodeFlags: flags,\n                          nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                            o.literal(flags), o.literal(queryId),\n                            new o.LiteralMapExpr([new o.LiteralMapEntry(\n                                query.propertyName, o.literal(bindingType), false)])\n                          ])\n                        }));\n      });\n    }\n    templateVisitAll(this, astNodes);\n    if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n      // if the view is an embedded view, then we need to add an additional root node in some cases\n      this.nodes.push(() => ({\n                        sourceSpan: null,\n                        nodeFlags: NodeFlags.TypeElement,\n                        nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                          o.literal(NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                        ])\n                      }));\n    }\n  }\n\n  build(targetStatements: o.Statement[] = []): o.Statement[] {\n    this.children.forEach((child) => child.build(targetStatements));\n\n    const {updateRendererStmts, updateDirectivesStmts, nodeDefExprs} =\n        this._createNodeExpressions();\n\n    const updateRendererFn = this._createUpdateFn(updateRendererStmts);\n    const updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n\n\n    let viewFlags = ViewFlags.None;\n    if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= ViewFlags.OnPush;\n    }\n    const viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [new o.FnParam(LOG_VAR.name !)],\n        [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n          o.literal(viewFlags),\n          o.literalArr(nodeDefExprs),\n          updateDirectivesFn,\n          updateRendererFn,\n        ]))],\n        o.importType(Identifiers.ViewDefinition),\n        this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n\n  private _createUpdateFn(updateStmts: o.Statement[]): o.Expression {\n    let updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      const preStmts: o.Statement[] = [];\n      if (!this.component.isHost && o.findReadVarNames(updateStmts).has(COMP_VAR.name !)) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      updateFn = o.fn(\n          [\n            new o.FnParam(CHECK_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(VIEW_VAR.name !, o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...updateStmts], o.INFERRED_TYPE);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n    return updateFn;\n  }\n\n  visitNgContent(ast: NgContentAst, context: any): any {\n    // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeNgContent,\n                      nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                        o.literal(ast.ngContentIndex), o.literal(ast.index)\n                      ])\n                    }));\n  }\n\n  visitText(ast: TextAst, context: any): any {\n    // Static text nodes have no check function\n    const checkIndex = -1;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeText,\n                      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                        o.literal(checkIndex),\n                        o.literal(ast.ngContentIndex),\n                        o.literalArr([o.literal(ast.value)]),\n                      ])\n                    }));\n  }\n\n  visitBoundText(ast: BoundTextAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push(null !);\n\n    const astWithSource = <ASTWithSource>ast.value;\n    const inter = <Interpolation>astWithSource.ast;\n\n    const updateRendererExpressions = inter.expressions.map(\n        (expr, bindingIndex) => this._preprocessUpdateExpression(\n            {nodeIndex, bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr}));\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeText,\n      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n        o.literal(checkIndex),\n        o.literal(ast.ngContentIndex),\n        o.literalArr(inter.strings.map(s => o.literal(s))),\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push(null !);\n\n    const {flags, queryMatchesExpr, hostEvents} = this._visitElementOrTemplate(nodeIndex, ast);\n\n    const childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children);\n\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n    //   ViewDefinitionFactory): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        o.variable(childVisitor.viewName),\n      ])\n    });\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push(null !);\n\n    // Using a null element name creates an anchor.\n    const elName: string|null = isNgContainer(ast.name) ? null : ast.name;\n\n    const {flags, usedEvents, queryMatchesExpr, hostBindings: dirHostBindings, hostEvents} =\n        this._visitElementOrTemplate(nodeIndex, ast);\n\n    let inputDefs: o.Expression[] = [];\n    let updateRendererExpressions: UpdateExpression[] = [];\n    let outputDefs: o.Expression[] = [];\n    if (elName) {\n      const hostBindings: any[] = ast.inputs\n                                      .map((inputAst) => ({\n                                             context: COMP_VAR as o.Expression,\n                                             inputAst,\n                                             dirAst: null as any,\n                                           }))\n                                      .concat(dirHostBindings);\n      if (hostBindings.length) {\n        updateRendererExpressions =\n            hostBindings.map((hostBinding, bindingIndex) => this._preprocessUpdateExpression({\n              context: hostBinding.context,\n              nodeIndex,\n              bindingIndex,\n              sourceSpan: hostBinding.inputAst.sourceSpan,\n              value: hostBinding.inputAst.value\n            }));\n        inputDefs = hostBindings.map(\n            hostBinding => elementBindingDef(hostBinding.inputAst, hostBinding.dirAst));\n      }\n      outputDefs = usedEvents.map(\n          ([target, eventName]) => o.literalArr([o.literal(target), o.literal(eventName)]));\n    }\n\n    templateVisitAll(this, ast.children);\n\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    const compAst = ast.directives.find(dirAst => dirAst.directive.isComponent);\n    let compRendererType = o.NULL_EXPR as o.Expression;\n    let compView = o.NULL_EXPR as o.Expression;\n    if (compAst) {\n      compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n      compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n    }\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n        o.literal(checkIndex),\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        o.literal(elName),\n        elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n        inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        compView,\n        compRendererType,\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n\n  private _visitElementOrTemplate(nodeIndex: number, ast: {\n    hasViewContainer: boolean,\n    outputs: BoundEventAst[],\n    directives: DirectiveAst[],\n    providers: ProviderAst[],\n    references: ReferenceAst[],\n    queryMatches: QueryMatch[]\n  }): {\n    flags: NodeFlags,\n    usedEvents: [string | null, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[],\n  } {\n    let flags = NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= NodeFlags.EmbeddedViews;\n    }\n    const usedEvents = new Map<string, [string | null, string]>();\n    ast.outputs.forEach((event) => {\n      const {name, target} = elementEventNameAndTarget(event, null);\n      usedEvents.set(elementEventFullName(target, name), [target, name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        const {name, target} = elementEventNameAndTarget(event, dirAst);\n        usedEvents.set(elementEventFullName(target, name), [target, name]);\n      });\n    });\n    const hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[] = [];\n    const hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[] = [];\n    this._visitComponentFactoryResolverProvider(ast.directives);\n\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let dirAst: DirectiveAst = undefined !;\n      let dirIndex: number = undefined !;\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents,\n            this.staticQueryIds.get(<any>ast) !);\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let valueType: QueryValueType = undefined !;\n      if (tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n        valueType = QueryValueType.ElementRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n        valueType = QueryValueType.ViewContainerRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let valueType: QueryValueType = undefined !;\n      if (!ref.value) {\n        valueType = QueryValueType.RenderElement;\n      } else if (\n          tokenReference(ref.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach((outputAst) => {\n      hostEvents.push({context: COMP_VAR, eventAst: outputAst, dirAst: null !});\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n      hostEvents: hostEvents\n    };\n  }\n\n  private _visitDirective(\n      providerAst: ProviderAst, dirAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, refs: ReferenceAst[], queryMatches: QueryMatch[],\n      usedEvents: Map<string, any>, queryIds: StaticAndDynamicQueryIds): {\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]\n  } {\n    const nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push(null !);\n\n    dirAst.directive.queries.forEach((query, queryIndex) => {\n      const queryId = dirAst.contentQueryStartId + queryIndex;\n      const flags =\n          NodeFlags.TypeContentQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n      const bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n      this.nodes.push(() => ({\n                        sourceSpan: dirAst.sourceSpan,\n                        nodeFlags: flags,\n                        nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                          o.literal(flags), o.literal(queryId),\n                          new o.LiteralMapExpr([new o.LiteralMapEntry(\n                              query.propertyName, o.literal(bindingType), false)])\n                        ]),\n                      }));\n    });\n\n    // Note: the operation below might also create new nodeDefs,\n    // but we don't want them to be a child of a directive,\n    // as they might be a provider/pipe on their own.\n    // I.e. we only allow queries as children of directives nodes.\n    const childCount = this.nodes.length - nodeIndex - 1;\n\n    let {flags, queryMatchExprs, providerExpr, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(\n            o.literalArr([o.literal(ref.name), o.literal(QueryValueType.Provider)]));\n      }\n    });\n\n    if (dirAst.directive.isComponent) {\n      flags |= NodeFlags.Component;\n    }\n\n    const inputDefs = dirAst.inputs.map((inputAst, inputIndex) => {\n      const mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const outputDefs: o.LiteralMapEntry[] = [];\n    const dirMeta = dirAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    let updateDirectiveExpressions: UpdateExpression[] = [];\n    if (dirAst.inputs.length || (flags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0) {\n      updateDirectiveExpressions =\n          dirAst.inputs.map((input, bindingIndex) => this._preprocessUpdateExpression({\n            nodeIndex,\n            bindingIndex,\n            sourceSpan: input.sourceSpan,\n            context: COMP_VAR,\n            value: input.value\n          }));\n    }\n\n    const dirContextExpr =\n        o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n    const hostBindings = dirAst.hostProperties.map((inputAst) => ({\n                                                     context: dirContextExpr,\n                                                     dirAst,\n                                                     inputAst,\n                                                   }));\n    const hostEvents = dirAst.hostEvents.map((hostEventAst) => ({\n                                               context: dirContextExpr,\n                                               eventAst: hostEventAst, dirAst,\n                                             }));\n\n    // Check index is the same as the node index during compilation\n    // They might only differ at runtime\n    const checkIndex = nodeIndex;\n\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: dirAst.sourceSpan,\n      nodeFlags: NodeFlags.TypeDirective | flags,\n      nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n        o.literal(checkIndex),\n        o.literal(flags),\n        queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n        o.literal(childCount),\n        providerExpr,\n        depsExpr,\n        inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n      ]),\n      updateDirectives: updateDirectiveExpressions,\n      directive: dirAst.directive.type,\n    });\n\n    return {hostBindings, hostEvents};\n  }\n\n  private _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n  }\n\n  private _visitComponentFactoryResolverProvider(directives: DirectiveAst[]) {\n    const componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n      const {providerExpr, depsExpr, flags, tokenExpr} = componentFactoryResolverProviderDef(\n          this.reflector, this.outputCtx, NodeFlags.PrivateProvider,\n          componentDirMeta.directive.entryComponents);\n      this._addProviderNode({\n        providerExpr,\n        depsExpr,\n        flags,\n        tokenExpr,\n        queryMatchExprs: [],\n        sourceSpan: componentDirMeta.sourceSpan\n      });\n    }\n  }\n\n  private _addProviderNode(data: {\n    flags: NodeFlags,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan\n  }) {\n    const nodeIndex = this.nodes.length;\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    this.nodes.push(\n        () => ({\n          sourceSpan: data.sourceSpan,\n          nodeFlags: data.flags,\n          nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n            o.literal(data.flags),\n            data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n            data.tokenExpr, data.providerExpr, data.depsExpr\n          ])\n        }));\n  }\n\n  private _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: NodeFlags,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression\n  } {\n    let flags = NodeFlags.None;\n    let queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(\n            o.literalArr([o.literal(match.queryId), o.literal(QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, depsExpr, flags: providerFlags, tokenExpr} =\n        providerDef(this.outputCtx, providerAst);\n    return {\n      flags: flags | providerFlags,\n      queryMatchExprs,\n      providerExpr,\n      depsExpr,\n      tokenExpr,\n      sourceSpan: providerAst.sourceSpan\n    };\n  }\n\n  getLocal(name: string): o.Expression|null {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let currViewExpr: o.Expression = VIEW_VAR;\n    for (let currBuilder: ViewBuilder|null = this; currBuilder; currBuilder = currBuilder.parent,\n                          currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n      // check references\n      const refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n      }\n\n      // check variables\n      const varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        const varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n        return currViewExpr.prop('context').prop(varValue);\n      }\n    }\n    return null;\n  }\n\n  private _createLiteralArrayConverter(sourceSpan: ParseSourceSpan, argCount: number):\n      BuiltinConverter {\n    if (argCount === 0) {\n      const valueExpr = o.importExpr(Identifiers.EMPTY_ARRAY);\n      return () => valueExpr;\n    }\n\n    const checkIndex = this.nodes.length;\n\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureArray,\n                      nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                        o.literal(checkIndex),\n                        o.literal(argCount),\n                      ])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(checkIndex, args);\n  }\n\n  private _createLiteralMapConverter(\n      sourceSpan: ParseSourceSpan, keys: {key: string, quoted: boolean}[]): BuiltinConverter {\n    if (keys.length === 0) {\n      const valueExpr = o.importExpr(Identifiers.EMPTY_MAP);\n      return () => valueExpr;\n    }\n\n    const map = o.literalMap(keys.map((e, i) => ({...e, value: o.literal(i)})));\n    const checkIndex = this.nodes.length;\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureObject,\n                      nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                        o.literal(checkIndex),\n                        map,\n                      ])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(checkIndex, args);\n  }\n\n  private _createPipeConverter(expression: UpdateExpression, name: string, argCount: number):\n      BuiltinConverter {\n    const pipe = this.usedPipes.find((pipeSummary) => pipeSummary.name === name) !;\n    if (pipe.pure) {\n      const checkIndex = this.nodes.length;\n      this.nodes.push(() => ({\n                        sourceSpan: expression.sourceSpan,\n                        nodeFlags: NodeFlags.TypePurePipe,\n                        nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                          o.literal(checkIndex),\n                          o.literal(argCount),\n                        ])\n                      }));\n\n      // find underlying pipe in the component view\n      let compViewExpr: o.Expression = VIEW_VAR;\n      let compBuilder: ViewBuilder = this;\n      while (compBuilder.parent) {\n        compBuilder = compBuilder.parent;\n        compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n      }\n      const pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n      const pipeValueExpr: o.Expression =\n          o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 callCheckStmt(checkIndex, [pipeValueExpr].concat(args)));\n    } else {\n      const nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n      const nodeValueExpr =\n          o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 nodeValueExpr.callMethod('transform', args));\n    }\n  }\n\n  private _createPipe(sourceSpan: ParseSourceSpan|null, pipe: CompilePipeSummary): number {\n    const nodeIndex = this.nodes.length;\n    let flags = NodeFlags.None;\n    pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n      // for pipes, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n\n    const depExprs = pipe.type.diDeps.map((diDep) => depDef(this.outputCtx, diDep));\n    // function pipeDef(\n    //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n    this.nodes.push(\n        () => ({\n          sourceSpan,\n          nodeFlags: NodeFlags.TypePipe,\n          nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n            o.literal(flags), this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n          ])\n        }));\n    return nodeIndex;\n  }\n\n  /**\n   * For the AST in `UpdateExpression.value`:\n   * - create nodes for pipes, literal arrays and, literal maps,\n   * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n   *\n   * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n   */\n  private _preprocessUpdateExpression(expression: UpdateExpression): UpdateExpression {\n    return {\n      nodeIndex: expression.nodeIndex,\n      bindingIndex: expression.bindingIndex,\n      sourceSpan: expression.sourceSpan,\n      context: expression.context,\n      value: convertPropertyBindingBuiltins(\n          {\n            createLiteralArrayConverter: (argCount: number) => this._createLiteralArrayConverter(\n                                             expression.sourceSpan, argCount),\n            createLiteralMapConverter:\n                (keys: {key: string, quoted: boolean}[]) =>\n                    this._createLiteralMapConverter(expression.sourceSpan, keys),\n            createPipeConverter: (name: string, argCount: number) =>\n                                     this._createPipeConverter(expression, name, argCount)\n          },\n          expression.value)\n    };\n  }\n\n  private _createNodeExpressions(): {\n    updateRendererStmts: o.Statement[],\n    updateDirectivesStmts: o.Statement[],\n    nodeDefExprs: o.Expression[]\n  } {\n    const self = this;\n    let updateBindingCount = 0;\n    const updateRendererStmts: o.Statement[] = [];\n    const updateDirectivesStmts: o.Statement[] = [];\n    const nodeDefExprs = this.nodes.map((factory, nodeIndex) => {\n      const {nodeDef, nodeFlags, updateDirectives, updateRenderer, sourceSpan} = factory();\n      if (updateRenderer) {\n        updateRendererStmts.push(\n            ...createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n      }\n      if (updateDirectives) {\n        updateDirectivesStmts.push(...createUpdateStatements(\n            nodeIndex, sourceSpan, updateDirectives,\n            (nodeFlags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0));\n      }\n      // We use a comma expression to call the log function before\n      // the nodeDef function, but still use the result of the nodeDef function\n      // as the value.\n      // Note: We only add the logger to elements / text nodes,\n      // so we don't generate too much code.\n      const logWithNodeDef = nodeFlags & NodeFlags.CatRenderNode ?\n          new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n          nodeDef;\n      return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n    });\n    return {updateRendererStmts, updateDirectivesStmts, nodeDefExprs};\n\n    function createUpdateStatements(\n        nodeIndex: number, sourceSpan: ParseSourceSpan | null, expressions: UpdateExpression[],\n        allowEmptyExprs: boolean): o.Statement[] {\n      const updateStmts: o.Statement[] = [];\n      const exprs = expressions.map(({sourceSpan, context, value}) => {\n        const bindingId = `${updateBindingCount++}`;\n        const nameResolver = context === COMP_VAR ? self : null;\n        const {stmts, currValExpr} =\n            convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General);\n        updateStmts.push(...stmts.map(\n            (stmt: o.Statement) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n        return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n      });\n      if (expressions.length || allowEmptyExprs) {\n        updateStmts.push(o.applySourceSpanToStatementIfNeeded(\n            callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n      }\n      return updateStmts;\n    }\n  }\n\n  private _createElementHandleEventFn(\n      nodeIndex: number,\n      handlers: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]) {\n    const handleEventStmts: o.Statement[] = [];\n    let handleEventBindingCount = 0;\n    handlers.forEach(({context, eventAst, dirAst}) => {\n      const bindingId = `${handleEventBindingCount++}`;\n      const nameResolver = context === COMP_VAR ? this : null;\n      const {stmts, allowDefault} =\n          convertActionBinding(nameResolver, context, eventAst.handler, bindingId);\n      const trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      const {target: eventTarget, name: eventName} = elementEventNameAndTarget(eventAst, dirAst);\n      const fullEventName = elementEventFullName(eventTarget, eventName);\n      handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(\n          new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts),\n          eventAst.sourceSpan));\n    });\n    let handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      const preStmts: o.Statement[] =\n          [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n      if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(COMP_VAR.name !)) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      handleEventFn = o.fn(\n          [\n            new o.FnParam(VIEW_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(EVENT_NAME_VAR.name !, o.INFERRED_TYPE),\n            new o.FnParam(EventHandlerVars.event.name !, o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...handleEventStmts, new o.ReturnStatement(ALLOW_DEFAULT_VAR)],\n          o.INFERRED_TYPE);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n    return handleEventFn;\n  }\n\n  visitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n  visitReference(ast: ReferenceAst, context: any): any {}\n  visitVariable(ast: VariableAst, context: any): any {}\n  visitEvent(ast: BoundEventAst, context: any): any {}\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n  visitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction needsAdditionalRootNode(astNodes: TemplateAst[]): boolean {\n  const lastAstNode = astNodes[astNodes.length - 1];\n  if (lastAstNode instanceof EmbeddedTemplateAst) {\n    return lastAstNode.hasViewContainer;\n  }\n\n  if (lastAstNode instanceof ElementAst) {\n    if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n      return needsAdditionalRootNode(lastAstNode.children);\n    }\n    return lastAstNode.hasViewContainer;\n  }\n\n  return lastAstNode instanceof NgContentAst;\n}\n\n\nfunction elementBindingDef(inputAst: BoundElementPropertyAst, dirAst: DirectiveAst): o.Expression {\n  const inputType = inputAst.type;\n  switch (inputType) {\n    case PropertyBindingType.Attribute:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementAttribute), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Property:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeProperty), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Animation:\n      const bindingType = BindingFlags.TypeProperty |\n          (dirAst && dirAst.directive.isComponent ? BindingFlags.SyntheticHostProperty :\n                                                    BindingFlags.SyntheticProperty);\n      return o.literalArr([\n        o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Class:\n      return o.literalArr(\n          [o.literal(BindingFlags.TypeElementClass), o.literal(inputAst.name), o.NULL_EXPR]);\n    case PropertyBindingType.Style:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementStyle), o.literal(inputAst.name), o.literal(inputAst.unit)\n      ]);\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected: never = inputType;\n      throw new Error(`unexpected ${unexpected}`);\n  }\n}\n\n\nfunction fixedAttrsDef(elementAst: ElementAst): o.Expression {\n  const mapResult: {[key: string]: string} = Object.create(null);\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const value = dirAst.directive.hostAttributes[name];\n      const prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  return o.literalArr(Object.keys(mapResult).sort().map(\n      (attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n\nfunction callCheckStmt(nodeIndex: number, exprs: o.Expression[]): o.Expression {\n  if (exprs.length > 10) {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Dynamic), o.literalArr(exprs)]);\n  } else {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Inline), ...exprs]);\n  }\n}\n\nfunction callUnwrapValue(nodeIndex: number, bindingIdx: number, expr: o.Expression): o.Expression {\n  return o.importExpr(Identifiers.unwrapValue).callFn([\n    VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n  ]);\n}\n\ninterface StaticAndDynamicQueryIds {\n  staticQueryIds: Set<number>;\n  dynamicQueryIds: Set<number>;\n}\n\n\nfunction findStaticQueryIds(\n    nodes: TemplateAst[], result = new Map<TemplateAst, StaticAndDynamicQueryIds>()):\n    Map<TemplateAst, StaticAndDynamicQueryIds> {\n  nodes.forEach((node) => {\n    const staticQueryIds = new Set<number>();\n    const dynamicQueryIds = new Set<number>();\n    let queryMatches: QueryMatch[] = undefined !;\n    if (node instanceof ElementAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const childData = result.get(child) !;\n        childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    } else if (node instanceof EmbeddedTemplateAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const childData = result.get(child) !;\n        childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    }\n    if (queryMatches) {\n      queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n    }\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    result.set(node, {staticQueryIds, dynamicQueryIds});\n  });\n  return result;\n}\n\nfunction staticViewQueryIds(nodeStaticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>):\n    StaticAndDynamicQueryIds {\n  const staticQueryIds = new Set<number>();\n  const dynamicQueryIds = new Set<number>();\n  Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n    entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n    entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n  });\n  dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n  return {staticQueryIds, dynamicQueryIds};\n}\n\nfunction elementEventNameAndTarget(\n    eventAst: BoundEventAst, dirAst: DirectiveAst | null): {name: string, target: string | null} {\n  if (eventAst.isAnimation) {\n    return {\n      name: `@${eventAst.name}.${eventAst.phase}`,\n      target: dirAst && dirAst.directive.isComponent ? 'component' : null\n    };\n  } else {\n    return eventAst;\n  }\n}\n\nfunction calcStaticDynamicQueryFlags(\n    queryIds: StaticAndDynamicQueryIds, queryId: number, isFirst: boolean) {\n  let flags = NodeFlags.None;\n  // Note: We only make queries static that query for a single item.\n  // This is because of backwards compatibility with the old view compiler...\n  if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n    flags |= NodeFlags.StaticQuery;\n  } else {\n    flags |= NodeFlags.DynamicQuery;\n  }\n  return flags;\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n"]}