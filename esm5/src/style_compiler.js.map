{"version":3,"file":"style_compiler.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/style_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {ViewEncapsulation} from './core';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\nimport {OutputContext} from './util';\n\nconst COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport class StylesCompileDependency {\n  constructor(\n      public name: string, public moduleUrl: string, public setValue: (value: any) => void) {}\n}\n\nexport class CompiledStylesheet {\n  constructor(\n      public outputCtx: OutputContext, public stylesVar: string,\n      public dependencies: StylesCompileDependency[], public isShimmed: boolean,\n      public meta: CompileStylesheetMetadata) {}\n}\n\nexport class StyleCompiler {\n  private _shadowCss: ShadowCss = new ShadowCss();\n\n  constructor(private _urlResolver: UrlResolver) {}\n\n  compileComponent(outputCtx: OutputContext, comp: CompileDirectiveMetadata): CompiledStylesheet {\n    const template = comp.template !;\n    return this._compileStyles(\n        outputCtx, comp, new CompileStylesheetMetadata({\n          styles: template.styles,\n          styleUrls: template.styleUrls,\n          moduleUrl: identifierModuleUrl(comp.type)\n        }),\n        this.needsStyleShim(comp), true);\n  }\n\n  compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata,\n      shim: boolean = this.needsStyleShim(comp)): CompiledStylesheet {\n    return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n  }\n\n  needsStyleShim(comp: CompileDirectiveMetadata): boolean {\n    return comp.template !.encapsulation === ViewEncapsulation.Emulated;\n  }\n\n  private _compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata, shim: boolean,\n      isComponentStylesheet: boolean): CompiledStylesheet {\n    const styleExpressions: o.Expression[] =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    const dependencies: StylesCompileDependency[] = [];\n    stylesheet.styleUrls.forEach((styleUrl) => {\n      const exprIndex = styleExpressions.length;\n      // Note: This placeholder will be filled later.\n      styleExpressions.push(null !);\n      dependencies.push(new StylesCompileDependency(\n          getStylesVarName(null), styleUrl,\n          (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n    });\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    const stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    const stmt = o.variable(stylesVar)\n                     .set(o.literalArr(\n                         styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                     .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n                       o.StmtModifier.Final, o.StmtModifier.Exported\n                     ]);\n    outputCtx.statements.push(stmt);\n    return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n  }\n\n  private _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\n}\n\nfunction getStylesVarName(component: CompileDirectiveMetadata | null): string {\n  let result = `styles`;\n  if (component) {\n    result += `_${identifierName(component.type)}`;\n  }\n  return result;\n}\n"]}