{"version":3,"file":"testing.js","sources":["../../../packages/compiler/testing/src/resource_loader_mock.js","../../../packages/compiler/testing/src/schema_registry_mock.js","../../../packages/compiler/testing/src/directive_resolver_mock.js","../../../packages/compiler/testing/src/ng_module_resolver_mock.js","../../../packages/compiler/testing/src/pipe_resolver_mock.js","../../../packages/compiler/testing/src/testing.js","../../../packages/compiler/testing/public_api.js","../../../packages/compiler/testing/testing.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\n/**\n * A mock implementation of {@link ResourceLoader} that allows outgoing requests to be mocked\n * and responded to within a single test, without going to the network.\n */\nexport class MockResourceLoader extends ResourceLoader {\n    constructor() {\n        super(...arguments);\n        this._expectations = [];\n        this._definitions = new Map();\n        this._requests = [];\n    }\n    get(url) {\n        const request = new _PendingRequest(url);\n        this._requests.push(request);\n        return request.getPromise();\n    }\n    hasPendingRequests() { return !!this._requests.length; }\n    /**\n     * Add an expectation for the given URL. Incoming requests will be checked against\n     * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n     * can be used to check if any expectations have not yet been met.\n     *\n     * The response given will be returned if the expectation matches.\n     */\n    expect(url, response) {\n        const expectation = new _Expectation(url, response);\n        this._expectations.push(expectation);\n    }\n    /**\n     * Add a definition for the given URL to return the given response. Unlike expectations,\n     * definitions have no order and will satisfy any matching request at any time. Also\n     * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n     * to return an error.\n     */\n    when(url, response) { this._definitions.set(url, response); }\n    /**\n     * Process pending requests and verify there are no outstanding expectations. Also fails\n     * if no requests are pending.\n     */\n    flush() {\n        if (this._requests.length === 0) {\n            throw new Error('No pending requests to flush');\n        }\n        do {\n            this._processRequest(this._requests.shift());\n        } while (this._requests.length > 0);\n        this.verifyNoOutstandingExpectations();\n    }\n    /**\n     * Throw an exception if any expectations have not been satisfied.\n     */\n    verifyNoOutstandingExpectations() {\n        if (this._expectations.length === 0)\n            return;\n        const urls = [];\n        for (let i = 0; i < this._expectations.length; i++) {\n            const expectation = this._expectations[i];\n            urls.push(expectation.url);\n        }\n        throw new Error(`Unsatisfied requests: ${urls.join(', ')}`);\n    }\n    _processRequest(request) {\n        const url = request.url;\n        if (this._expectations.length > 0) {\n            const expectation = this._expectations[0];\n            if (expectation.url == url) {\n                remove(this._expectations, expectation);\n                request.complete(expectation.response);\n                return;\n            }\n        }\n        if (this._definitions.has(url)) {\n            const response = this._definitions.get(url);\n            request.complete(response == null ? null : response);\n            return;\n        }\n        throw new Error(`Unexpected request ${url}`);\n    }\n}\nclass _PendingRequest {\n    constructor(url) {\n        this.url = url;\n        this.promise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n    complete(response) {\n        if (response == null) {\n            this.reject(`Failed to load ${this.url}`);\n        }\n        else {\n            this.resolve(response);\n        }\n    }\n    getPromise() { return this.promise; }\n}\nclass _Expectation {\n    constructor(url, response) {\n        this.url = url;\n        this.response = response;\n    }\n}\nfunction remove(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n//# sourceMappingURL=resource_loader_mock.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { core } from '@angular/compiler';\nexport class MockSchemaRegistry {\n    constructor(existingProperties, attrPropMapping, existingElements, invalidProperties, invalidAttributes) {\n        this.existingProperties = existingProperties;\n        this.attrPropMapping = attrPropMapping;\n        this.existingElements = existingElements;\n        this.invalidProperties = invalidProperties;\n        this.invalidAttributes = invalidAttributes;\n    }\n    hasProperty(tagName, property, schemas) {\n        const value = this.existingProperties[property];\n        return value === void 0 ? true : value;\n    }\n    hasElement(tagName, schemaMetas) {\n        const value = this.existingElements[tagName.toLowerCase()];\n        return value === void 0 ? true : value;\n    }\n    allKnownElementNames() { return Object.keys(this.existingElements); }\n    securityContext(selector, property, isAttribute) {\n        return core.SecurityContext.NONE;\n    }\n    getMappedPropName(attrName) { return this.attrPropMapping[attrName] || attrName; }\n    getDefaultComponentElementName() { return 'ng-component'; }\n    validateProperty(name) {\n        if (this.invalidProperties.indexOf(name) > -1) {\n            return { error: true, msg: `Binding to property '${name}' is disallowed for security reasons` };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    validateAttribute(name) {\n        if (this.invalidAttributes.indexOf(name) > -1) {\n            return {\n                error: true,\n                msg: `Binding to attribute '${name}' is disallowed for security reasons`\n            };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    normalizeAnimationStyleProperty(propName) { return propName; }\n    normalizeAnimationStyleValue(camelCaseProp, userProvidedProp, val) {\n        return { error: null, value: val.toString() };\n    }\n}\n//# sourceMappingURL=schema_registry_mock.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DirectiveResolver } from '@angular/compiler';\n/**\n * An implementation of {@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nexport class MockDirectiveResolver extends DirectiveResolver {\n    constructor(reflector) {\n        super(reflector);\n        this._directives = new Map();\n    }\n    resolve(type, throwIfNotFound = true) {\n        return this._directives.get(type) || super.resolve(type, throwIfNotFound);\n    }\n    /**\n     * Overrides the {@link core.Directive} for a directive.\n     */\n    setDirective(type, metadata) {\n        this._directives.set(type, metadata);\n    }\n}\n//# sourceMappingURL=directive_resolver_mock.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModuleResolver } from '@angular/compiler';\nexport class MockNgModuleResolver extends NgModuleResolver {\n    constructor(reflector) {\n        super(reflector);\n        this._ngModules = new Map();\n    }\n    /**\n     * Overrides the {@link NgModule} for a module.\n     */\n    setNgModule(type, metadata) {\n        this._ngModules.set(type, metadata);\n    }\n    /**\n     * Returns the {@link NgModule} for a module:\n     * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n     * default\n     * `NgModuleResolver`, see `setNgModule`.\n     */\n    resolve(type, throwIfNotFound = true) {\n        return this._ngModules.get(type) || super.resolve(type, throwIfNotFound);\n    }\n}\n//# sourceMappingURL=ng_module_resolver_mock.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { PipeResolver } from '@angular/compiler';\nexport class MockPipeResolver extends PipeResolver {\n    constructor(refector) {\n        super(refector);\n        this._pipes = new Map();\n    }\n    /**\n     * Overrides the {@link Pipe} for a pipe.\n     */\n    setPipe(type, metadata) { this._pipes.set(type, metadata); }\n    /**\n     * Returns the {@link Pipe} for a pipe:\n     * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n     * default\n     * `PipeResolver`, see `setPipe`.\n     */\n    resolve(type, throwIfNotFound = true) {\n        let metadata = this._pipes.get(type);\n        if (!metadata) {\n            metadata = super.resolve(type, throwIfNotFound);\n        }\n        return metadata;\n    }\n}\n//# sourceMappingURL=pipe_resolver_mock.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport * from './resource_loader_mock';\nexport * from './schema_registry_mock';\nexport * from './directive_resolver_mock';\nexport * from './ng_module_resolver_mock';\nexport * from './pipe_resolver_mock';\n//# sourceMappingURL=testing.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// <reference types=\"node\" />\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\nexport * from './public_api';\n//# sourceMappingURL=testing.js.map"],"names":[],"mappings":"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"}