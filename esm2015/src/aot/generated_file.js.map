{"version":3,"file":"generated_file.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/aot/generated_file.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAY,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AACjE,OAAO,EAAC,iBAAiB,EAAC,MAAM,sBAAsB,CAAC;AAEvD,MAAM,OAAO,aAAa;IAIxB,YACW,UAAkB,EAAS,UAAkB,EAAE,aAAiC;QAAhF,eAAU,GAAV,UAAU,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAQ;QACtD,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;SAC5B;IACH,CAAC;IAED,YAAY,CAAC,KAAoB;QAC/B,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,EAAE;YACxC,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;SACrC;QACD,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;YACvB,OAAO,KAAK,CAAC;SACd;QACD,sEAAsE;QACtE,sBAAsB;QACtB,OAAO,gBAAgB,CAAC,IAAI,CAAC,KAAO,EAAE,KAAK,CAAC,KAAO,CAAC,CAAC;IACvD,CAAC;CACF;AAED,MAAM,UAAU,YAAY,CAAC,IAAmB,EAAE,WAAmB,EAAE;IACrE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QACf,MAAM,IAAI,KAAK,CAAC,oDAAoD,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACxF;IACD,OAAO,IAAI,iBAAiB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACvF,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Statement, areAllEquivalent} from '../output/output_ast';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\n\nexport class GeneratedFile {\n  public source: string|null;\n  public stmts: Statement[]|null;\n\n  constructor(\n      public srcFileUrl: string, public genFileUrl: string, sourceOrStmts: string|Statement[]) {\n    if (typeof sourceOrStmts === 'string') {\n      this.source = sourceOrStmts;\n      this.stmts = null;\n    } else {\n      this.source = null;\n      this.stmts = sourceOrStmts;\n    }\n  }\n\n  isEquivalent(other: GeneratedFile): boolean {\n    if (this.genFileUrl !== other.genFileUrl) {\n      return false;\n    }\n    if (this.source) {\n      return this.source === other.source;\n    }\n    if (other.stmts == null) {\n      return false;\n    }\n    // Note: the constructor guarantees that if this.source is not filled,\n    // then this.stmts is.\n    return areAllEquivalent(this.stmts !, other.stmts !);\n  }\n}\n\nexport function toTypeScript(file: GeneratedFile, preamble: string = ''): string {\n  if (!file.stmts) {\n    throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n  }\n  return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n"]}