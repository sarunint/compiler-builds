{"version":3,"file":"compile_reflector.js","sourceRoot":"","sources":["../../../../packages/compiler/src/compile_reflector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAKH;;GAEG;AACH,MAAM,OAAgB,gBAAgB;CAUrC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from './core';\nimport * as o from './output/output_ast';\n\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n */\nexport abstract class CompileReflector {\n  abstract parameters(typeOrFunc: /*Type*/ any): any[][];\n  abstract annotations(typeOrFunc: /*Type*/ any): any[];\n  abstract shallowAnnotations(typeOrFunc: /*Type*/ any): any[];\n  abstract tryAnnotations(typeOrFunc: /*Type*/ any): any[];\n  abstract propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]};\n  abstract hasLifecycleHook(type: any, lcProperty: string): boolean;\n  abstract guards(typeOrFunc: /* Type */ any): {[key: string]: any};\n  abstract componentModuleUrl(type: /*Type*/ any, cmpMetadata: Component): string;\n  abstract resolveExternalReference(ref: o.ExternalReference): any;\n}\n"]}