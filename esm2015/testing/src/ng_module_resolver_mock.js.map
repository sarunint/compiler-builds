{"version":3,"file":"ng_module_resolver_mock.js","sourceRoot":"","sources":["../../../../../packages/compiler/testing/src/ng_module_resolver_mock.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAmB,gBAAgB,EAAO,MAAM,mBAAmB,CAAC;AAE3E,MAAM,OAAO,oBAAqB,SAAQ,gBAAgB;IAGxD,YAAY,SAA2B;QAAI,KAAK,CAAC,SAAS,CAAC,CAAC;QAFpD,eAAU,GAAG,IAAI,GAAG,EAA4B,CAAC;IAEI,CAAC;IAE9D;;OAEG;IACH,WAAW,CAAC,IAAe,EAAE,QAAuB;QAClD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,IAAe,EAAE,eAAe,GAAG,IAAI;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,eAAe,CAAG,CAAC;IAC7E,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, NgModuleResolver, core} from '@angular/compiler';\n\nexport class MockNgModuleResolver extends NgModuleResolver {\n  private _ngModules = new Map<core.Type, core.NgModule>();\n\n  constructor(reflector: CompileReflector) { super(reflector); }\n\n  /**\n   * Overrides the {@link NgModule} for a module.\n   */\n  setNgModule(type: core.Type, metadata: core.NgModule): void {\n    this._ngModules.set(type, metadata);\n  }\n\n  /**\n   * Returns the {@link NgModule} for a module:\n   * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n   * default\n   * `NgModuleResolver`, see `setNgModule`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.NgModule {\n    return this._ngModules.get(type) || super.resolve(type, throwIfNotFound) !;\n  }\n}\n"]}